/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 16 13:30:59 GMT 2015
 */

package macaw.businessLayer;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SupportingDocument_ESTest extends SupportingDocument_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.SupportingDocument.getDisplayItemIdentifier()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test00()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFileName());
      
      String string0 = supportingDocument0.getDisplayItemIdentifier();
      assertNotNull(string0);
      assertEquals("0", string0);
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFileName());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I29 Branch 6 IFGT L287 - false
   */

  @Test
  public void test01()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getTitle());
      
      supportingDocument0.setTitle("zt&]!C");
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("zt&]!C", supportingDocument0.getTitle());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      
      User user0 = new User("zt&]!C", "zt&]!C");
      assertNotNull(user0);
      assertEquals("zt&]!C", user0.getDisplayName());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("zt&]!C", user0.getPassword());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAffiliation());
      assertEquals("zt&]!C", user0.getUserID());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getFileName());
      assertEquals("", supportingDocument1.getTitle());
      
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertNotNull(arrayList0);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getFileName());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("zt&]!C", user0.getDisplayName());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("zt&]!C", user0.getPassword());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAffiliation());
      assertEquals("zt&]!C", user0.getUserID());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("zt&]!C", supportingDocument0.getTitle());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.SupportingDocument.getDisplayName()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test02()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      
      String string0 = supportingDocument0.getDisplayName();
      assertNotNull(string0);
      assertEquals("-", string0);
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * Goal 1. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I50 Branch 2 IF_ICMPNE L210 - true
   * Goal 2. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I81 Branch 3 IF_ICMPNE L230 - true
   * Goal 3. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I106 Branch 4 IFLE L238 - true
   */

  @Test
  public void test03()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getTitle());
      
      supportingDocument0.setFileName("]F|hR\u0006Cnas05%;`zp");
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("]F|hR\u0006Cnas05%;`zp", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      
      supportingDocument0.setDocumentCode("]F|hR\u0006Cnas05%;`zp");
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("]F|hR\u0006Cnas05%;`zp", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("]F|hR\u0006Cnas05%;`zp", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      
      supportingDocument0.setTitle("]F|hR\u0006Cnas05%;`zp");
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("]F|hR\u0006Cnas05%;`zp", supportingDocument0.getDocumentCode());
      assertEquals("]F|hR\u0006Cnas05%;`zp", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("]F|hR\u0006Cnas05%;`zp", supportingDocument0.getFileName());
      
      SupportingDocument.validateFields(supportingDocument0);
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("]F|hR\u0006Cnas05%;`zp", supportingDocument0.getDocumentCode());
      assertEquals("]F|hR\u0006Cnas05%;`zp", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("]F|hR\u0006Cnas05%;`zp", supportingDocument0.getFileName());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I123 Branch 8 IFGT L318 - false
   * Goal 2. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I170 Branch 9 IFGT L333 - false
   */

  @Test
  public void test04()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getFileName());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals(0, supportingDocument1.getIdentifier());
      
      String string0 = supportingDocument0.getFileName();
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertNotNull(string0);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertEquals("", string0);
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      
      supportingDocument0.setFileName("`f!._c)ZGK");
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertNotSame(supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("`f!._c)ZGK", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getDescription());
      
      supportingDocument1.setDescription("`f!._c)ZGK");
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotSame(supportingDocument1, supportingDocument0);
      assertEquals("`f!._c)ZGK", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getFileName());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals(0, supportingDocument1.getIdentifier());
      
      User user0 = new User("", "");
      assertNotNull(user0);
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getCity());
      
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(arrayList0);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("`f!._c)ZGK", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("`f!._c)ZGK", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getFileName());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getCity());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.SupportingDocument.setIsNewRecord(Z)V: root-Branch
   */

  @Test
  public void test05()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      
      supportingDocument0.setIsNewRecord(false);
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
  }

  //Test case number: 6
  /*
   * 4 covered goals:
   * Goal 1. macaw.businessLayer.SupportingDocument.setDescription(Ljava/lang/String;)V: root-Branch
   * Goal 2. macaw.businessLayer.SupportingDocument.clone()Ljava/lang/Object;: root-Branch
   * Goal 3. macaw.businessLayer.SupportingDocument.setFileName(Ljava/lang/String;)V: root-Branch
   * Goal 4. macaw.businessLayer.SupportingDocument.setIdentifier(I)V: root-Branch
   */

  @Test
  public void test06()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDocumentCode());
      
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(supportingDocument1);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("", supportingDocument1.getDescription());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("", supportingDocument1.getFileName());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.SupportingDocument.setFilePath(Ljava/lang/String;)V: root-Branch
   * Goal 2. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I217 Branch 10 IFGT L348 - false
   */

  @Test
  public void test07()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getFileName());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getTitle());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("", supportingDocument1.getDocumentCode());
      
      User user0 = new User();
      assertNotNull(user0);
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      
      supportingDocument0.setFilePath("zt&]!C");
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertNotSame(supportingDocument0, supportingDocument1);
      assertEquals("zt&]!C", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(arrayList0);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("zt&]!C", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getFileName());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getTitle());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.SupportingDocument.setTitle(Ljava/lang/String;)V: root-Branch
   * Goal 2. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I19 Branch 1 IF_ICMPNE L190 - true
   */

  @Test
  public void test08()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      
      supportingDocument0.setTitle(")(]dQ2azk2d^h.2S}TE%");
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(")(]dQ2azk2d^h.2S}TE%", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      
      try {
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 18 covered goals:
   * Goal 1. macaw.businessLayer.SupportingDocument.getDescription()Ljava/lang/String;: root-Branch
   * Goal 2. macaw.businessLayer.SupportingDocument.getFileName()Ljava/lang/String;: root-Branch
   * Goal 3. macaw.businessLayer.SupportingDocument.getFilePath()Ljava/lang/String;: root-Branch
   * Goal 4. macaw.businessLayer.SupportingDocument.getDocumentCode()Ljava/lang/String;: root-Branch
   * Goal 5. macaw.businessLayer.SupportingDocument.getTitle()Ljava/lang/String;: root-Branch
   * Goal 6. macaw.businessLayer.SupportingDocument.setDocumentCode(Ljava/lang/String;)V: root-Branch
   * Goal 7. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I19 Branch 1 IF_ICMPNE L190 - false
   * Goal 8. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I50 Branch 2 IF_ICMPNE L210 - false
   * Goal 9. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I81 Branch 3 IF_ICMPNE L230 - false
   * Goal 10. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I106 Branch 4 IFLE L238 - false
   * Goal 11. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I124 Branch 5 IFEQ L241 - true
   * Goal 12. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I124 Branch 5 IFEQ L241 - false
   * Goal 13. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I29 Branch 6 IFGT L287 - true
   * Goal 14. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I76 Branch 7 IFGT L302 - true
   * Goal 15. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I76 Branch 7 IFGT L302 - false
   * Goal 16. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I123 Branch 8 IFGT L318 - true
   * Goal 17. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I170 Branch 9 IFGT L333 - true
   * Goal 18. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I217 Branch 10 IFGT L348 - true
   */

  @Test
  public void test09()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      
      User user0 = new User();
      assertNotNull(user0);
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getEmail());
      
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      assertNotNull(arrayList0);
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getEmail());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      supportingDocument0.setDocumentCode("eVOG]49)jA~vN");
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("eVOG]49)jA~vN", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("", supportingDocument1.getFileName());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      
      ArrayList<MacawChangeEvent> arrayList1 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(arrayList1);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertNotSame(arrayList1, arrayList0);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("eVOG]49)jA~vN", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getEmail());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("", supportingDocument1.getFileName());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      
      try {
        SupportingDocument.validateFields(supportingDocument1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.SupportingDocument.isNewRecord()Z: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      
      boolean boolean0 = supportingDocument0.isNewRecord();
      assertFalse(boolean0);
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.SupportingDocument.<init>()V: root-Branch
   * Goal 2. macaw.businessLayer.SupportingDocument.getIdentifier()I: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      
      int int0 = supportingDocument0.getIdentifier();
      assertEquals(0, int0);
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
  }
}
