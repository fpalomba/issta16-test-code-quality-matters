/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 16 13:32:27 GMT 2015
 */

package macaw.businessLayer;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SupportingDocument_ESTest extends SupportingDocument_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I170 Branch 9 IFGT L333 - false
   */

  @Test
  public void test0()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      
      User user0 = new User((String) null, (String) null);
      assertNotNull(user0);
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getCity());
      assertNull(user0.getPassword());
      assertNull(user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getEmail());
      assertNull(user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("UNVERIFIED", user0.getStatus());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(supportingDocument1);
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getFileName());
      assertFalse(supportingDocument1.isNewRecord());
      
      supportingDocument1.setFileName((String) null);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertNull(supportingDocument1.getFileName());
      assertFalse(supportingDocument1.isNewRecord());
      
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertNotNull(arrayList0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertNull(supportingDocument1.getFileName());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getCity());
      assertNull(user0.getPassword());
      assertNull(user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getEmail());
      assertNull(user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("UNVERIFIED", user0.getStatus());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I29 Branch 6 IFGT L287 - false
   */

  @Test
  public void test1()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      
      User user0 = new User((String) null, (String) null);
      assertNotNull(user0);
      assertNull(user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getPhone());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertNull(user0.getDisplayName());
      assertNull(user0.getUserID());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getCounty());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(supportingDocument1);
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getFileName());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("", supportingDocument1.getDescription());
      
      supportingDocument1.setTitle("*ho");
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("*ho", supportingDocument1.getTitle());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getFileName());
      assertEquals("", supportingDocument1.getDescription());
      
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument0);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(arrayList0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getPhone());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertNull(user0.getDisplayName());
      assertNull(user0.getUserID());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getCounty());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("*ho", supportingDocument1.getTitle());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getFileName());
      assertEquals("", supportingDocument1.getDescription());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I217 Branch 10 IFGT L348 - false
   */

  @Test
  public void test2()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument0.getIdentifier());
      
      supportingDocument0.setFilePath("supportingDocument.title.saveChanges");
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("supportingDocument.title.saveChanges", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      
      String string0 = supportingDocument0.getFilePath();
      assertNotNull(string0);
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("supportingDocument.title.saveChanges", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("supportingDocument.title.saveChanges", string0);
      
      supportingDocument0.setDescription("supportingDocument.title.saveChanges");
      assertEquals("supportingDocument.title.saveChanges", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("supportingDocument.title.saveChanges", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      
      User user0 = new User();
      assertNotNull(user0);
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAffiliation());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPhone());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getPostCode());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(supportingDocument1);
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getFileName());
      assertFalse(supportingDocument1.isNewRecord());
      
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(arrayList0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAffiliation());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPhone());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getPostCode());
      assertEquals("supportingDocument.title.saveChanges", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("supportingDocument.title.saveChanges", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getFileName());
      assertFalse(supportingDocument1.isNewRecord());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.SupportingDocument.getDisplayItemIdentifier()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      
      String string0 = supportingDocument0.getDisplayItemIdentifier();
      assertNotNull(string0);
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", string0);
  }

  //Test case number: 4
  @Test
  public void test4()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals(0, supportingDocument0.getIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      
      try {
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I106 Branch 4 IFLE L238 - true
   */

  @Test
  public void test5()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      
      String string0 = supportingDocument0.getDisplayName();
      assertNotNull(string0);
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("-", string0);
      
      supportingDocument0.setTitle("%AaoF@q");
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("%AaoF@q", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      
      supportingDocument0.setFileName("-");
      assertEquals("-", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("%AaoF@q", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      
      supportingDocument0.setDocumentCode("-");
      assertEquals("-", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("%AaoF@q", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("-", supportingDocument0.getDocumentCode());
      
      SupportingDocument.validateFields(supportingDocument0);
      assertEquals("-", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("%AaoF@q", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("-", supportingDocument0.getDocumentCode());
  }

  //Test case number: 6
  /*
   * 4 covered goals:
   * Goal 1. macaw.businessLayer.SupportingDocument.isNewRecord()Z: root-Branch
   * Goal 2. macaw.businessLayer.SupportingDocument.setIsNewRecord(Z)V: root-Branch
   * Goal 3. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I76 Branch 7 IFGT L302 - false
   * Goal 4. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I123 Branch 8 IFGT L318 - false
   */

  @Test
  public void test6()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      
      supportingDocument0.setDescription("foxtrot");
      assertEquals("foxtrot", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      
      boolean boolean0 = supportingDocument0.isNewRecord();
      assertEquals("foxtrot", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      assertFalse(boolean0);
      
      String string0 = supportingDocument0.getDescription();
      assertNotNull(string0);
      assertEquals("foxtrot", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("foxtrot", string0);
      
      supportingDocument0.setDocumentCode("foxtrot");
      assertEquals("foxtrot", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("foxtrot", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      
      supportingDocument0.setIsNewRecord(false);
      assertEquals("foxtrot", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("foxtrot", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(supportingDocument1);
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getFileName());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      
      User user0 = new User();
      assertNotNull(user0);
      assertEquals("", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getDisplayName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAffiliation());
      
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertNotSame(supportingDocument1, supportingDocument0);
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertNotNull(arrayList0);
      assertEquals("", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getDisplayName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAffiliation());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("foxtrot", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("foxtrot", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getFileName());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * Goal 1. macaw.businessLayer.SupportingDocument.getIdentifier()I: root-Branch
   * Goal 2. macaw.businessLayer.SupportingDocument.getDisplayName()Ljava/lang/String;: root-Branch
   * Goal 3. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I19 Branch 1 IF_ICMPNE L190 - false
   * Goal 4. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I50 Branch 2 IF_ICMPNE L210 - true
   * Goal 5. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I81 Branch 3 IF_ICMPNE L230 - false
   */

  @Test
  public void test7()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      
      String string0 = supportingDocument0.getDisplayName();
      assertNotNull(string0);
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("-", string0);
      
      int int0 = supportingDocument0.getIdentifier();
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(0, int0);
      
      supportingDocument0.setDocumentCode("-");
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("-", supportingDocument0.getDocumentCode());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      
      try {
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 24 covered goals:
   * Goal 1. macaw.businessLayer.SupportingDocument.<init>()V: root-Branch
   * Goal 2. macaw.businessLayer.SupportingDocument.getDescription()Ljava/lang/String;: root-Branch
   * Goal 3. macaw.businessLayer.SupportingDocument.setDescription(Ljava/lang/String;)V: root-Branch
   * Goal 4. macaw.businessLayer.SupportingDocument.getFileName()Ljava/lang/String;: root-Branch
   * Goal 5. macaw.businessLayer.SupportingDocument.setFilePath(Ljava/lang/String;)V: root-Branch
   * Goal 6. macaw.businessLayer.SupportingDocument.setTitle(Ljava/lang/String;)V: root-Branch
   * Goal 7. macaw.businessLayer.SupportingDocument.getFilePath()Ljava/lang/String;: root-Branch
   * Goal 8. macaw.businessLayer.SupportingDocument.clone()Ljava/lang/Object;: root-Branch
   * Goal 9. macaw.businessLayer.SupportingDocument.getDocumentCode()Ljava/lang/String;: root-Branch
   * Goal 10. macaw.businessLayer.SupportingDocument.getTitle()Ljava/lang/String;: root-Branch
   * Goal 11. macaw.businessLayer.SupportingDocument.setFileName(Ljava/lang/String;)V: root-Branch
   * Goal 12. macaw.businessLayer.SupportingDocument.setIdentifier(I)V: root-Branch
   * Goal 13. macaw.businessLayer.SupportingDocument.setDocumentCode(Ljava/lang/String;)V: root-Branch
   * Goal 14. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I19 Branch 1 IF_ICMPNE L190 - true
   * Goal 15. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I50 Branch 2 IF_ICMPNE L210 - false
   * Goal 16. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I81 Branch 3 IF_ICMPNE L230 - true
   * Goal 17. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I106 Branch 4 IFLE L238 - false
   * Goal 18. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I124 Branch 5 IFEQ L241 - true
   * Goal 19. macaw.businessLayer.SupportingDocument.validateFields(Lmacaw/businessLayer/SupportingDocument;)V: I124 Branch 5 IFEQ L241 - false
   * Goal 20. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I29 Branch 6 IFGT L287 - true
   * Goal 21. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I76 Branch 7 IFGT L302 - true
   * Goal 22. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I123 Branch 8 IFGT L318 - true
   * Goal 23. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I170 Branch 9 IFGT L333 - true
   * Goal 24. macaw.businessLayer.SupportingDocument.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/SupportingDocument;Lmacaw/businessLayer/SupportingDocument;)Ljava/util/ArrayList;: I217 Branch 10 IFGT L348 - true
   */

  @Test
  public void test8()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertNotNull(supportingDocument0);
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertNotSame(supportingDocument1, supportingDocument0);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument1.equals((Object)supportingDocument0));
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertNotNull(supportingDocument1);
      assertEquals("", supportingDocument1.getFilePath());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertFalse(supportingDocument1.isNewRecord());
      assertEquals("", supportingDocument1.getTitle());
      assertEquals("", supportingDocument1.getDescription());
      assertEquals("", supportingDocument1.getFileName());
      assertEquals("0", supportingDocument1.getDisplayItemIdentifier());
      assertEquals("", supportingDocument1.getDocumentCode());
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      
      String string0 = supportingDocument0.getDescription();
      assertNotSame(supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertNotNull(string0);
      assertEquals("", supportingDocument0.getDescription());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", string0);
      
      supportingDocument0.setTitle("supportingDocument.documentCode.savChngs");
      assertNotSame(supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("supportingDocument.documentCode.savChngs", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      
      User user0 = new User("", "6uztZ<t-N$Vj;6+G");
      assertNotNull(user0);
      assertEquals("6uztZ<t-N$Vj;6+G", user0.getPassword());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      assertNotSame(supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertNotNull(arrayList0);
      assertEquals("6uztZ<t-N$Vj;6+G", user0.getPassword());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("supportingDocument.documentCode.savChngs", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      supportingDocument0.setFileName("6uztZ<t-N$Vj;6+G");
      assertNotSame(supportingDocument0, supportingDocument1);
      assertFalse(supportingDocument0.equals((Object)supportingDocument1));
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("supportingDocument.documentCode.savChngs", supportingDocument0.getTitle());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertEquals("6uztZ<t-N$Vj;6+G", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      
      try {
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
