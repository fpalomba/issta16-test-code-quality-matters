/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 16 01:03:53 GMT 2015
 */

package org.jcvi.jillion.core;

import static org.junit.Assert.*;
import org.junit.Test;
import edu.stanford.nlp.ling.CategoryWordTag;
import edu.stanford.nlp.ling.Label;
import edu.stanford.nlp.ling.StringLabel;
import edu.stanford.nlp.ling.StringLabelFactory;
import edu.stanford.nlp.ling.Tag;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.jcvi.jillion.core.Range;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Range_ESTest extends Range_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range;)V: I10 Branch 4 IFNONNULL L2433 - false
   */

  @Test
  public void test00()  throws Throwable  {
      Range.Builder range_Builder0 = null;
      try {
        range_Builder0 = new Range.Builder((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // range can not be null
         //
      }
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$EmptyLongRange.equals(Ljava/lang/Object;)Z: I7 Branch 149 IF_ACMPNE L2309 - true
   * Goal 2. org.jcvi.jillion.core.Range$EmptyLongRange.equals(Ljava/lang/Object;)Z: I18 Branch 150 IFNONNULL L2312 - true
   * Goal 3. org.jcvi.jillion.core.Range$EmptyLongRange.equals(Ljava/lang/Object;)Z: I32 Branch 151 IF_ACMPEQ L2315 - false
   */

  @Test
  public void test01()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-2654L), (-2654L));
      Object object0 = new Object();
      boolean boolean0 = range0.equals(object0);
      assertFalse(boolean0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$EmptyByteRange.equals(Ljava/lang/Object;)Z: I7 Branch 137 IF_ACMPNE L2161 - true
   * Goal 2. org.jcvi.jillion.core.Range$EmptyByteRange.equals(Ljava/lang/Object;)Z: I18 Branch 138 IFNONNULL L2164 - true
   * Goal 3. org.jcvi.jillion.core.Range$EmptyByteRange.equals(Ljava/lang/Object;)Z: I32 Branch 139 IF_ACMPEQ L2167 - false
   */

  @Test
  public void test02()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 0L, 0L);
      Tag tag0 = new Tag();
      boolean boolean0 = range0.equals((Object) tag0);
      assertFalse(boolean0);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$LongStartIntLengthRange.equals(Ljava/lang/Object;)Z: I32 Branch 114 IF_ACMPEQ L2111 - true
   * Goal 2. org.jcvi.jillion.core.Range$LongStartIntLengthRange.equals(Ljava/lang/Object;)Z: I51 Branch 115 IF_ICMPEQ L2115 - true
   * Goal 3. org.jcvi.jillion.core.Range$LongStartIntLengthRange.equals(Ljava/lang/Object;)Z: I66 Branch 116 IFEQ L2118 - false
   */

  @Test
  public void test03()  throws Throwable  {
      Range range0 = Range.of(4294977024L);
      Range range1 = Range.of(9223372036854775807L);
      boolean boolean0 = range1.equals((Object) range0);
      assertFalse(boolean0);
      assertFalse(range0.isEmpty());
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$LongStartIntLengthRange.equals(Ljava/lang/Object;)Z: I7 Branch 112 IF_ACMPNE L2105 - true
   * Goal 2. org.jcvi.jillion.core.Range$LongStartIntLengthRange.equals(Ljava/lang/Object;)Z: I18 Branch 113 IFNONNULL L2108 - true
   * Goal 3. org.jcvi.jillion.core.Range$LongStartIntLengthRange.equals(Ljava/lang/Object;)Z: I32 Branch 114 IF_ACMPEQ L2111 - false
   */

  @Test
  public void test04()  throws Throwable  {
      Range range0 = Range.of(4294977024L);
      Range range1 = Range.ofLength(4294977024L);
      boolean boolean0 = range0.equals((Object) range1);
      assertFalse(boolean0);
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z: I7 Branch 102 IF_ACMPNE L1932 - true
   * Goal 2. org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z: I18 Branch 103 IFNONNULL L1935 - true
   * Goal 3. org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.equals(Ljava/lang/Object;)Z: I32 Branch 104 IF_ACMPEQ L1938 - false
   */

  @Test
  public void test05()  throws Throwable  {
      Range range0 = Range.of(4294967295L);
      StringLabelFactory stringLabelFactory0 = new StringLabelFactory();
      StringLabel stringLabel0 = (StringLabel)stringLabelFactory0.newLabelFromString("Qnn4s^Os?. cyr");
      CategoryWordTag categoryWordTag0 = new CategoryWordTag((Label) stringLabel0);
      boolean boolean0 = range0.equals((Object) categoryWordTag0);
      assertFalse(range0.isEmpty());
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$UnsignedShortStartShortLengthRange.equals(Ljava/lang/Object;)Z: I7 Branch 87 IF_ACMPNE L1669 - true
   * Goal 2. org.jcvi.jillion.core.Range$UnsignedShortStartShortLengthRange.equals(Ljava/lang/Object;)Z: I18 Branch 88 IFNONNULL L1672 - true
   * Goal 3. org.jcvi.jillion.core.Range$UnsignedShortStartShortLengthRange.equals(Ljava/lang/Object;)Z: I32 Branch 89 IF_ACMPEQ L1675 - false
   */

  @Test
  public void test06()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 2125L, 2125L);
      CategoryWordTag categoryWordTag0 = new CategoryWordTag("{j`y{>WSc`G{q rQl");
      boolean boolean0 = range0.equals((Object) categoryWordTag0);
      assertFalse(boolean0);
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: I7 Branch 82 IF_ACMPNE L1581 - false
   */

  @Test
  public void test07()  throws Throwable  {
      Range range0 = Range.ofLength(4294977024L);
      boolean boolean0 = range0.equals((Object) range0);
      assertTrue(boolean0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: I7 Branch 82 IF_ACMPNE L1581 - true
   * Goal 2. org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: I18 Branch 83 IFNONNULL L1584 - true
   * Goal 3. org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.equals(Ljava/lang/Object;)Z: I32 Branch 84 IF_ACMPEQ L1587 - false
   */

  @Test
  public void test08()  throws Throwable  {
      Range range0 = Range.of(4294977024L);
      Range range1 = Range.ofLength(4294977024L);
      boolean boolean0 = range1.equals((Object) range0);
      assertFalse(boolean0);
      assertFalse(range0.isEmpty());
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.getEnd()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.getLength()J: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.getBegin()J: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I38 Branch 33 IFGT L525 - false
   * Goal 5. org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: I7 Branch 77 IF_ACMPNE L1499 - true
   * Goal 6. org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: I18 Branch 78 IFNONNULL L1502 - true
   * Goal 7. org.jcvi.jillion.core.Range$UnsignedByteStartIntLengthRange.equals(Ljava/lang/Object;)Z: I32 Branch 79 IF_ACMPEQ L1505 - false
   */

  @Test
  public void test09()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.ofLength(2147483647L);
      boolean boolean0 = range0.equals((Object) range_CoordinateSystem0);
      assertFalse(boolean0);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$UnsignedByteStartShortLengthRange.equals(Ljava/lang/Object;)Z: I32 Branch 12 IF_ACMPEQ L1421 - true
   * Goal 2. org.jcvi.jillion.core.Range$UnsignedByteStartShortLengthRange.equals(Ljava/lang/Object;)Z: I51 Branch 13 IF_ICMPEQ L1425 - false
   */

  @Test
  public void test10()  throws Throwable  {
      Range range0 = Range.of(24L);
      Range range1 = Range.ofLength(24L);
      boolean boolean0 = range1.equals((Object) range0);
      assertFalse(boolean0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$UnsignedByteStartShortLengthRange.equals(Ljava/lang/Object;)Z: I7 Branch 10 IF_ACMPNE L1415 - true
   * Goal 2. org.jcvi.jillion.core.Range$UnsignedByteStartShortLengthRange.equals(Ljava/lang/Object;)Z: I18 Branch 11 IFNONNULL L1418 - true
   * Goal 3. org.jcvi.jillion.core.Range$UnsignedByteStartShortLengthRange.equals(Ljava/lang/Object;)Z: I32 Branch 12 IF_ACMPEQ L1421 - false
   */

  @Test
  public void test11()  throws Throwable  {
      Range range0 = Range.of(0L);
      Range range1 = Range.ofLength(4294977024L);
      boolean boolean0 = range0.equals((Object) range1);
      assertFalse(boolean0);
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$ByteRange.equals(Ljava/lang/Object;)Z: I7 Branch 122 IF_ACMPNE L1323 - true
   * Goal 2. org.jcvi.jillion.core.Range$ByteRange.equals(Ljava/lang/Object;)Z: I18 Branch 123 IFNONNULL L1326 - true
   * Goal 3. org.jcvi.jillion.core.Range$ByteRange.equals(Ljava/lang/Object;)Z: I32 Branch 124 IF_ACMPEQ L1329 - false
   */

  @Test
  public void test12()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of((-30L));
      boolean boolean0 = range0.equals((Object) range_CoordinateSystem0);
      assertFalse(range0.isEmpty());
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range$ShortRange.equals(Ljava/lang/Object;)Z: I7 Branch 127 IF_ACMPNE L1243 - false
   */

  @Test
  public void test13()  throws Throwable  {
      Range range0 = Range.of((-273L));
      boolean boolean0 = range0.equals((Object) range0);
      assertTrue(boolean0);
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$ShortRange.equals(Ljava/lang/Object;)Z: I7 Branch 127 IF_ACMPNE L1243 - true
   * Goal 2. org.jcvi.jillion.core.Range$ShortRange.equals(Ljava/lang/Object;)Z: I18 Branch 128 IFNONNULL L1246 - true
   * Goal 3. org.jcvi.jillion.core.Range$ShortRange.equals(Ljava/lang/Object;)Z: I32 Branch 129 IF_ACMPEQ L1249 - false
   */

  @Test
  public void test14()  throws Throwable  {
      Range range0 = Range.of(4294977024L);
      Range range1 = Range.of((-612L));
      boolean boolean0 = range1.equals((Object) range0);
      assertFalse(boolean0);
  }

  //Test case number: 15
  /*
   * 8 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$IntRange.getBegin()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$IntRange.getEnd()J: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range.buildNewSignedRange(JJ)Lorg/jcvi/jillion/core/Range;: I52 Branch 18 IFEQ L486 - false
   * Goal 4. org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I22 Branch 29 IFGT L501 - false
   * Goal 5. org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I29 Branch 30 IFLT L501 - false
   * Goal 6. org.jcvi.jillion.core.Range$IntRange.equals(Ljava/lang/Object;)Z: I7 Branch 132 IF_ACMPNE L1163 - true
   * Goal 7. org.jcvi.jillion.core.Range$IntRange.equals(Ljava/lang/Object;)Z: I18 Branch 133 IFNONNULL L1166 - true
   * Goal 8. org.jcvi.jillion.core.Range$IntRange.equals(Ljava/lang/Object;)Z: I32 Branch 134 IF_ACMPEQ L1169 - false
   */

  @Test
  public void test15()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-32768L), (-32768L));
      CategoryWordTag categoryWordTag0 = new CategoryWordTag("{j`y{>WSc`G{q rQl");
      boolean boolean0 = range0.equals((Object) categoryWordTag0);
      assertFalse(boolean0);
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I8 Branch 74 IFGE L947 - false
   */

  @Test
  public void test16()  throws Throwable  {
      Range range0 = Range.of((-30L));
      // Undeclared exception!
      try {
        List<Range> list0 = range0.split((-30L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // max splitLength must be >= 1
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range.endsBefore(Lorg/jcvi/jillion/core/Range;)Z: I37 Branch 72 IFGE L898 - false
   */

  @Test
  public void test17()  throws Throwable  {
      Range range0 = Range.of(4294977024L);
      Range range1 = Range.ofLength(4294977024L);
      boolean boolean0 = range1.endsBefore(range0);
      assertTrue(boolean0);
      assertFalse(range0.isEmpty());
  }

  //Test case number: 18
  /*
   * 2 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.endsBefore(Lorg/jcvi/jillion/core/Range;)Z: I6 Branch 71 IFNONNULL L894 - true
   * Goal 2. org.jcvi.jillion.core.Range.endsBefore(Lorg/jcvi/jillion/core/Range;)Z: I37 Branch 72 IFGE L898 - true
   */

  @Test
  public void test18()  throws Throwable  {
      Range range0 = Range.of(39L);
      boolean boolean0 = range0.endsBefore(range0);
      assertFalse(boolean0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range.startsBefore(Lorg/jcvi/jillion/core/Range;)Z: I37 Branch 70 IFGE L880 - false
   */

  @Test
  public void test19()  throws Throwable  {
      Range range0 = Range.of((-273L));
      Range range1 = Range.of((-1291L));
      boolean boolean0 = range1.startsBefore(range0);
      assertFalse(range1.isEmpty());
      assertTrue(boolean0);
  }

  //Test case number: 20
  /*
   * 2 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.startsBefore(Lorg/jcvi/jillion/core/Range;)Z: I6 Branch 69 IFNONNULL L876 - true
   * Goal 2. org.jcvi.jillion.core.Range.startsBefore(Lorg/jcvi/jillion/core/Range;)Z: I37 Branch 70 IFGE L880 - true
   */

  @Test
  public void test20()  throws Throwable  {
      Range range0 = Range.of((-273L));
      boolean boolean0 = range0.startsBefore(range0);
      assertFalse(boolean0);
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: I46 Branch 61 IFEQ L802 - false
   * Goal 2. org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I13 Branch 63 IFEQ L832 - false
   * Goal 3. org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I44 Branch 75 IFGE L951 - true
   * Goal 4. org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I73 Branch 76 IFGT L956 - true
   * Goal 5. org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I73 Branch 76 IFGT L956 - false
   */

  @Test
  public void test21()  throws Throwable  {
      Range range0 = Range.of(1L);
      Range range1 = Range.of(4634L);
      Range range2 = range0.intersection(range1);
      List<Range> list0 = range0.split(1L);
      List<Range> list1 = range2.complementFrom((Collection<Range>) list0);
      assertTrue(list0.equals((Object)list1));
      assertTrue(range2.isEmpty());
      assertEquals(1, list0.size());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: I34 Branch 60 IFEQ L799 - false
   */

  @Test
  public void test22()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-2654L), (-2654L));
      Range range1 = range0.intersection(range0);
      assertSame(range1, range0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z: I72 Branch 58 IFLT L781 - false
   */

  @Test
  public void test23()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, (-1190L), 600L);
      Range range0 = range_Builder0.build();
      boolean boolean0 = range0.intersects(range0);
      assertTrue(boolean0);
  }

  //Test case number: 24
  /*
   * 8 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$EmptyByteRange.isEmpty()Z: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$UnsignedShortStartShortLengthRange.getEnd()J: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$UnsignedShortStartShortLengthRange.getLength()J: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range$UnsignedShortStartShortLengthRange.getBegin()J: root-Branch
   * Goal 5. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I78 Branch 35 IFGT L532 - false
   * Goal 6. org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z: I34 Branch 55 IFEQ L768 - false
   * Goal 7. org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z: I46 Branch 56 IFEQ L771 - false
   * Goal 8. org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: I83 Branch 62 IFGT L810 - false
   */

  @Test
  public void test24()  throws Throwable  {
      Range range0 = Range.of(39L);
      Range range1 = Range.of(4634L);
      Range range2 = range0.intersection(range1);
      boolean boolean0 = range0.intersects(range2);
      assertTrue(range2.isEmpty());
      assertFalse(boolean0);
  }

  //Test case number: 25
  /*
   * 5 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$EmptyByteRange.getBegin()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$EmptyByteRange.<init>(B)V: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$EmptyByteRange.getEnd()J: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range.buildNewEmptyRange(J)Lorg/jcvi/jillion/core/Range;: I17 Branch 41 IFGT L554 - false
   * Goal 5. org.jcvi.jillion.core.Range.isSubRangeOf(Lorg/jcvi/jillion/core/Range;)Z: I46 Branch 53 IFGT L749 - true
   */

  @Test
  public void test25()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 0L, 0L);
      Range range1 = Range.of((-14L));
      boolean boolean0 = range0.isSubRangeOf(range1);
      assertFalse(boolean0);
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range.isSubRangeOf(Lorg/jcvi/jillion/core/Range;)Z: I6 Branch 51 IFNONNULL L746 - false
   */

  @Test
  public void test26()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-32768L), (-32768L));
      // Undeclared exception!
      try {
        boolean boolean0 = range0.isSubRangeOf((Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // range can not be null
         //
      }
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.isSubRangeOf(Lorg/jcvi/jillion/core/Range;)Z: I6 Branch 51 IFNONNULL L746 - true
   * Goal 2. org.jcvi.jillion.core.Range.isSubRangeOf(Lorg/jcvi/jillion/core/Range;)Z: I37 Branch 52 IFLT L749 - false
   * Goal 3. org.jcvi.jillion.core.Range.isSubRangeOf(Lorg/jcvi/jillion/core/Range;)Z: I46 Branch 53 IFGT L749 - false
   */

  @Test
  public void test27()  throws Throwable  {
      Range range0 = Range.of(4294977024L);
      boolean boolean0 = range0.isSubRangeOf(range0);
      assertFalse(range0.isEmpty());
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range.getEnd(Lorg/jcvi/jillion/core/Range$CoordinateSystem;)J: I6 Branch 50 IFNONNULL L719 - true
   */

  @Test
  public void test28()  throws Throwable  {
      Range range0 = Range.of(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      long long0 = range0.getEnd(range_CoordinateSystem0);
      assertEquals(0L, long0);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range.getBegin(Lorg/jcvi/jillion/core/Range$CoordinateSystem;)J: I6 Branch 49 IFNONNULL L696 - true
   */

  @Test
  public void test29()  throws Throwable  {
      Range range0 = Range.of(0L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      long long0 = range0.getBegin(range_CoordinateSystem0);
      assertEquals(0L, long0);
  }

  //Test case number: 30
  /*
   * 5 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.buildNewEmptyRange(J)Lorg/jcvi/jillion/core/Range;: I53 Branch 43 IFGT L558 - true
   * Goal 2. org.jcvi.jillion.core.Range.complementFrom(Ljava/util/Collection;)Ljava/util/List;: I27 Branch 68 IFEQ L858 - true
   * Goal 3. org.jcvi.jillion.core.Range.complementFrom(Ljava/util/Collection;)Ljava/util/List;: I27 Branch 68 IFEQ L858 - false
   * Goal 4. org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I8 Branch 74 IFGE L947 - true
   * Goal 5. org.jcvi.jillion.core.Range.split(J)Ljava/util/List;: I44 Branch 75 IFGE L951 - false
   */

  @Test
  public void test30()  throws Throwable  {
      Range range0 = Range.of(4294967295L);
      List<Range> list0 = range0.split(786432L);
      List<Range> list1 = range0.complementFrom((Collection<Range>) list0);
      assertTrue(list1.isEmpty());
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z: I22 Branch 25 IFGT L497 - true
   * Goal 2. org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I15 Branch 28 IFLT L501 - false
   * Goal 3. org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I22 Branch 29 IFGT L501 - true
   */

  @Test
  public void test31()  throws Throwable  {
      Range range0 = Range.of((-1401L), 4294967339L);
      assertFalse(range0.isEmpty());
  }

  //Test case number: 32
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.canFitInSignedByte(JJ)Z: I8 Branch 19 IFGT L493 - true
   * Goal 2. org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z: I8 Branch 23 IFGT L497 - true
   * Goal 3. org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I8 Branch 27 IFGT L501 - true
   */

  @Test
  public void test32()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-9223372036854775808L), (-157L));
      assertFalse(range0.isEmpty());
  }

  //Test case number: 33
  /*
   * 2 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$Comparators$2.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: I68 Branch 161 IFNE L210 - true
   * Goal 2. org.jcvi.jillion.core.Range.canFitInSignedByte(JJ)Z: I22 Branch 21 IFGT L493 - true
   */

  @Test
  public void test33()  throws Throwable  {
      Range.Comparators range_Comparators0 = Range.Comparators.DEPARTURE;
      Range range0 = Range.ofLength(730L);
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range1 = Range.of(range_CoordinateSystem0, (long) 0, 1196L);
      int int0 = range_Comparators0.compare(range0, range1);
      assertEquals((-1), int0);
  }

  //Test case number: 34
  /*
   * 4 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.ofLength(J)Lorg/jcvi/jillion/core/Range;: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$Comparators$2.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: I6 Branch 159 IFNONNULL L198 - true
   * Goal 3. org.jcvi.jillion.core.Range$Comparators$2.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: I33 Branch 160 IFNONNULL L201 - true
   * Goal 4. org.jcvi.jillion.core.Range$Comparators$2.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: I68 Branch 161 IFNE L210 - false
   */

  @Test
  public void test34()  throws Throwable  {
      Range.Comparators range_Comparators0 = Range.Comparators.DEPARTURE;
      Range range0 = Range.ofLength(730L);
      int int0 = range_Comparators0.compare(range0, range0);
      assertEquals(0, int0);
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: I68 Branch 158 IFNE L177 - false
   */

  @Test
  public void test35()  throws Throwable  {
      Range.Comparators range_Comparators0 = Range.Comparators.ARRIVAL;
      Range range0 = Range.of(1L);
      int int0 = range_Comparators0.compare(range0, range0);
      assertEquals(0, int0);
  }

  //Test case number: 36
  /*
   * 10 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: I6 Branch 156 IFNONNULL L165 - true
   * Goal 2. org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: I33 Branch 157 IFNONNULL L168 - true
   * Goal 3. org.jcvi.jillion.core.Range$Comparators$1.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: I68 Branch 158 IFNE L177 - true
   * Goal 4. org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z: I6 Branch 54 IFNONNULL L764 - true
   * Goal 5. org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z: I34 Branch 55 IFEQ L768 - true
   * Goal 6. org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z: I46 Branch 56 IFEQ L771 - true
   * Goal 7. org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z: I63 Branch 57 IFGT L781 - false
   * Goal 8. org.jcvi.jillion.core.Range.intersects(Lorg/jcvi/jillion/core/Range;)Z: I72 Branch 58 IFLT L781 - true
   * Goal 9. org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I57 Branch 65 IFNE L838 - false
   * Goal 10. org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I91 Branch 67 IFNE L845 - false
   */

  @Test
  public void test36()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, (-1190L), 600L);
      Range range0 = range_Builder0.build();
      Range range1 = Range.of((-99L), 0L);
      List<Range> list0 = range0.complement(range1);
      assertEquals(2, list0.size());
  }

  //Test case number: 37
  /*
   * 4 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getLength()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getEnd()J: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$UnsignedShortStartLongLengthRange.getBegin()J: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I98 Branch 36 IFGT L535 - true
   */

  @Test
  public void test37()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 3742L, 6052925928835645432L);
      assertFalse(range0.isEmpty());
  }

  //Test case number: 38
  /*
   * 10 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$EmptyShortRange.isEmpty()Z: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$EmptyShortRange.<init>(S)V: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$EmptyShortRange.getEnd()J: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range$EmptyShortRange.getBegin()J: root-Branch
   * Goal 5. org.jcvi.jillion.core.Range$EmptyLongRange.getEnd()J: root-Branch
   * Goal 6. org.jcvi.jillion.core.Range$EmptyLongRange.getBegin()J: root-Branch
   * Goal 7. org.jcvi.jillion.core.Range$EmptyLongRange.<init>(J)V: root-Branch
   * Goal 8. org.jcvi.jillion.core.Range$EmptyLongRange.isEmpty()Z: root-Branch
   * Goal 9. org.jcvi.jillion.core.Range.buildNewEmptyRange(J)Lorg/jcvi/jillion/core/Range;: I8 Branch 40 IFLT L553 - true
   * Goal 10. org.jcvi.jillion.core.Range.buildNewEmptyRange(J)Lorg/jcvi/jillion/core/Range;: I35 Branch 42 IFGT L556 - false
   */

  @Test
  public void test38()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, (-1190L), 600L);
      Range range0 = range_Builder0.build();
      List<Range> list0 = range0.complement(range0);
      assertTrue(list0.isEmpty());
  }

  //Test case number: 39
  /*
   * 7 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$LongRange.getEnd()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$LongRange.getBegin()J: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range.buildNewSignedRange(JJ)Lorg/jcvi/jillion/core/Range;: I30 Branch 17 IFEQ L484 - true
   * Goal 4. org.jcvi.jillion.core.Range.buildNewSignedRange(JJ)Lorg/jcvi/jillion/core/Range;: I52 Branch 18 IFEQ L486 - true
   * Goal 5. org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z: I15 Branch 24 IFLT L497 - true
   * Goal 6. org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I8 Branch 27 IFGT L501 - false
   * Goal 7. org.jcvi.jillion.core.Range.canFitInSignedInt(JJ)Z: I15 Branch 28 IFLT L501 - true
   */

  @Test
  public void test39()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.RESIDUE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, (-2147483648L), (-99L));
      assertFalse(range0.isEmpty());
  }

  //Test case number: 40
  /*
   * 7 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getEnd()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getLength()J: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.getBegin()J: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I136 Branch 38 IFGT L541 - true
   * Goal 5. org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.equals(Ljava/lang/Object;)Z: I7 Branch 107 IF_ACMPNE L2019 - true
   * Goal 6. org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.equals(Ljava/lang/Object;)Z: I18 Branch 108 IFNONNULL L2022 - true
   * Goal 7. org.jcvi.jillion.core.Range$UnsignedIntStartLongLengthRange.equals(Ljava/lang/Object;)Z: I32 Branch 109 IF_ACMPEQ L2025 - false
   */

  @Test
  public void test40()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.SPACE_BASED;
      Range range0 = Range.of(range_CoordinateSystem0, 4294967295L, 9223372036854775807L);
      boolean boolean0 = range0.equals((Object) range_CoordinateSystem0);
      assertFalse(range0.isEmpty());
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range$CoordinateSystem.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test41()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      String string0 = range_CoordinateSystem0.toString();
      assertEquals("Zero Based", string0);
  }

  //Test case number: 42
  /*
   * 6 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getBegin()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getEnd()J: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$UnsignedShortStartIntLengthRange.getLength()J: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I69 Branch 34 IFGT L531 - false
   * Goal 5. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I78 Branch 35 IFGT L532 - true
   * Goal 6. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I98 Branch 36 IFGT L535 - false
   */

  @Test
  public void test42()  throws Throwable  {
      Range range0 = Range.of(1368L, 4294967295L);
      assertFalse(range0.isEmpty());
  }

  //Test case number: 43
  /*
   * 5 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$UnsignedByteStartShortLengthRange.getEnd()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$UnsignedByteStartShortLengthRange.getBegin()J: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$UnsignedByteStartShortLengthRange.getLength()J: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range$Comparators$4.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: root-Branch
   * Goal 5. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I17 Branch 32 IFGT L522 - false
   */

  @Test
  public void test43()  throws Throwable  {
      Range.Comparators range_Comparators0 = Range.Comparators.SHORTEST_TO_LONGEST;
      Range range0 = Range.of(235L, 235L);
      int int0 = range_Comparators0.compare(range0, range0);
      assertEquals(0, int0);
  }

  //Test case number: 44
  /*
   * 2 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.getLength()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$Comparators$3.compare(Lorg/jcvi/jillion/core/Range;Lorg/jcvi/jillion/core/Range;)I: root-Branch
   */

  @Test
  public void test44()  throws Throwable  {
      Range range0 = Range.of((-273L));
      Range.Comparators range_Comparators0 = Range.Comparators.LONGEST_TO_SHORTEST;
      int int0 = range_Comparators0.compare(range0, range0);
      assertFalse(range0.isEmpty());
      assertEquals(0, int0);
  }

  //Test case number: 45
  /*
   * 9 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.of(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)Lorg/jcvi/jillion/core/Range;: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range.convertIntoRange(Ljava/util/regex/Matcher;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getBegin()J: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getLength()J: root-Branch
   * Goal 5. org.jcvi.jillion.core.Range$UnsignedByteStartLongLengthRange.getEnd()J: root-Branch
   * Goal 6. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I8 Branch 31 IFGT L521 - false
   * Goal 7. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I17 Branch 32 IFGT L522 - true
   * Goal 8. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I38 Branch 33 IFGT L525 - true
   * Goal 9. org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;: I13 Branch 46 IFEQ L624 - false
   */

  @Test
  public void test45()  throws Throwable  {
      Range range0 = Range.parseRange("[ 0 .. 4294977023 ]/0B");
      assertFalse(range0.isEmpty());
  }

  //Test case number: 46
  /*
   * 10 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$ShortRange.getBegin()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$ShortRange.getEnd()J: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range.asRange()Lorg/jcvi/jillion/core/Range;: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range.buildNewSignedRange(JJ)Lorg/jcvi/jillion/core/Range;: I8 Branch 16 IFEQ L482 - true
   * Goal 5. org.jcvi.jillion.core.Range.buildNewSignedRange(JJ)Lorg/jcvi/jillion/core/Range;: I30 Branch 17 IFEQ L484 - false
   * Goal 6. org.jcvi.jillion.core.Range.canFitInSignedByte(JJ)Z: I15 Branch 20 IFLT L493 - true
   * Goal 7. org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z: I8 Branch 23 IFGT L497 - false
   * Goal 8. org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z: I15 Branch 24 IFLT L497 - false
   * Goal 9. org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z: I22 Branch 25 IFGT L497 - false
   * Goal 10. org.jcvi.jillion.core.Range.canFitInSignedShort(JJ)Z: I29 Branch 26 IFLT L497 - false
   */

  @Test
  public void test46()  throws Throwable  {
      Range range0 = Range.of((-273L));
      Range range1 = range0.asRange();
      assertFalse(range1.isEmpty());
  }

  //Test case number: 47
  /*
   * 4 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;)Lorg/jcvi/jillion/core/Range;: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;: I13 Branch 46 IFEQ L624 - true
   * Goal 3. org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;: I33 Branch 47 IFEQ L628 - true
   * Goal 4. org.jcvi.jillion.core.Range.parseRange(Ljava/lang/String;Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Lorg/jcvi/jillion/core/Range;: I53 Branch 48 IFEQ L632 - true
   */

  @Test
  public void test47()  throws Throwable  {
      // Undeclared exception!
      try {
        Range range0 = Range.parseRange("max splitLengJh mustDbe >= 1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can not parse max splitLengJh mustDbe >= 1 into a Range
         //
      }
  }

  //Test case number: 48
  /*
   * 7 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range.iterator()Ljava/util/Iterator;: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$RangeIterator.<init>(Lorg/jcvi/jillion/core/Range;)V: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$LongStartIntLengthRange.getEnd()J: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range$LongStartIntLengthRange.getLength()J: root-Branch
   * Goal 5. org.jcvi.jillion.core.Range$LongStartIntLengthRange.getBegin()J: root-Branch
   * Goal 6. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I127 Branch 37 IFGT L540 - true
   * Goal 7. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I163 Branch 39 IFGT L546 - false
   */

  @Test
  public void test48()  throws Throwable  {
      Range range0 = Range.of(4294977024L);
      Iterator<Long> iterator0 = range0.iterator();
      assertFalse(range0.isEmpty());
  }

  //Test case number: 49
  /*
   * 2 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$Builder.copy()Lorg/jcvi/jillion/core/Range$Builder;: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$Builder;)V: root-Branch
   */

  @Test
  public void test49()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder((-2472L), 1L);
      Range.Builder range_Builder1 = range_Builder0.copy();
      assertFalse(range_Builder1.equals((Object)range_Builder0));
  }

  //Test case number: 50
  @Test
  public void test50()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, 39L, 39L);
      Range.Builder range_Builder1 = range_Builder0.expandBegin(4634L);
      assertSame(range_Builder1, range_Builder0);
  }

  //Test case number: 51
  /*
   * 3 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$Builder.<init>()V: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$Builder.expandBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$Builder.build()Lorg/jcvi/jillion/core/Range;: I18 Branch 5 IFGE L2550 - false
   */

  @Test
  public void test51()  throws Throwable  {
      Range.Builder range_Builder0 = new Range.Builder();
      Range.Builder range_Builder1 = range_Builder0.expandBegin((-13L));
      // Undeclared exception!
      try {
        Range range0 = range_Builder1.build();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
      }
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * Goal 1. org.jcvi.jillion.core.Range$Builder.expandEnd(J)Lorg/jcvi/jillion/core/Range$Builder;: root-Branch
   */

  @Test
  public void test52()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, (-1190L), 600L);
      Range.Builder range_Builder1 = range_Builder0.expandEnd((-2147483648L));
      assertSame(range_Builder1, range_Builder0);
  }

  //Test case number: 53
  /*
   * 12 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$ByteRange.getEnd()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$ByteRange.getBegin()J: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$Builder.contractBegin(J)Lorg/jcvi/jillion/core/Range$Builder;: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range.of(J)Lorg/jcvi/jillion/core/Range;: root-Branch
   * Goal 5. org.jcvi.jillion.core.Range.buildNewRange(JJ)Lorg/jcvi/jillion/core/Range;: I8 Branch 15 IFLT L462 - true
   * Goal 6. org.jcvi.jillion.core.Range.buildNewSignedRange(JJ)Lorg/jcvi/jillion/core/Range;: I8 Branch 16 IFEQ L482 - false
   * Goal 7. org.jcvi.jillion.core.Range.canFitInSignedByte(JJ)Z: I8 Branch 19 IFGT L493 - false
   * Goal 8. org.jcvi.jillion.core.Range.canFitInSignedByte(JJ)Z: I15 Branch 20 IFLT L493 - false
   * Goal 9. org.jcvi.jillion.core.Range.canFitInSignedByte(JJ)Z: I22 Branch 21 IFGT L493 - false
   * Goal 10. org.jcvi.jillion.core.Range.canFitInSignedByte(JJ)Z: I29 Branch 22 IFLT L493 - false
   * Goal 11. org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range;)V: I10 Branch 4 IFNONNULL L2433 - true
   * Goal 12. org.jcvi.jillion.core.Range$Builder.build()Lorg/jcvi/jillion/core/Range;: I48 Branch 6 IFLE L2553 - true
   */

  @Test
  public void test53()  throws Throwable  {
      Range range0 = Range.of((-30L));
      Range.Builder range_Builder0 = new Range.Builder(range0);
      Range.Builder range_Builder1 = range_Builder0.contractBegin((-1750L));
      assertSame(range_Builder0, range_Builder1);
  }

  //Test case number: 54
  /*
   * 2 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$Builder.contractEnd(J)Lorg/jcvi/jillion/core/Range$Builder;: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V: I16 Branch 2 IFGE L2403 - false
   */

  @Test
  public void test54()  throws Throwable  {
      Range.CoordinateSystem range_CoordinateSystem0 = Range.CoordinateSystem.ZERO_BASED;
      Range.Builder range_Builder0 = new Range.Builder(range_CoordinateSystem0, (-1190L), 600L);
      // Undeclared exception!
      try {
        Range.Builder range_Builder1 = range_Builder0.contractEnd(65535L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // length can not be negative
         //
      }
  }

  //Test case number: 55
  /*
   * 48 covered goals:
   * Goal 1. org.jcvi.jillion.core.Range$EmptyIntRange.getEnd()J: root-Branch
   * Goal 2. org.jcvi.jillion.core.Range$EmptyIntRange.isEmpty()Z: root-Branch
   * Goal 3. org.jcvi.jillion.core.Range$EmptyIntRange.<init>(I)V: root-Branch
   * Goal 4. org.jcvi.jillion.core.Range$EmptyIntRange.getBegin()J: root-Branch
   * Goal 5. org.jcvi.jillion.core.Range$Builder.<init>(JJ)V: root-Branch
   * Goal 6. org.jcvi.jillion.core.Range$Builder.shift(J)Lorg/jcvi/jillion/core/Range$Builder;: root-Branch
   * Goal 7. org.jcvi.jillion.core.Range.createCacheKeyFor(Lorg/jcvi/jillion/core/Range;)Ljava/lang/String;: root-Branch
   * Goal 8. org.jcvi.jillion.core.Range.of(JJ)Lorg/jcvi/jillion/core/Range;: root-Branch
   * Goal 9. org.jcvi.jillion.core.Range.isEmpty()Z: root-Branch
   * Goal 10. org.jcvi.jillion.core.Range.toString()Ljava/lang/String;: root-Branch
   * Goal 11. org.jcvi.jillion.core.Range$CoordinateSystem.getAbbreviatedName()Ljava/lang/String;: root-Branch
   * Goal 12. org.jcvi.jillion.core.Range$CoordinateSystem.getLocalEnd(J)J: root-Branch
   * Goal 13. org.jcvi.jillion.core.Range$CoordinateSystem.getStart(J)J: root-Branch
   * Goal 14. org.jcvi.jillion.core.Range$CoordinateSystem.getLocalStart(J)J: root-Branch
   * Goal 15. org.jcvi.jillion.core.Range$CoordinateSystem.getEnd(J)J: root-Branch
   * Goal 16. org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getBegin()J: root-Branch
   * Goal 17. org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getEnd()J: root-Branch
   * Goal 18. org.jcvi.jillion.core.Range$UnsignedIntStartIntLengthRange.getLength()J: root-Branch
   * Goal 19. org.jcvi.jillion.core.Range.buildNewRange(JJ)Lorg/jcvi/jillion/core/Range;: I8 Branch 15 IFLT L462 - false
   * Goal 20. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I8 Branch 31 IFGT L521 - true
   * Goal 21. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I69 Branch 34 IFGT L531 - true
   * Goal 22. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I127 Branch 37 IFGT L540 - false
   * Goal 23. org.jcvi.jillion.core.Range.buildNewUnsignedRange(JJJ)Lorg/jcvi/jillion/core/Range;: I136 Branch 38 IFGT L541 - false
   * Goal 24. org.jcvi.jillion.core.Range.buildNewEmptyRange(J)Lorg/jcvi/jillion/core/Range;: I8 Branch 40 IFLT L553 - false
   * Goal 25. org.jcvi.jillion.core.Range.buildNewEmptyRange(J)Lorg/jcvi/jillion/core/Range;: I17 Branch 41 IFGT L554 - true
   * Goal 26. org.jcvi.jillion.core.Range.buildNewEmptyRange(J)Lorg/jcvi/jillion/core/Range;: I35 Branch 42 IFGT L556 - true
   * Goal 27. org.jcvi.jillion.core.Range.buildNewEmptyRange(J)Lorg/jcvi/jillion/core/Range;: I53 Branch 43 IFGT L558 - false
   * Goal 28. org.jcvi.jillion.core.Range.getFromCache(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: I6 Branch 44 IFNONNULL L566 - true
   * Goal 29. org.jcvi.jillion.core.Range.getFromCache(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: I45 Branch 45 IFNULL L575 - false
   * Goal 30. org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: I6 Branch 59 IFNONNULL L796 - true
   * Goal 31. org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: I34 Branch 60 IFEQ L799 - true
   * Goal 32. org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: I46 Branch 61 IFEQ L802 - true
   * Goal 33. org.jcvi.jillion.core.Range.intersection(Lorg/jcvi/jillion/core/Range;)Lorg/jcvi/jillion/core/Range;: I83 Branch 62 IFGT L810 - true
   * Goal 34. org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I13 Branch 63 IFEQ L832 - true
   * Goal 35. org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I39 Branch 64 IFEQ L836 - false
   * Goal 36. org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I57 Branch 65 IFNE L838 - true
   * Goal 37. org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I73 Branch 66 IFEQ L843 - false
   * Goal 38. org.jcvi.jillion.core.Range.complement(Lorg/jcvi/jillion/core/Range;)Ljava/util/List;: I91 Branch 67 IFNE L845 - true
   * Goal 39. org.jcvi.jillion.core.Range.toString(Lorg/jcvi/jillion/core/Range$CoordinateSystem;)Ljava/lang/String;: I6 Branch 73 IFNONNULL L920 - true
   * Goal 40. org.jcvi.jillion.core.Range$Builder.<init>(Lorg/jcvi/jillion/core/Range$CoordinateSystem;JJ)V: I10 Branch 1 IFNONNULL L2392 - true
   * Goal 41. org.jcvi.jillion.core.Range$Builder.assertValidCoordinates(JJ)V: I16 Branch 2 IFGE L2403 - true
   * Goal 42. org.jcvi.jillion.core.Range$Builder.<init>(J)V: I12 Branch 3 IFGE L2418 - true
   * Goal 43. org.jcvi.jillion.core.Range$Builder.build()Lorg/jcvi/jillion/core/Range;: I18 Branch 5 IFGE L2550 - true
   * Goal 44. org.jcvi.jillion.core.Range$Builder.build()Lorg/jcvi/jillion/core/Range;: I48 Branch 6 IFLE L2553 - false
   * Goal 45. org.jcvi.jillion.core.Range$Builder.build()Lorg/jcvi/jillion/core/Range;: I66 Branch 7 IFGE L2555 - true
   * Goal 46. org.jcvi.jillion.core.Range$Builder.build()Lorg/jcvi/jillion/core/Range;: I99 Branch 8 IFLT L2563 - true
   * Goal 47. org.jcvi.jillion.core.Range$Builder.build()Lorg/jcvi/jillion/core/Range;: I99 Branch 8 IFLT L2563 - false
   * Goal 48. org.jcvi.jillion.core.Range$Builder.build()Lorg/jcvi/jillion/core/Range;: I125 Branch 9 IFNE L2565 - false
   */

  @Test
  public void test55()  throws Throwable  {
      Range range0 = Range.of(1114112L, 1114112L);
      List<Range> list0 = range0.complement(range0);
      assertEquals(0, list0.size());
  }
}
