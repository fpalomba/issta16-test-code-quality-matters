/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 10 10:21:47 GMT 2015
 */

package org.dom4j.io;

import static org.junit.Assert.*;
import org.junit.Test;
import com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl;
import java.io.CharArrayReader;
import java.io.File;
import java.io.InputStream;
import java.io.LineNumberReader;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.Reader;
import java.net.URL;
import org.dom4j.Document;
import org.dom4j.DocumentFactory;
import org.dom4j.ElementHandler;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.SAXReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;
import org.xml.sax.EntityResolver;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.Parser;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader$SAXEntityResolver.resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;: I27 Branch 4 IFGT L935 - false
   */

  @Test
  public void test00()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("?x>w!!_~p(4;!");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("U(O2M&{7WF2cE", "?x>w!!_~p(4;!");
      assertNotNull(inputSource0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.dom4j.io.SAXReader$SAXEntityResolver.resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;: I20 Branch 3 IFNULL L935 - false
   * Goal 2. org.dom4j.io.SAXReader$SAXEntityResolver.resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;: I27 Branch 4 IFGT L935 - true
   */

  @Test
  public void test01()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("XML");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("XML", "2\"6:2_-?V[-~Z#i5/bh");
      assertNotNull(inputSource0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader$SAXEntityResolver.resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;: I12 Branch 2 IFLE L934 - true
   */

  @Test
  public void test02()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("?x>w!!_~p(4;!");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("", "");
      assertNotNull(inputSource0);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * Goal 1. org.dom4j.io.SAXReader$SAXEntityResolver.resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;: I6 Branch 1 IFNULL L934 - false
   * Goal 2. org.dom4j.io.SAXReader$SAXEntityResolver.resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;: I12 Branch 2 IFLE L934 - false
   * Goal 3. org.dom4j.io.SAXReader$SAXEntityResolver.resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;: I20 Branch 3 IFNULL L935 - true
   */

  @Test
  public void test03()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("&S-zI!a", "&S-zI!a");
      assertNotNull(inputSource0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader$SAXEntityResolver.resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;: I6 Branch 1 IFNULL L934 - true
   */

  @Test
  public void test04()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("?x>w!!_~p(4;!");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity((String) null, (String) null);
      assertNotNull(inputSource0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.createDefaultEntityResolver(Ljava/lang/String;)Lorg/xml/sax/EntityResolver;: I16 Branch 29 IFLE L913 - true
   */

  @Test
  public void test05()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = (SAXReader.SAXEntityResolver)sAXReader0.createDefaultEntityResolver("");
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.configureReader(Lorg/xml/sax/XMLReader;Lorg/xml/sax/helpers/DefaultHandler;)V: I110 Branch 27 IFEQ L893 - false
   */

  @Test
  public void test06()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      try {
        sAXReader0.configureReader(xMLFilterImpl0, defaultHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@7e4d3f42 Nested exception: Feature: http://xml.org/sax/features/validation
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.configureReader(Lorg/xml/sax/XMLReader;Lorg/xml/sax/helpers/DefaultHandler;)V: I110 Branch 27 IFEQ L893 - true
   */

  @Test
  public void test07()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter((Parser) xMLReaderAdapter0);
      sAXReader0.configureReader(parserAdapter0, defaultHandler2_0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.setErrorHandler(Lorg/xml/sax/ErrorHandler;)V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.configureReader(Lorg/xml/sax/XMLReader;Lorg/xml/sax/helpers/DefaultHandler;)V: I21 Branch 24 IFNE L857 - false
   * Goal 3. org.dom4j.io.SAXReader.configureReader(Lorg/xml/sax/XMLReader;Lorg/xml/sax/helpers/DefaultHandler;)V: I27 Branch 25 IFEQ L857 - true
   * Goal 4. org.dom4j.io.SAXReader.configureReader(Lorg/xml/sax/XMLReader;Lorg/xml/sax/helpers/DefaultHandler;)V: I78 Branch 26 IFNULL L887 - false
   */

  @Test
  public void test08()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      SAXParserImpl.JAXPSAXParser sAXParserImpl_JAXPSAXParser0 = (SAXParserImpl.JAXPSAXParser)sAXReader0.getXMLReader();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.setErrorHandler((ErrorHandler) defaultHandler2_0);
      sAXReader0.configureReader(sAXParserImpl_JAXPSAXParser0, defaultHandler2_0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.resetHandlers()V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.getDispatchHandler()Lorg/dom4j/io/DispatchHandler;: I7 Branch 23 IFNONNULL L819 - true
   */

  @Test
  public void test09()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.resetHandlers();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.read(Ljava/io/Reader;)Lorg/dom4j/Document;: I14 Branch 13 IFNULL L346 - true
   * Goal 2. org.dom4j.io.SAXReader.read(Lorg/xml/sax/InputSource;)Lorg/dom4j/Document;: I126 Branch 17 IFEQ L440 - true
   * Goal 3. org.dom4j.io.SAXReader.installXMLFilter(Lorg/xml/sax/XMLReader;)Lorg/xml/sax/XMLReader;: I28 Branch 22 IFEQ L803 - false
   */

  @Test
  public void test10()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.setParent((XMLReader) xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader((XMLReader) xMLFilterImpl0);
      sAXReader0.setXMLFilter((XMLFilter) xMLFilterImpl0);
      PipedReader pipedReader0 = new PipedReader();
      try {
        Document document0 = sAXReader0.read((Reader) pipedReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 100000 Nested exception: Loop has been executed more times than the allowed 100000
         //
      }
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.<init>(Lorg/dom4j/DocumentFactory;Z)V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.read(Ljava/io/Reader;Ljava/lang/String;)Lorg/dom4j/Document;: I19 Branch 15 IFNULL L388 - false
   */

  @Test
  public void test11()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null, true);
      sAXReader0.setEncoding("//var/folders/ff/jvqmt14176q7vr5d_h1h729c0000gn/T/xmlns=\"04");
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0, 21);
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read((Reader) pipedReader0, "zN7kruou4.H!W");
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.read(Ljava/io/InputStream;Ljava/lang/String;)Lorg/dom4j/Document;: I19 Branch 14 IFNULL L367 - true
   */

  @Test
  public void test12()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read((InputStream) null, (String) null);
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.read(Ljava/io/Reader;)Lorg/dom4j/Document;: I14 Branch 13 IFNULL L346 - false
   */

  @Test
  public void test13()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      char[] charArray0 = new char[9];
      sAXReader0.setEncoding("http://xml.org/sax/eatures/valiation");
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, 0, (int) 'g');
      LineNumberReader lineNumberReader0 = new LineNumberReader((Reader) charArrayReader0);
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read((Reader) lineNumberReader0);
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.read(Ljava/io/InputStream;)Lorg/dom4j/Document;: I14 Branch 12 IFNULL L328 - false
   */

  @Test
  public void test14()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setEncoding("XML");
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read((InputStream) null);
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.read(Ljava/io/InputStream;)Lorg/dom4j/Document;: I14 Branch 12 IFNULL L328 - true
   */

  @Test
  public void test15()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read((InputStream) null);
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.read(Ljava/net/URL;)Lorg/dom4j/Document;: I27 Branch 10 IFNULL L284 - true
   */

  @Test
  public void test16()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      URL uRL0 = MockURL.getHttpExample();
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read(uRL0);
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.read(Ljava/io/File;)Lorg/dom4j/Document;: I30 Branch 7 IFNULL L245 - false
   */

  @Test
  public void test17()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      sAXReader0.setEncoding("*r=)']!0cBe,jA");
      MockFile mockFile0 = (MockFile)MockFile.createTempFile("*r=)']!0cBe,jA", "*r=)']!0cBe,jA");
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read((File) mockFile0);
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.read(Ljava/io/File;)Lorg/dom4j/Document;: I30 Branch 7 IFNULL L245 - true
   * Goal 2. org.dom4j.io.SAXReader.read(Ljava/io/File;)Lorg/dom4j/Document;: I48 Branch 8 IFNULL L250 - false
   * Goal 3. org.dom4j.io.SAXReader.read(Ljava/io/File;)Lorg/dom4j/Document;: I65 Branch 9 IFGT L255 - true
   * Goal 4. org.dom4j.io.SAXReader.createDefaultEntityResolver(Ljava/lang/String;)Lorg/xml/sax/EntityResolver;: I29 Branch 30 IFLE L916 - false
   */

  @Test
  public void test18()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      SAXReader sAXReader0 = new SAXReader((XMLReader) xMLFilterImpl0);
      MockFile mockFile0 = (MockFile)MockFile.createTempFile("*r=)']!0cBe,jA", "4");
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read((File) mockFile0);
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.<init>(Ljava/lang/String;Z)V: I45 Branch 6 IFNULL L185 - false
   */

  @Test
  public void test19()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("", true);
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class  not found
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.<init>(Ljava/lang/String;)V: I45 Branch 5 IFNULL L177 - false
   */

  @Test
  public void test20()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("z1]cqT|VB#9Pu5S+");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class z1]cqT|VB#9Pu5S+ not found
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.setDispatchHandler(Lorg/dom4j/io/DispatchHandler;)V: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.setDispatchHandler(dispatchHandler0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.setMergeAdjacentText(Z)V: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      assertFalse(sAXReader0.isMergeAdjacentText());
      
      sAXReader0.setMergeAdjacentText(true);
      assertTrue(sAXReader0.isMergeAdjacentText());
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.setXMLFilter(Lorg/xml/sax/XMLFilter;)V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.installXMLFilter(Lorg/xml/sax/XMLReader;)Lorg/xml/sax/XMLReader;: I11 Branch 21 IFNULL L796 - false
   * Goal 3. org.dom4j.io.SAXReader.installXMLFilter(Lorg/xml/sax/XMLReader;)Lorg/xml/sax/XMLReader;: I28 Branch 22 IFEQ L803 - true
   */

  @Test
  public void test23()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter((XMLFilter) xMLFilterImpl0);
      MockFile mockFile0 = (MockFile)MockFile.createTempFile("#Y(OUVkFL8c", "#Y(OUVkFL8c");
      MockFileReader mockFileReader0 = new MockFileReader((File) mockFile0);
      LineNumberReader lineNumberReader0 = new LineNumberReader((Reader) mockFileReader0);
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read((Reader) lineNumberReader0, "#Y(OUVkFL8c");
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.setEncoding(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.read(Ljava/io/InputStream;Ljava/lang/String;)Lorg/dom4j/Document;: I19 Branch 14 IFNULL L367 - false
   * Goal 3. org.dom4j.io.SAXReader.createDefaultEntityResolver(Ljava/lang/String;)Lorg/xml/sax/EntityResolver;: I10 Branch 28 IFNULL L913 - true
   */

  @Test
  public void test24()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setEncoding("//var/folders/ff/jvqmt14176q7vr5d_h1h729c0000gn/T/F]8Q;I9i0F]8Q;I9i");
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read((InputStream) null, (String) null);
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.getEncoding()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      String string0 = sAXReader0.getEncoding();
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.setFeature(Ljava/lang/String;Z)V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.getXMLReader()Lorg/xml/sax/XMLReader;: I7 Branch 20 IFNONNULL L673 - true
   */

  @Test
  public void test26()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader((XMLReader) xMLFilterImpl0);
      try {
        sAXReader0.setFeature("U(O2M&{7WF2cE", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: U(O2M&{7WF2cE
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.getEntityResolver()Lorg/xml/sax/EntityResolver;: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EntityResolver entityResolver0 = sAXReader0.getEntityResolver();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.isIncludeInternalDTDDeclarations()Z: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(boolean0);
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  //Test case number: 29
  /*
   * 5 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.isStringInternEnabled()Z: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.setIncludeInternalDTDDeclarations(Z)V: root-Branch
   * Goal 3. org.dom4j.io.SAXReader.<init>(Ljava/lang/String;)V: I45 Branch 5 IFNULL L177 - true
   * Goal 4. org.dom4j.io.SAXReader.configureReader(Lorg/xml/sax/XMLReader;Lorg/xml/sax/helpers/DefaultHandler;)V: I21 Branch 24 IFNE L857 - true
   * Goal 5. org.dom4j.io.SAXReader.configureReader(Lorg/xml/sax/XMLReader;Lorg/xml/sax/helpers/DefaultHandler;)V: I78 Branch 26 IFNULL L887 - true
   */

  @Test
  public void test29()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      SAXParserImpl.JAXPSAXParser sAXParserImpl_JAXPSAXParser0 = (SAXParserImpl.JAXPSAXParser)sAXReader0.getXMLReader();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.configureReader(sAXParserImpl_JAXPSAXParser0, defaultHandler2_0);
      assertTrue(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.setStripWhitespaceText(Z)V: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((XMLReader) null);
      assertFalse(sAXReader0.isStripWhitespaceText());
      
      sAXReader0.setStripWhitespaceText(true);
      assertTrue(sAXReader0.isStripWhitespaceText());
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.setStringInternEnabled(Z)V: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setStringInternEnabled(true);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.setIgnoreComments(Z)V: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIgnoreComments(false);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.getErrorHandler()Lorg/xml/sax/ErrorHandler;: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      ErrorHandler errorHandler0 = sAXReader0.getErrorHandler();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.isStripWhitespaceText()Z: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      boolean boolean0 = sAXReader0.isStripWhitespaceText();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.setXMLReader(Lorg/xml/sax/XMLReader;)V: root-Branch
   */

  @Test
  public void test35()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setXMLReader((XMLReader) null);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.isMergeAdjacentText()Z: root-Branch
   */

  @Test
  public void test36()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      boolean boolean0 = sAXReader0.isMergeAdjacentText();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  //Test case number: 37
  /*
   * 3 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.setEntityResolver(Lorg/xml/sax/EntityResolver;)V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.read(Ljava/io/Reader;Ljava/lang/String;)Lorg/dom4j/Document;: I19 Branch 15 IFNULL L388 - true
   * Goal 3. org.dom4j.io.SAXReader.read(Lorg/xml/sax/InputSource;)Lorg/dom4j/Document;: I22 Branch 16 IFNONNULL L412 - true
   */

  @Test
  public void test37()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.setEntityResolver((EntityResolver) defaultHandler2_0);
      MockFile mockFile0 = (MockFile)MockFile.createTempFile("#Y(OUVkFL8c", "#Y(OUVkFL8c");
      MockFileReader mockFileReader0 = new MockFileReader((File) mockFile0);
      LineNumberReader lineNumberReader0 = new LineNumberReader((Reader) mockFileReader0);
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read((Reader) lineNumberReader0, "#Y(OUVkFL8c");
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.setIncludeExternalDTDDeclarations(Z)V: root-Branch
   */

  @Test
  public void test38()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      assertTrue(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  //Test case number: 39
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.setProperty(Ljava/lang/String;Ljava/lang/Object;)V: root-Branch
   */

  @Test
  public void test39()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      try {
        sAXReader0.setProperty("MN8jeS9$<", (Object) sAXReader0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property 'MN8jeS9$<' is not recognized.
         //
      }
  }

  //Test case number: 40
  /*
   * 2 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.setXMLReaderClassName(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.<init>(Ljava/lang/String;Z)V: I45 Branch 6 IFNULL L185 - true
   */

  @Test
  public void test40()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((String) null, true);
      // Undeclared exception!
      try {
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 41
  /*
   * 2 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.removeHandler(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.<init>(Lorg/xml/sax/XMLReader;)V: root-Branch
   */

  @Test
  public void test41()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader((XMLReader) xMLFilterImpl0);
      sAXReader0.removeHandler("?x>w!!_~p(4;!");
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  //Test case number: 42
  /*
   * 2 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.setDocumentFactory(Lorg/dom4j/DocumentFactory;)V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.<init>(Z)V: root-Branch
   */

  @Test
  public void test42()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  //Test case number: 43
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.addHandler(Ljava/lang/String;Lorg/dom4j/ElementHandler;)V: root-Branch
   */

  @Test
  public void test43()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      sAXReader0.addHandler((String) null, (ElementHandler) pruningDispatchHandler0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  //Test case number: 44
  /*
   * 3 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.setDefaultHandler(Lorg/dom4j/ElementHandler;)V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.<init>(Lorg/xml/sax/XMLReader;Z)V: root-Branch
   * Goal 3. org.dom4j.io.SAXReader.getDispatchHandler()Lorg/dom4j/io/DispatchHandler;: I7 Branch 23 IFNONNULL L819 - false
   */

  @Test
  public void test44()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader((XMLReader) xMLFilterImpl0, false);
      sAXReader0.setDefaultHandler((ElementHandler) null);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isValidating());
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.isIgnoreComments()Z: root-Branch
   */

  @Test
  public void test45()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      boolean boolean0 = sAXReader0.isIgnoreComments();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  //Test case number: 46
  /*
   * 1 covered goal:
   * Goal 1. org.dom4j.io.SAXReader.setValidation(Z)V: root-Branch
   */

  @Test
  public void test46()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setValidation(false);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  //Test case number: 47
  /*
   * 2 covered goals:
   * Goal 1. org.dom4j.io.SAXReader.isIncludeExternalDTDDeclarations()Z: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.<init>()V: root-Branch
   */

  @Test
  public void test47()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  //Test case number: 48
  /*
   * 14 covered goals:
   * Goal 1. org.dom4j.io.SAXReader$SAXEntityResolver.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.dom4j.io.SAXReader.<init>(Lorg/dom4j/DocumentFactory;)V: root-Branch
   * Goal 3. org.dom4j.io.SAXReader.createXMLReader()Lorg/xml/sax/XMLReader;: root-Branch
   * Goal 4. org.dom4j.io.SAXReader.createContentHandler(Lorg/xml/sax/XMLReader;)Lorg/dom4j/io/SAXContentHandler;: root-Branch
   * Goal 5. org.dom4j.io.SAXReader.isValidating()Z: root-Branch
   * Goal 6. org.dom4j.io.SAXReader.getXMLFilter()Lorg/xml/sax/XMLFilter;: root-Branch
   * Goal 7. org.dom4j.io.SAXReader.read(Ljava/lang/String;)Lorg/dom4j/Document;: I14 Branch 11 IFNULL L310 - true
   * Goal 8. org.dom4j.io.SAXReader.read(Lorg/xml/sax/InputSource;)Lorg/dom4j/Document;: I22 Branch 16 IFNONNULL L412 - false
   * Goal 9. org.dom4j.io.SAXReader.getDocumentFactory()Lorg/dom4j/DocumentFactory;: I7 Branch 19 IFNONNULL L608 - false
   * Goal 10. org.dom4j.io.SAXReader.getXMLReader()Lorg/xml/sax/XMLReader;: I7 Branch 20 IFNONNULL L673 - false
   * Goal 11. org.dom4j.io.SAXReader.installXMLFilter(Lorg/xml/sax/XMLReader;)Lorg/xml/sax/XMLReader;: I11 Branch 21 IFNULL L796 - true
   * Goal 12. org.dom4j.io.SAXReader.createDefaultEntityResolver(Ljava/lang/String;)Lorg/xml/sax/EntityResolver;: I10 Branch 28 IFNULL L913 - false
   * Goal 13. org.dom4j.io.SAXReader.createDefaultEntityResolver(Ljava/lang/String;)Lorg/xml/sax/EntityResolver;: I16 Branch 29 IFLE L913 - false
   * Goal 14. org.dom4j.io.SAXReader.createDefaultEntityResolver(Ljava/lang/String;)Lorg/xml/sax/EntityResolver;: I29 Branch 30 IFLE L916 - true
   */

  @Test
  public void test48()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      // Undeclared exception!
      try {
        Document document0 = sAXReader0.read("cK@=k zPPIi");
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.dom4j.DefaultDocumentFactory.getInstance()Lorg/dom4j/DocumentFactory;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/dom4j/io/SAXReader, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/dom4j/DefaultDocumentFactory, have different Class objects for the type org/dom4j/DocumentFactory used in the signature
         //
      }
  }
}
