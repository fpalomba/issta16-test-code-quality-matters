/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 16 18:38:55 GMT 2015
 */

package macaw.businessLayer;

import static org.junit.Assert.*;
import org.junit.Test;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I58 Branch 41 IF_ICMPNE L1227 - true
   */

  @Test
  public void test00()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertNotNull(derivedVariable0);
      
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertNotNull(rawVariable0);
      
      derivedVariable0.setAlternativeVariable((Variable) rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      
      User user0 = new User();
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPhone());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertNotNull(user0);
      
      rawVariable0.setIdentifier(59);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("59", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertEquals(59, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, (Variable) derivedVariable0, (Variable) derivedVariable0);
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPhone());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertNull(macawChangeEvent0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.findOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)Lmacaw/businessLayer/OntologyTerm;: I30 Branch 11 IF_ICMPNE L371 - true
   */

  @Test
  public void test01()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getDescription());
      assertNotNull(ontologyTerm0);
      
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertNotNull(rawVariable0);
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getDescription());
      
      ontologyTerm0.setIdentifier((-1326));
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals(-1326, ontologyTerm0.getIdentifier());
      assertEquals("-1326", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      assertEquals("", ontologyTerm1.getDescription());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertTrue(ontologyTerm1.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertNotSame(ontologyTerm1, ontologyTerm0);
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      assertNotNull(ontologyTerm1);
      
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", ontologyTerm1.getDescription());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertTrue(ontologyTerm1.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertNotSame(ontologyTerm1, ontologyTerm0);
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.isNewRecord()Z: root-Branch
   */

  @Test
  public void test02()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getColumnStart());
      assertNotNull(derivedVariable0);
      
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getColumnStart());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I601 Branch 26 IFNONNULL L962 - false
   */

  @Test
  public void test03()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getName());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getColumnEnd());
      assertNotNull(rawVariable0);
      
      User user0 = new User();
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertNotNull(user0);
      
      rawVariable0.columnStart = null;
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getName());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getLabel());
      assertNull(rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getColumnEnd());
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) rawVariable0, (Variable) rawVariable0);
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getName());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getLabel());
      assertNull(rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.Variable.validateFields(Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I68 Branch 14 IF_ICMPNE L608 - false
   * Goal 2. macaw.businessLayer.Variable.validateFields(Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I78 Branch 15 IF_ICMPNE L609 - true
   */

  @Test
  public void test04()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertNotNull(derivedVariable0);
      
      derivedVariable0.setCleaned(true);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertTrue(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertTrue(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      assertNotNull(arrayList0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.containsOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)Z: I34 Branch 5 IF_ICMPNE L320 - true
   */

  @Test
  public void test05()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(rawVariable0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertNotNull(ontologyTerm0);
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      
      ontologyTerm0.setIdentifier(21);
      assertEquals("21", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals(21, ontologyTerm0.getIdentifier());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getTerm());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertEquals("", ontologyTerm1.getDescription());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertTrue(ontologyTerm1.isNewRecord());
      assertNotSame(ontologyTerm1, ontologyTerm0);
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
      assertNotNull(ontologyTerm1);
      
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      assertEquals("0", ontologyTerm1.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm1.getTerm());
      assertEquals("", ontologyTerm1.getDescription());
      assertEquals("LHA", ontologyTerm1.getOntologyName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm1.getNameSpace());
      assertEquals(0, ontologyTerm1.getIdentifier());
      assertTrue(ontologyTerm1.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertNotSame(ontologyTerm1, ontologyTerm0);
      assertFalse(ontologyTerm1.equals((Object)ontologyTerm0));
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I34 Branch 16 IFGT L748 - false
   */

  @Test
  public void test06()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(derivedVariable0);
      
      derivedVariable0.setName("generl.fieldValue.unknown");
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("generl.fieldValue.unknown", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("generl.fieldValue.unknown", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertFalse(derivedVariable0.isNewRecord());
      
      User user0 = new User();
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getEmail());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAffiliation());
      assertNotNull(user0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getForm());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getAlias());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getName());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotNull(derivedVariable1);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) derivedVariable1, (Variable) derivedVariable0);
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getForm());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getAlias());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getName());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("generl.fieldValue.unknown", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("generl.fieldValue.unknown", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getEmail());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAffiliation());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertNotSame(derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotNull(arrayList0);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I40 Branch 40 IFNONNULL L1222 - false
   * Goal 2. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I115 Branch 44 IFNULL L1246 - true
   */

  @Test
  public void test07()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertNotNull(derivedVariable0);
      
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getName());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNotNull(rawVariable0);
      
      derivedVariable0.setAlternativeVariable((Variable) rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getName());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      
      User user0 = new User();
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getCounty());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getUserID());
      assertNotNull(user0);
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, (Variable) derivedVariable0, (Variable) null);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("", macawChangeEvent0.getUserID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(ChangeEventType.VARIABLE, macawChangeEvent0.getChangeType());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getCounty());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getUserID());
      assertNotNull(macawChangeEvent0);
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.Variable.containsSupportingDocument(Lmacaw/businessLayer/SupportingDocument;)Z: I17 Branch 1 IFEQ L279 - false
   * Goal 2. macaw.businessLayer.Variable.containsSupportingDocument(Lmacaw/businessLayer/SupportingDocument;)Z: I34 Branch 2 IF_ICMPNE L282 - false
   */

  @Test
  public void test08()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(derivedVariable0);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertNotNull(supportingDocument0);
      
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add(supportingDocument0);
      assertTrue(boolean0);
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isNewRecord());
      
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean1);
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isNewRecord());
      assertTrue(boolean1 == boolean0);
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.Variable.getValueLabels()Ljava/util/ArrayList;: root-Branch
   * Goal 2. macaw.businessLayer.Variable.validateFields(Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I15 Branch 12 IF_ICMPNE L543 - true
   */

  @Test
  public void test09()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertNotNull(derivedVariable0);
      
      derivedVariable0.setName("variable.isCoded.label");
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("variable.isCoded.label", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("variable.isCoded.label", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("variable.isCoded.label", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("variable.isCoded.label", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertNotNull(arrayList0);
      
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("variable.isCoded.label", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("variable.isCoded.label", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.Variable.containsOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)Z: I17 Branch 4 IFEQ L317 - false
   * Goal 2. macaw.businessLayer.Variable.containsOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)Z: I34 Branch 5 IF_ICMPNE L320 - false
   */

  @Test
  public void test10()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertTrue(ontologyTerm0.isNewRecord());
      assertNotNull(ontologyTerm0);
      
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNotNull(rawVariable0);
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertTrue(ontologyTerm0.isNewRecord());
      
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertTrue(ontologyTerm0.isNewRecord());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I516 Branch 24 IFGT L929 - false
   */

  @Test
  public void test11()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertNotNull(rawVariable0);
      
      rawVariable0.setCodeBookNumber("tJNgQL~@@YYT\"GnS{C");
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("tJNgQL~@@YYT\"GnS{C", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(derivedVariable0);
      
      User user0 = new User();
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getFirstName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getDisplayName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertNotNull(user0);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) rawVariable0, (Variable) derivedVariable0);
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getFirstName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getDisplayName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("tJNgQL~@@YYT\"GnS{C", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertNotNull(arrayList0);
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I20 Branch 38 IFNONNULL L1219 - false
   * Goal 2. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I78 Branch 42 IF_ICMPNE L1235 - true
   */

  @Test
  public void test12()  throws Throwable  {
      User user0 = new User();
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertNotNull(user0);
      
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getForm());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNotNull(rawVariable0);
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getForm());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNull(variable0);
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, (Variable) rawVariable0, (Variable) null);
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getForm());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNull(macawChangeEvent0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.setValueLabels(Ljava/util/ArrayList;)V: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertNotNull(rawVariable0);
      
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      rawVariable0.setValueLabels(arrayList0);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.getDisplayItemIdentifier()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertNotNull(rawVariable0);
      
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertNotNull(string0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.cloneAttributes(Lmacaw/businessLayer/Variable;)V: I160 Branch 46 IFEQ L1323 - false
   */

  @Test
  public void test15()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getAlias());
      assertNotNull(derivedVariable0);
      
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", derivedVariable0.getName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getAlias());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add((SupportingDocument) null);
      assertTrue(boolean0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", derivedVariable0.getName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getAlias());
      
      // Undeclared exception!
      try {
        Object object0 = derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * Goal 1. macaw.businessLayer.Variable.validateFields(Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I15 Branch 12 IF_ICMPNE L543 - false
   * Goal 2. macaw.businessLayer.Variable.validateFields(Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I42 Branch 13 IF_ICMPNE L587 - true
   * Goal 3. macaw.businessLayer.Variable.validateFields(Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I68 Branch 14 IF_ICMPNE L608 - true
   */

  @Test
  public void test16()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getAlias());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertNotNull(derivedVariable0);
      
      try {
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I318 Branch 21 IFNE L854 - true
   */

  @Test
  public void test17()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertNotNull(rawVariable0);
      
      rawVariable0.setCleaned(true);
      assertTrue(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(derivedVariable0);
      
      User user0 = new User();
      assertEquals("", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getPostCode());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getDisplayName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAffiliation());
      assertNotNull(user0);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) derivedVariable0, (Variable) rawVariable0);
      assertEquals("", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getPostCode());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getDisplayName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAffiliation());
      assertTrue(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getLabel());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(arrayList0);
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * Goal 1. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I15 Branch 37 IFNONNULL L1219 - true
   * Goal 2. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I35 Branch 39 IFNULL L1222 - false
   * Goal 3. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I40 Branch 40 IFNONNULL L1222 - true
   * Goal 4. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I58 Branch 41 IF_ICMPNE L1227 - false
   * Goal 5. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I99 Branch 43 IFNULL L1241 - false
   */

  @Test
  public void test18()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertNotNull(derivedVariable0);
      
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertNotNull(rawVariable0);
      
      derivedVariable0.setAlternativeVariable((Variable) rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      
      User user0 = new User();
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertNotNull(user0);
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, (Variable) derivedVariable0, (Variable) derivedVariable0);
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPostCode());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals("", macawChangeEvent0.getUserID());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals(ChangeEventType.VARIABLE, macawChangeEvent0.getChangeType());
      assertNotNull(macawChangeEvent0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I670 Branch 28 IFLE L989 - true
   */

  @Test
  public void test19()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNotNull(rawVariable0);
      
      rawVariable0.columnEnd = "w[ S)w(R&e++'3+";
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("w[ S)w(R&e++'3+", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      
      User user0 = new User("w[ S)w(R&e++'3+", "w[ S)w(R&e++'3+");
      assertEquals("", user0.getPostCode());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("w[ S)w(R&e++'3+", user0.getPassword());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("w[ S)w(R&e++'3+", user0.getDisplayName());
      assertEquals("w[ S)w(R&e++'3+", user0.getUserID());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getFirstName());
      assertNotNull(user0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(derivedVariable0);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) rawVariable0, (Variable) derivedVariable0);
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("w[ S)w(R&e++'3+", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", user0.getPostCode());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("w[ S)w(R&e++'3+", user0.getPassword());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("w[ S)w(R&e++'3+", user0.getDisplayName());
      assertEquals("w[ S)w(R&e++'3+", user0.getUserID());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getFirstName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(arrayList0);
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I967 Branch 34 IFGT L1126 - false
   */

  @Test
  public void test20()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertNotNull(rawVariable0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertNotNull(derivedVariable0);
      
      User user0 = new User();
      assertEquals("", user0.getCity());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getLastName());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getDisplayName());
      assertNotNull(user0);
      
      rawVariable0.form = "-CWABB";
      assertEquals("-CWABB", rawVariable0.getForm());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) derivedVariable0, (Variable) rawVariable0);
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getLastName());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals(0, user0.getIdentifier());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getDisplayName());
      assertEquals("-CWABB", rawVariable0.getForm());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertNotNull(arrayList0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.updateOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)V: I42 Branch 9 IF_ICMPNE L358 - true
   */

  @Test
  public void test21()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertNotNull(ontologyTerm0);
      
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertNotNull(rawVariable0);
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.Variable.cloneAttributes(Lmacaw/businessLayer/Variable;)V: I201 Branch 47 IFEQ L1330 - false
   * Goal 2. macaw.businessLayer.Variable.cloneAttributes(Lmacaw/businessLayer/Variable;)V: I231 Branch 48 IFNULL L1336 - false
   */

  @Test
  public void test22()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(derivedVariable0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertNotNull(ontologyTerm0);
      
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertNotNull(rawVariable0);
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals(0, ontologyTerm0.getIdentifier());
      
      rawVariable0.setAlternativeVariable((Variable) derivedVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getName());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getFilePath());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getForm());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertNotSame(rawVariable1, rawVariable0);
      assertNotSame(rawVariable0, rawVariable1);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotNull(rawVariable1);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I376 Branch 22 IFGT L873 - false
   */

  @Test
  public void test23()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertNotNull(derivedVariable0);
      
      derivedVariable0.setCleaningStatus("ti2kxjD1NrH2D9S");
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("ti2kxjD1NrH2D9S", derivedVariable0.getCleaningStatus());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals("", derivedVariable1.getColumnEnd());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getName());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotNull(derivedVariable1);
      
      User user0 = new User();
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getEmail());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertNotNull(user0);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) derivedVariable0, (Variable) derivedVariable1);
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getEmail());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("ti2kxjD1NrH2D9S", derivedVariable0.getCleaningStatus());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertNotSame(derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotNull(arrayList0);
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I828 Branch 32 IFGT L1075 - false
   */

  @Test
  public void test24()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertNotNull(derivedVariable0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertFalse(derivedVariable1.isNewRecord());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotNull(derivedVariable1);
      
      derivedVariable1.setAvailability("CONJP < (CC <: /^?i:and)$/ [ ($+ (RB=head <: /^(?i:yet)$/)) | ($+ (ADVP=head <: (RB <: /^(?i:yet)$/))) ])");
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("CONJP < (CC <: /^?i:and)$/ [ ($+ (RB=head <: /^(?i:yet)$/)) | ($+ (ADVP=head <: (RB <: /^(?i:yet)$/))) ])", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertFalse(derivedVariable1.isNewRecord());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      
      User user0 = new User("CONJP < (CC <: /^?i:and)$/ [ ($+ (RB=head <: /^(?i:yet)$/)) | ($+ (ADVP=head <: (RB <: /^(?i:yet)$/))) ])", "CONJP < (CC <: /^?i:and)$/ [ ($+ (RB=head <: /^(?i:yet)$/)) | ($+ (ADVP=head <: (RB <: /^(?i:yet)$/))) ])");
      assertEquals("", user0.getLastName());
      assertEquals("CONJP < (CC <: /^?i:and)$/ [ ($+ (RB=head <: /^(?i:yet)$/)) | ($+ (ADVP=head <: (RB <: /^(?i:yet)$/))) ])", user0.getDisplayName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPhone());
      assertEquals("CONJP < (CC <: /^?i:and)$/ [ ($+ (RB=head <: /^(?i:yet)$/)) | ($+ (ADVP=head <: (RB <: /^(?i:yet)$/))) ])", user0.getUserID());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getPostCode());
      assertEquals("CONJP < (CC <: /^?i:and)$/ [ ($+ (RB=head <: /^(?i:yet)$/)) | ($+ (ADVP=head <: (RB <: /^(?i:yet)$/))) ])", user0.getPassword());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getEmail());
      assertEquals(0, user0.getIdentifier());
      assertNotNull(user0);
      
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("", user0.getLastName());
      assertEquals("CONJP < (CC <: /^?i:and)$/ [ ($+ (RB=head <: /^(?i:yet)$/)) | ($+ (ADVP=head <: (RB <: /^(?i:yet)$/))) ])", user0.getDisplayName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPhone());
      assertEquals("CONJP < (CC <: /^?i:and)$/ [ ($+ (RB=head <: /^(?i:yet)$/)) | ($+ (ADVP=head <: (RB <: /^(?i:yet)$/))) ])", user0.getUserID());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getPostCode());
      assertEquals("CONJP < (CC <: /^?i:and)$/ [ ($+ (RB=head <: /^(?i:yet)$/)) | ($+ (ADVP=head <: (RB <: /^(?i:yet)$/))) ])", user0.getPassword());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getEmail());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("CONJP < (CC <: /^?i:and)$/ [ ($+ (RB=head <: /^(?i:yet)$/)) | ($+ (ADVP=head <: (RB <: /^(?i:yet)$/))) ])", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertNotSame(derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotNull(arrayList0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.containsOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)Z: I17 Branch 4 IFEQ L317 - true
   */

  @Test
  public void test25()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNotNull(rawVariable0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("", ontologyTerm0.getTerm());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertNotNull(ontologyTerm0);
      
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("", ontologyTerm0.getTerm());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCleaningDescription());
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.Variable.setAlternativeVariable(Lmacaw/businessLayer/Variable;)V: root-Branch
   * Goal 2. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I758 Branch 31 IFGT L1022 - false
   */

  @Test
  public void test26()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertNotNull(rawVariable0);
      
      RawVariable rawVariable1 = new RawVariable();
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getName());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getAlias());
      assertNotSame(rawVariable1, rawVariable0);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotNull(rawVariable1);
      
      rawVariable0.setAlternativeVariable((Variable) rawVariable1);
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getName());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertNotSame(rawVariable1, rawVariable0);
      assertNotSame(rawVariable0, rawVariable1);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      
      rawVariable1.setAlias("variable.label.label");
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("variable.label.label", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getName());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertNotSame(rawVariable1, rawVariable0);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      
      User user0 = new User();
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAffiliation());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getEmail());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertNotNull(user0);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) rawVariable0, (Variable) rawVariable1);
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("variable.label.label", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getName());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getAffiliation());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getEmail());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getNotes());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertNotSame(rawVariable1, rawVariable0);
      assertNotSame(rawVariable0, rawVariable1);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertNotNull(arrayList0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I244 Branch 19 IFGT L827 - false
   */

  @Test
  public void test27()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      assertNotNull(rawVariable0);
      
      rawVariable0.setCategory("NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))");
      assertFalse(rawVariable0.isCleaned());
      assertEquals("NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertNotNull(derivedVariable0);
      
      User user0 = new User("NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))", "NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))");
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))", user0.getUserID());
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getPostCode());
      assertEquals("NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))", user0.getDisplayName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getLastName());
      assertEquals("NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))", user0.getPassword());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAddressLine1());
      assertNotNull(user0);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) rawVariable0, (Variable) derivedVariable0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getEmail());
      assertEquals("NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))", user0.getUserID());
      assertEquals("", user0.getCounty());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getPostCode());
      assertEquals("NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))", user0.getDisplayName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getLastName());
      assertEquals("NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))", user0.getPassword());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getAddressLine1());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      assertNotNull(arrayList0);
  }

  //Test case number: 28
  /*
   * 20 covered goals:
   * Goal 1. macaw.businessLayer.Variable.setCleaningDescription(Ljava/lang/String;)V: root-Branch
   * Goal 2. macaw.businessLayer.Variable.setColumnEnd(Ljava/lang/String;)V: root-Branch
   * Goal 3. macaw.businessLayer.Variable.setForm(Ljava/lang/String;)V: root-Branch
   * Goal 4. macaw.businessLayer.Variable.addValueLabel(Lmacaw/businessLayer/ValueLabel;)V: root-Branch
   * Goal 5. macaw.businessLayer.Variable.setIsNewRecord(Z)V: root-Branch
   * Goal 6. macaw.businessLayer.Variable.setIdentifier(I)V: root-Branch
   * Goal 7. macaw.businessLayer.Variable.setOntologyTerms(Ljava/util/ArrayList;)V: root-Branch
   * Goal 8. macaw.businessLayer.Variable.setCodeBookNumber(Ljava/lang/String;)V: root-Branch
   * Goal 9. macaw.businessLayer.Variable.setAvailability(Ljava/lang/String;)V: root-Branch
   * Goal 10. macaw.businessLayer.Variable.setQuestionNumber(Ljava/lang/String;)V: root-Branch
   * Goal 11. macaw.businessLayer.Variable.setFilePath(Ljava/lang/String;)V: root-Branch
   * Goal 12. macaw.businessLayer.Variable.setAlias(Ljava/lang/String;)V: root-Branch
   * Goal 13. macaw.businessLayer.Variable.setName(Ljava/lang/String;)V: root-Branch
   * Goal 14. macaw.businessLayer.Variable.removeValueLabel(Lmacaw/businessLayer/ValueLabel;)V: root-Branch
   * Goal 15. macaw.businessLayer.Variable.setCleaningStatus(Ljava/lang/String;)V: root-Branch
   * Goal 16. macaw.businessLayer.Variable.cloneAttributes(Lmacaw/businessLayer/Variable;)V: I102 Branch 45 IFEQ L1310 - true
   * Goal 17. macaw.businessLayer.Variable.cloneAttributes(Lmacaw/businessLayer/Variable;)V: I102 Branch 45 IFEQ L1310 - false
   * Goal 18. macaw.businessLayer.Variable.cloneAttributes(Lmacaw/businessLayer/Variable;)V: I160 Branch 46 IFEQ L1323 - true
   * Goal 19. macaw.businessLayer.Variable.cloneAttributes(Lmacaw/businessLayer/Variable;)V: I201 Branch 47 IFEQ L1330 - true
   * Goal 20. macaw.businessLayer.Variable.cloneAttributes(Lmacaw/businessLayer/Variable;)V: I231 Branch 48 IFNULL L1336 - true
   */

  @Test
  public void test28()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNotNull(rawVariable0);
      
      ValueLabel valueLabel0 = new ValueLabel();
      assertEquals(0, valueLabel0.getIdentifier());
      assertEquals("", valueLabel0.getValue());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals("", valueLabel0.getLabel());
      assertFalse(valueLabel0.isDeletedNewRecord());
      assertFalse(valueLabel0.isDeletedRecord());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel0.getEditingOperationType());
      assertFalse(valueLabel0.isMissingValue());
      assertTrue(valueLabel0.isNewRecord());
      assertFalse(valueLabel0.isEditingExistingRecord());
      assertNotNull(valueLabel0);
      
      ValueLabel valueLabel1 = new ValueLabel();
      assertEquals("", valueLabel1.getValue());
      assertEquals("0", valueLabel1.getDisplayItemIdentifier());
      assertEquals("", valueLabel1.getLabel());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel1.getEditingOperationType());
      assertEquals(0, valueLabel1.getIdentifier());
      assertTrue(valueLabel1.isNewRecord());
      assertFalse(valueLabel1.isEditingExistingRecord());
      assertFalse(valueLabel1.isDeletedRecord());
      assertFalse(valueLabel1.isMissingValue());
      assertFalse(valueLabel1.isDeletedNewRecord());
      assertNotSame(valueLabel1, valueLabel0);
      assertFalse(valueLabel1.equals((Object)valueLabel0));
      assertNotNull(valueLabel1);
      
      rawVariable0.addValueLabel(valueLabel0);
      assertEquals(0, valueLabel0.getIdentifier());
      assertEquals("", valueLabel0.getValue());
      assertEquals("0", valueLabel0.getDisplayItemIdentifier());
      assertEquals("", valueLabel0.getLabel());
      assertFalse(valueLabel0.isDeletedNewRecord());
      assertFalse(valueLabel0.isDeletedRecord());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel0.getEditingOperationType());
      assertFalse(valueLabel0.isMissingValue());
      assertTrue(valueLabel0.isNewRecord());
      assertFalse(valueLabel0.isEditingExistingRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNotSame(valueLabel0, valueLabel1);
      assertFalse(valueLabel0.equals((Object)valueLabel1));
      
      rawVariable0.removeValueLabel(valueLabel1);
      assertEquals("", valueLabel1.getValue());
      assertEquals("0", valueLabel1.getDisplayItemIdentifier());
      assertEquals("", valueLabel1.getLabel());
      assertEquals(ValueLabel.EditingOperationType.NEW, valueLabel1.getEditingOperationType());
      assertEquals(0, valueLabel1.getIdentifier());
      assertTrue(valueLabel1.isNewRecord());
      assertFalse(valueLabel1.isEditingExistingRecord());
      assertFalse(valueLabel1.isDeletedRecord());
      assertFalse(valueLabel1.isMissingValue());
      assertFalse(valueLabel1.isDeletedNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNotSame(valueLabel1, valueLabel0);
      assertFalse(valueLabel1.equals((Object)valueLabel0));
      
      RawVariable rawVariable1 = new RawVariable();
      assertEquals("", rawVariable1.getForm());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getAlias());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertNotSame(rawVariable1, rawVariable0);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotNull(rawVariable1);
      
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("", rawVariable1.getForm());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getAlias());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getName());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertNotSame(rawVariable1, rawVariable0);
      assertNotSame(rawVariable0, rawVariable1);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertFalse(rawVariable0.equals((Object)rawVariable1));
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.Variable.setNotes(Ljava/lang/String;)V: root-Branch
   * Goal 2. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I1107 Branch 36 IFGT L1176 - false
   */

  @Test
  public void test29()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertNotNull(derivedVariable0);
      
      derivedVariable0.setNotes("variable.isCoded.label");
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("variable.isCoded.label", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getFilePath());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertFalse(derivedVariable1.isNewRecord());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotNull(derivedVariable1);
      
      User user0 = new User();
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getDisplayName());
      assertNotNull(user0);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) derivedVariable0, (Variable) derivedVariable1);
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getAlias());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getName());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("", derivedVariable1.getFilePath());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("variable.isCoded.label", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getFirstName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getDisplayName());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertNotSame(derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
      assertNotNull(arrayList0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I313 Branch 20 IF_ICMPEQ L854 - false
   * Goal 2. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I318 Branch 21 IFNE L854 - false
   */

  @Test
  public void test30()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertNotNull(rawVariable0);
      
      rawVariable0.setCleaned(true);
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertNotNull(derivedVariable0);
      
      User user0 = new User();
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getDisplayName());
      assertNotNull(user0);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) rawVariable0, (Variable) derivedVariable0);
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getDisplayName());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getLabel());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getName());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertNotNull(arrayList0);
  }

  //Test case number: 31
  /*
   * 2 covered goals:
   * Goal 1. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I689 Branch 29 IFLE L995 - true
   * Goal 2. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I703 Branch 30 IFGT L1001 - false
   */

  @Test
  public void test31()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getFilePath());
      assertNotNull(rawVariable0);
      
      rawVariable0.columnEnd = "w[ S)w(R&e++I'3+";
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("w[ S)w(R&e++I'3+", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getFilePath());
      
      User user0 = new User();
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getEmail());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAffiliation());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getFirstName());
      assertNotNull(user0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getFilePath());
      assertNotNull(derivedVariable0);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) derivedVariable0, (Variable) rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("w[ S)w(R&e++I'3+", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getEmail());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getAffiliation());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getLastName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getFirstName());
      assertNotNull(arrayList0);
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.removeOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)V: I12 Branch 6 IFNULL L341 - false
   */

  @Test
  public void test32()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertNotNull(rawVariable0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("", ontologyTerm0.getDescription());
      assertNotNull(ontologyTerm0);
      
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("", ontologyTerm0.getDescription());
      
      // Undeclared exception!
      try {
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 33
  /*
   * 5 covered goals:
   * Goal 1. macaw.businessLayer.Variable.setYear(Ljava/lang/String;)V: root-Branch
   * Goal 2. macaw.businessLayer.Variable.setColumnStart(Ljava/lang/String;)V: root-Branch
   * Goal 3. macaw.businessLayer.Variable.setLabel(Ljava/lang/String;)V: root-Branch
   * Goal 4. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I104 Branch 17 IFGT L776 - false
   * Goal 5. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I174 Branch 18 IFGT L802 - false
   */

  @Test
  public void test33()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getColumnEnd());
      assertNotNull(rawVariable0);
      
      rawVariable0.setYear("gPno}6)M1(j_+%");
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("gPno}6)M1(j_+%", rawVariable0.getYear());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getColumnEnd());
      
      rawVariable0.setLabel("gPno}6)M1(j_+%");
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("gPno}6)M1(j_+%", rawVariable0.getYear());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("gPno}6)M1(j_+%", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getColumnEnd());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getNotes());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertNotNull(derivedVariable0);
      
      User user0 = new User();
      assertEquals("", user0.getEmail());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPhone());
      assertNotNull(user0);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) derivedVariable0, (Variable) rawVariable0);
      assertEquals("", user0.getEmail());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getPassword());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPhone());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getNotes());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("gPno}6)M1(j_+%", rawVariable0.getYear());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("gPno}6)M1(j_+%", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getColumnEnd());
      assertNotNull(arrayList0);
      
      derivedVariable0.setColumnStart("gPno}6)M1(j_+%");
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("gPno}6)M1(j_+%", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getNotes());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  //Test case number: 34
  /*
   * 7 covered goals:
   * Goal 1. macaw.businessLayer.Variable.getSupportingDocuments()Ljava/util/ArrayList;: root-Branch
   * Goal 2. macaw.businessLayer.Variable.setSupportingDocuments(Ljava/util/ArrayList;)V: root-Branch
   * Goal 3. macaw.businessLayer.Variable.addSupportingDocuments(Ljava/util/ArrayList;)V: root-Branch
   * Goal 4. macaw.businessLayer.Variable.removeSupportingDocument(Lmacaw/businessLayer/SupportingDocument;)V: root-Branch
   * Goal 5. macaw.businessLayer.Variable.containsSupportingDocument(Lmacaw/businessLayer/SupportingDocument;)Z: I17 Branch 1 IFEQ L279 - true
   * Goal 6. macaw.businessLayer.Variable.removeSupportingDocuments(Ljava/util/ArrayList;)V: I11 Branch 3 IFEQ L306 - true
   * Goal 7. macaw.businessLayer.Variable.removeSupportingDocuments(Ljava/util/ArrayList;)V: I11 Branch 3 IFEQ L306 - false
   */

  @Test
  public void test34()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertNotNull(rawVariable0);
      
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertNotNull(arrayList0);
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertNotNull(supportingDocument0);
      
      boolean boolean0 = arrayList0.add(supportingDocument0);
      assertTrue(boolean0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertNotNull(derivedVariable0);
      
      derivedVariable0.setSupportingDocuments(arrayList0);
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getAlias());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getForm());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertNotNull(derivedVariable1);
      
      boolean boolean1 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean1);
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getAlias());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      assertFalse(boolean1 == boolean0);
      
      derivedVariable1.addSupportingDocuments(arrayList0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getAlias());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getForm());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      
      derivedVariable1.removeSupportingDocuments(arrayList0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getDisplayName());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getLabel());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getAlias());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("", derivedVariable1.getName());
      assertEquals("", derivedVariable1.getForm());
      assertNotSame(derivedVariable1, derivedVariable0);
      assertFalse(derivedVariable1.equals((Object)derivedVariable0));
      
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", supportingDocument0.getTitle());
      assertEquals("", supportingDocument0.getFileName());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
      assertEquals("", supportingDocument0.getDocumentCode());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("", supportingDocument0.getDescription());
      assertEquals("", supportingDocument0.getFilePath());
      assertEquals(0, supportingDocument0.getIdentifier());
      assertNotSame(derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable0.equals((Object)derivedVariable1));
  }

  //Test case number: 35
  /*
   * 7 covered goals:
   * Goal 1. macaw.businessLayer.Variable.addOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)V: root-Branch
   * Goal 2. macaw.businessLayer.Variable.removeOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)V: I12 Branch 6 IFNULL L341 - true
   * Goal 3. macaw.businessLayer.Variable.removeOntologyTerms(Ljava/util/ArrayList;)V: I11 Branch 7 IFEQ L347 - false
   * Goal 4. macaw.businessLayer.Variable.updateOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)V: I12 Branch 8 IFNULL L354 - false
   * Goal 5. macaw.businessLayer.Variable.updateOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)V: I42 Branch 9 IF_ICMPNE L358 - false
   * Goal 6. macaw.businessLayer.Variable.findOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)Lmacaw/businessLayer/OntologyTerm;: I17 Branch 10 IFEQ L370 - false
   * Goal 7. macaw.businessLayer.Variable.findOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)Lmacaw/businessLayer/OntologyTerm;: I30 Branch 11 IF_ICMPNE L371 - false
   */

  @Test
  public void test35()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertNotNull(rawVariable0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertTrue(ontologyTerm0.isNewRecord());
      assertNotNull(ontologyTerm0);
      
      RawVariable rawVariable1 = new RawVariable();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getColumnStart());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getAlias());
      assertNotSame(rawVariable1, rawVariable0);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotNull(rawVariable1);
      
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getColumnStart());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getAlias());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotSame(rawVariable1, rawVariable0);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertNotNull(arrayList0);
      
      rawVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertNotSame(rawVariable0, rawVariable1);
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      
      boolean boolean0 = arrayList0.add(ontologyTerm0);
      assertTrue(boolean0);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getColumnStart());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNotSame(rawVariable1, rawVariable0);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      
      RawVariable rawVariable2 = new RawVariable();
      assertEquals("", rawVariable2.getFilePath());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("", rawVariable2.getDisplayName());
      assertEquals("", rawVariable2.getAlias());
      assertEquals("", rawVariable2.getCleaningDescription());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("", rawVariable2.getForm());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("", rawVariable2.getColumnEnd());
      assertEquals("", rawVariable2.getColumnStart());
      assertEquals("", rawVariable2.getLabel());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("", rawVariable2.getName());
      assertEquals(0, rawVariable2.getIdentifier());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("", rawVariable2.getQuestionNumber());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("", rawVariable2.getNotes());
      assertEquals("", rawVariable2.getYear());
      assertEquals("", rawVariable2.getCodeBookNumber());
      assertFalse(rawVariable2.isCoded());
      assertNotSame(rawVariable2, rawVariable1);
      assertNotSame(rawVariable2, rawVariable0);
      assertFalse(rawVariable2.equals((Object)rawVariable1));
      assertFalse(rawVariable2.equals((Object)rawVariable0));
      assertNotNull(rawVariable2);
      
      rawVariable2.removeOntologyTerms(arrayList0);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getDisplayName());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getColumnStart());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getName());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("", rawVariable1.getAlias());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", rawVariable2.getFilePath());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("", rawVariable2.getDisplayName());
      assertEquals("", rawVariable2.getAlias());
      assertEquals("", rawVariable2.getCleaningDescription());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("", rawVariable2.getForm());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("", rawVariable2.getColumnEnd());
      assertEquals("", rawVariable2.getColumnStart());
      assertEquals("", rawVariable2.getLabel());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("", rawVariable2.getName());
      assertEquals(0, rawVariable2.getIdentifier());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("", rawVariable2.getQuestionNumber());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("", rawVariable2.getNotes());
      assertEquals("", rawVariable2.getYear());
      assertEquals("", rawVariable2.getCodeBookNumber());
      assertFalse(rawVariable2.isCoded());
      assertNotSame(rawVariable1, rawVariable0);
      assertNotSame(rawVariable1, rawVariable2);
      assertNotSame(rawVariable2, rawVariable1);
      assertNotSame(rawVariable2, rawVariable0);
      assertFalse(rawVariable1.equals((Object)rawVariable0));
      assertFalse(rawVariable1.equals((Object)rawVariable2));
      assertFalse(rawVariable2.equals((Object)rawVariable1));
      assertFalse(rawVariable2.equals((Object)rawVariable0));
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getDisplayName());
      assertNotSame(rawVariable0, rawVariable1);
      assertNotSame(rawVariable0, rawVariable2);
      assertFalse(rawVariable0.equals((Object)rawVariable1));
      assertFalse(rawVariable0.equals((Object)rawVariable2));
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.createVariableSummary()Lmacaw/businessLayer/VariableSummary;: root-Branch
   */

  @Test
  public void test36()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertNotNull(derivedVariable0);
      
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getLabel());
      assertFalse(variableSummary0.isDerived());
      assertEquals("", variableSummary0.getDisplayName());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getName());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertEquals("", variableSummary0.getYear());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertNotNull(variableSummary0);
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.addSupportingDocument(Lmacaw/businessLayer/SupportingDocument;)V: root-Branch
   */

  @Test
  public void test37()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
      assertNotNull(rawVariable0);
      
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getColumnEnd());
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.getFilePath()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test38()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertNotNull(rawVariable0);
      
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertNotNull(string0);
  }

  //Test case number: 39
  /*
   * 11 covered goals:
   * Goal 1. macaw.businessLayer.Variable.setCleaned(Z)V: root-Branch
   * Goal 2. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I584 Branch 25 IFNONNULL L956 - false
   * Goal 3. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I615 Branch 27 IFGT L967 - false
   * Goal 4. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I897 Branch 33 IF_ICMPEQ L1100 - true
   * Goal 5. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I1037 Branch 35 IFGT L1151 - false
   * Goal 6. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I15 Branch 37 IFNONNULL L1219 - false
   * Goal 7. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I20 Branch 38 IFNONNULL L1219 - true
   * Goal 8. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I35 Branch 39 IFNULL L1222 - true
   * Goal 9. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I78 Branch 42 IF_ICMPNE L1235 - false
   * Goal 10. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I99 Branch 43 IFNULL L1241 - true
   * Goal 11. macaw.businessLayer.Variable.detectChangesInAlternativeVariable(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Lmacaw/system/MacawChangeEvent;: I115 Branch 44 IFNULL L1246 - false
   */

  @Test
  public void test39()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertNotNull(rawVariable0);
      
      rawVariable0.setCleaned(false);
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertNotNull(derivedVariable0);
      
      User user0 = new User();
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getFirstName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getDisplayName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertNotNull(user0);
      
      rawVariable0.columnStart = null;
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNull(rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getQuestionNumber());
      
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, (Variable) derivedVariable0, (Variable) derivedVariable0);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getFirstName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getDisplayName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(ChangeEventType.VARIABLE, macawChangeEvent0.getChangeType());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("", macawChangeEvent0.getUserID());
      assertNotNull(macawChangeEvent0);
      
      rawVariable0.questionNumber = "-CWABB";
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNull(rawVariable0.getColumnStart());
      assertEquals("-CWABB", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) rawVariable0, (Variable) derivedVariable0);
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getFilePath());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getFirstName());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getDisplayName());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getEmail());
      assertEquals("", user0.getCity());
      assertEquals("", user0.getPostCode());
      assertEquals("", rawVariable0.getName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertNull(rawVariable0.getColumnStart());
      assertEquals("-CWABB", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getForm());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getFilePath());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNotNull(arrayList0);
  }

  //Test case number: 40
  /*
   * 5 covered goals:
   * Goal 1. macaw.businessLayer.Variable.getOntologyTerms()Ljava/util/ArrayList;: root-Branch
   * Goal 2. macaw.businessLayer.Variable.addOntologyTerms(Ljava/util/ArrayList;)V: root-Branch
   * Goal 3. macaw.businessLayer.Variable.removeOntologyTerms(Ljava/util/ArrayList;)V: I11 Branch 7 IFEQ L347 - true
   * Goal 4. macaw.businessLayer.Variable.updateOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)V: I12 Branch 8 IFNULL L354 - true
   * Goal 5. macaw.businessLayer.Variable.findOntologyTerm(Lmacaw/businessLayer/OntologyTerm;)Lmacaw/businessLayer/OntologyTerm;: I17 Branch 10 IFEQ L370 - true
   */

  @Test
  public void test40()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertNotNull(ontologyTerm0);
      
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertNotNull(rawVariable0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("lha.mrc.ac.uk:LHA", ontologyTerm0.getNameSpace());
      assertEquals("", ontologyTerm0.getDescription());
      assertEquals("0", ontologyTerm0.getDisplayItemIdentifier());
      assertEquals("LHA", ontologyTerm0.getOntologyName());
      assertTrue(ontologyTerm0.isNewRecord());
      assertEquals("", ontologyTerm0.getTerm());
      assertEquals(0, ontologyTerm0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      rawVariable0.addOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getYear());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * Goal 1. macaw.businessLayer.Variable.getAlternativeVariable()Lmacaw/businessLayer/Variable;: root-Branch
   */

  @Test
  public void test41()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertNotNull(rawVariable0);
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getColumnEnd());
      assertEquals("", rawVariable0.getName());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getLabel());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getYear());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertNull(variable0);
  }

  //Test case number: 42
  /*
   * 40 covered goals:
   * Goal 1. macaw.businessLayer.Variable.getIdentifier()I: root-Branch
   * Goal 2. macaw.businessLayer.Variable.<init>()V: root-Branch
   * Goal 3. macaw.businessLayer.Variable.getCodeBookNumber()Ljava/lang/String;: root-Branch
   * Goal 4. macaw.businessLayer.Variable.setCoded(Z)V: root-Branch
   * Goal 5. macaw.businessLayer.Variable.getYear()Ljava/lang/String;: root-Branch
   * Goal 6. macaw.businessLayer.Variable.getDisplayName()Ljava/lang/String;: root-Branch
   * Goal 7. macaw.businessLayer.Variable.getNotes()Ljava/lang/String;: root-Branch
   * Goal 8. macaw.businessLayer.Variable.getLabel()Ljava/lang/String;: root-Branch
   * Goal 9. macaw.businessLayer.Variable.getCategory()Ljava/lang/String;: root-Branch
   * Goal 10. macaw.businessLayer.Variable.getName()Ljava/lang/String;: root-Branch
   * Goal 11. macaw.businessLayer.Variable.getQuestionNumber()Ljava/lang/String;: root-Branch
   * Goal 12. macaw.businessLayer.Variable.isCoded()Z: root-Branch
   * Goal 13. macaw.businessLayer.Variable.getColumnEnd()Ljava/lang/String;: root-Branch
   * Goal 14. macaw.businessLayer.Variable.getAvailability()Ljava/lang/String;: root-Branch
   * Goal 15. macaw.businessLayer.Variable.getCleaningStatus()Ljava/lang/String;: root-Branch
   * Goal 16. macaw.businessLayer.Variable.isCleaned()Z: root-Branch
   * Goal 17. macaw.businessLayer.Variable.getAlias()Ljava/lang/String;: root-Branch
   * Goal 18. macaw.businessLayer.Variable.getForm()Ljava/lang/String;: root-Branch
   * Goal 19. macaw.businessLayer.Variable.getCleaningDescription()Ljava/lang/String;: root-Branch
   * Goal 20. macaw.businessLayer.Variable.getColumnStart()Ljava/lang/String;: root-Branch
   * Goal 21. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I34 Branch 16 IFGT L748 - true
   * Goal 22. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I104 Branch 17 IFGT L776 - true
   * Goal 23. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I174 Branch 18 IFGT L802 - true
   * Goal 24. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I244 Branch 19 IFGT L827 - true
   * Goal 25. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I313 Branch 20 IF_ICMPEQ L854 - true
   * Goal 26. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I376 Branch 22 IFGT L873 - true
   * Goal 27. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I446 Branch 23 IFGT L899 - true
   * Goal 28. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I516 Branch 24 IFGT L929 - true
   * Goal 29. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I584 Branch 25 IFNONNULL L956 - true
   * Goal 30. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I601 Branch 26 IFNONNULL L962 - true
   * Goal 31. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I615 Branch 27 IFGT L967 - true
   * Goal 32. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I670 Branch 28 IFLE L989 - false
   * Goal 33. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I689 Branch 29 IFLE L995 - false
   * Goal 34. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I703 Branch 30 IFGT L1001 - true
   * Goal 35. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I758 Branch 31 IFGT L1022 - true
   * Goal 36. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I828 Branch 32 IFGT L1075 - true
   * Goal 37. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I897 Branch 33 IF_ICMPEQ L1100 - false
   * Goal 38. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I967 Branch 34 IFGT L1126 - true
   * Goal 39. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I1037 Branch 35 IFGT L1151 - true
   * Goal 40. macaw.businessLayer.Variable.detectFieldChanges(Lmacaw/businessLayer/User;Lmacaw/businessLayer/Variable;Lmacaw/businessLayer/Variable;)Ljava/util/ArrayList;: I1107 Branch 36 IFGT L1176 - true
   */

  @Test
  public void test42()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertEquals("", rawVariable0.getAlias());
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertNotNull(rawVariable0);
      
      rawVariable0.setCoded(true);
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertTrue(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      
      User user0 = new User();
      assertEquals("", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getEmail());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertNotNull(user0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertNotNull(derivedVariable0);
      
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, (Variable) derivedVariable0, (Variable) rawVariable0);
      assertEquals("", user0.getPassword());
      assertEquals("0", user0.getDisplayItemIdentifier());
      assertEquals("", user0.getAffiliation());
      assertEquals("", user0.getDisplayName());
      assertEquals("", user0.getUserID());
      assertEquals("", user0.getPhone());
      assertEquals("", user0.getLastName());
      assertEquals("", user0.getAddressLine1());
      assertEquals("", user0.getAddressLine2());
      assertEquals("", user0.getCounty());
      assertEquals("", user0.getEmail());
      assertEquals("UNVERIFIED", user0.getStatus());
      assertEquals(0, user0.getIdentifier());
      assertEquals("", user0.getFirstName());
      assertEquals("", user0.getPostCode());
      assertEquals("", user0.getCity());
      assertEquals("", rawVariable0.getYear());
      assertEquals("", rawVariable0.getLabel());
      assertEquals("", rawVariable0.getColumnEnd());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("", rawVariable0.getForm());
      assertEquals("", rawVariable0.getDisplayName());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("", rawVariable0.getFilePath());
      assertTrue(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getAlias());
      assertEquals("", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("", rawVariable0.getQuestionNumber());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", rawVariable0.getCleaningDescription());
      assertEquals("", rawVariable0.getColumnStart());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals("", derivedVariable0.getCleaningDescription());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getFilePath());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", derivedVariable0.getDisplayName());
      assertEquals("", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("", derivedVariable0.getNotes());
      assertEquals("", derivedVariable0.getYear());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("", derivedVariable0.getLabel());
      assertEquals("", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertNotNull(arrayList0);
  }
}
