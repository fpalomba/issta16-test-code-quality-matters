/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 11 21:35:43 GMT 2015
 */

package wheel.components;

import static org.junit.Assert.*;
import org.junit.Test;
import edu.stanford.nlp.ling.CategoryWordTag;
import edu.stanford.nlp.ling.IndexedWord;
import edu.stanford.nlp.ling.LabeledWord;
import edu.stanford.nlp.ling.WordLemmaTag;
import edu.stanford.nlp.ling.WordTag;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;
import org.xmlpull.v1.wrapper.XmlPullWrapperFactory;
import org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.ISelectModel;
import wheel.components.Label;
import wheel.components.Link;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.small(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test000()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("encode");
      DateInput dateInput0 = new DateInput(xmlEntityRef0, "encode", "encode", "encode");
      // Undeclared exception!
      try {
        Component component0 = dateInput0.small((Object) "encode");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.radioGroup(Ljava/lang/String;Lwheel/components/ISelectModel;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test001()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = errorPage0.el("a");
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.radioGroup("a", (ISelectModel) null, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h1()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test002()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h1();
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.fileInput(Ljava/lang/String;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test003()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("nbsp");
      ElExpression elExpression0 = new ElExpression("nbsp");
      // Undeclared exception!
      try {
        FormElement formElement0 = xmlEntityRef0.fileInput("nbsp", elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I12 Branch 57 IFEQ L1701 - false
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I25 Branch 58 IFEQ L1704 - false
   */

  @Test
  public void test004()  throws Throwable  {
      Form form0 = new Form("fdvAB^v");
      Form form1 = form0._getVisibleForm(true);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h6(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test005()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = new Block(errorPage0, "=)");
      Label label0 = (Label)block0.h6((Object) errorPage0);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._applyFormat(Ljava/lang/Object;)Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.cite()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test006()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, "\"9m", "\"9m");
      String string0 = numberInput0._applyFormat((Object) "\"9m");
      Block block0 = (Block)errorPage0.cite();
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.var()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test007()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.var();
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.htmlText(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test008()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = (Text)errorPage0.htmlText((Object) errorPage0);
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I49 Branch 60 IFEQ L1711 - false
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I62 Branch 61 IFEQ L1714 - false
   */

  @Test
  public void test009()  throws Throwable  {
      Form form0 = new Form("@/Aoc2CRKK2[2m&H4oh");
      Checkbox checkbox0 = new Checkbox(form0, "@/Aoc2CRKK2[2m&H4oh", "@/Aoc2CRKK2[2m&H4oh");
      Form form1 = checkbox0._getVisibleForm(true);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.passwordInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component.address(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test010()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "of");
      TableBlock tableBlock0 = table0.thead();
      Any any0 = tableBlock0.col();
      Label label0 = (Label)errorPage0.address((Object) any0);
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.passwordInput("of");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I61 Branch 27 IFNONNULL L195 - false
   */

  @Test
  public void test011()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String[] stringArray0 = new String[2];
      Any any0 = (Any)errorPage0.area(stringArray0);
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.checkbox(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test012()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.checkbox("Could not evaluate finder expression ' ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.rawText(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test013()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = (Text)errorPage0.rawText((Object) "Error loading classifier from jar file (most likely you are not running this code from a jar file or the named classifier is not stored in the jar file)");
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.radio(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test014()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "", "");
      // Undeclared exception!
      try {
        FormElement formElement0 = textInput0.radio("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.del(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test015()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.del((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.message(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   */

  @Test
  public void test016()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "Can'taddcomponentf to a coXponen7|that is notan instane of IContainer.", "Can'taddcomponentf to a coXponen7|that is notan instane of IContainer.");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.required();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.th()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test017()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Error loading classifier from jar file (most likely you are not running this code from a jar file or the named classifier is not stored in the jar file)");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.th();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Th component can be added only to a TableRow.
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dl()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test018()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Radio radio0 = new Radio(errorPage0, "components", "components");
      // Undeclared exception!
      try {
        Component component0 = radio0.dl();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sup(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test019()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.sup((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.iframe()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test020()  throws Throwable  {
      Form form0 = new Form("Can't add componets to a component that is not an istnce of ICon7ainer.");
      // Undeclared exception!
      try {
        Component component0 = form0.iframe();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.actionBinding(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test021()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "OV'7:S^ A^$w%:H}", "OV'7:S^ A^$w%:H}");
      Checkbox checkbox1 = (Checkbox)checkbox0.actionBinding("OV'7:S^ A^$w%:H}");
      assertFalse(checkbox1._isGeneratedId());
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.del()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test022()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.del();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.link()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test023()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Long/long");
      Hidden hidden0 = new Hidden(xmlEntityRef0, "Long/long", "Long/long");
      // Undeclared exception!
      try {
        Component component0 = hidden0.link();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._setComponentId(Ljava/lang/String;)V: root-Branch
   */

  @Test
  public void test024()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.title("Can't add com?onents to f )omponent that is not an instance of IContainer.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.b(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test025()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("t3");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.b((Object) xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.addFirst(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - false
   * Goal 3. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I41 Branch 73 IFEQ L1806 - true
   */

  @Test
  public void test026()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.addFirst((Component) errorPage0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 100000
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.getComponentName()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test027()  throws Throwable  {
      Form form0 = new Form("Can'taddcomponentf to a coXponen7|that is notan instane of IContainer.");
      String string0 = form0.getComponentName();
      assertEquals("Can'taddcomponentf to a coXponen7|that is notan instane of IContainer.", form0.getComponentId());
      assertEquals("Form", string0);
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.hr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test028()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("is");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.hr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.numberInput(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test029()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "Supported", "Supported");
      // Undeclared exception!
      try {
        FormElement formElement0 = textInput0.numberInput("Supported", (CharSequence) "Supported");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.div()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test030()  throws Throwable  {
      Form form0 = new Form("Can't add components to a component that is not an instance of IContainer.");
      // Undeclared exception!
      try {
        Component component0 = form0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.textInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test031()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.textInput("Can only set spans o tees which use CoreLabel");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 32
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I26 Branch 25 IFLE L192 - true
   * Goal 2. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I55 Branch 26 IF_ICMPLE L195 - false
   * Goal 3. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I61 Branch 27 IFNONNULL L195 - true
   * Goal 4. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - true
   * Goal 5. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - false
   */

  @Test
  public void test032()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "7|P8~bS1;9|AYB`,", "7|P8~bS1;9|AYB`,");
      String[] stringArray0 = new String[6];
      Checkbox checkbox1 = (Checkbox)checkbox0.attributes(stringArray0);
      assertSame(checkbox1, checkbox0);
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.u()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test033()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.u();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.strike()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test034()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.strike();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.cite(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test035()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.cite((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h5(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test036()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.h5((Object) "Can only set spans o tees which use CoreLabel");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tt(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test037()  throws Throwable  {
      DateInput dateInput0 = new DateInput((Component) null, "instance", "instance", "instance");
      // Undeclared exception!
      try {
        Component component0 = dateInput0.tt((Object) "instance");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.style()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test038()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.style();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 39
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.submit(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I37 Branch 55 IFEQ L1690 - false
   */

  @Test
  public void test039()  throws Throwable  {
      Form form0 = new Form("Can't add components to a component that is not an instance of IContainer.");
      Radio radio0 = new Radio(form0, "Can't add components to a component that is not an instance of IContainer.", "Can't add components to a component that is not an instance of IContainer.");
      // Undeclared exception!
      try {
        FormElement formElement0 = radio0.submit("Can't add components to a component that is not an instance of IContainer.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.address()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test040()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, (String) null, "QhyX'\"F6'G");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.address();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 41
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.dt(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.abbr(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.body()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test041()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.abbr((Object) errorPage0);
      Label label1 = (Label)errorPage0.dt((Object) errorPage0);
      Table table0 = new Table(label1, "");
      TableRow tableRow0 = table0.tr();
      // Undeclared exception!
      try {
        Component component0 = tableRow0.body();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 42
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._clear()V: I7 Branch 90 IFNULL L1892 - false
   * Goal 2. wheel.components.Component._clear()V: I46 Branch 93 IFNULL L1901 - false
   */

  @Test
  public void test042()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.fieldset();
      assertTrue(block0._isGeneratedId());
      
      errorPage0._clear();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 43
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.table()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test043()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("e>");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.table();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 44
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getRenderableChildren()Ljava/util/List;: I13 Branch 37 IFNULL L288 - true
   */

  @Test
  public void test044()  throws Throwable  {
      Form form0 = new Form("[bD>y^8YyB':/xpG;]");
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance();
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance(xmlPullParserFactory0);
      StaticXmlSerializerWrapper staticXmlSerializerWrapper0 = (StaticXmlSerializerWrapper)xmlPullWrapperFactory0.newSerializerWrapper();
      form0.renderComponent((XmlSerializer) staticXmlSerializerWrapper0);
      assertEquals("[bD>y^8YyB':/xpG;]", form0.getComponentId());
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.code()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test045()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.code();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 46
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.date()Ljava/util/Calendar;: root-Branch
   */

  @Test
  public void test046()  throws Throwable  {
      TextArea textArea0 = new TextArea((Component) null, "running", "running");
      DateInput dateInput0 = new DateInput(textArea0, "running", "running", "running");
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try {
        dateInput0._setSubmitValue(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to initialize SimpleDateFormat with pattern 'running'.
         //
      }
  }

  //Test case number: 47
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.q(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test047()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.q((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 48
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.pre()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test048()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, "-NABSTRACT", "-NABSTRACT");
      // Undeclared exception!
      try {
        Component component0 = numberInput0.pre();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 49
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.select(Ljava/lang/String;Lwheel/components/ISelectModel;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test049()  throws Throwable  {
      Form form0 = new Form((String) null);
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      String string0 = Short.toString((short)259);
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.select((String) null, (ISelectModel) stringSelectModel0, (CharSequence) "259");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 50
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.remove(Ljava/lang/String;)Lwheel/components/Component;: I9 Branch 42 IFLE L342 - true
   * Goal 2. wheel.components.Component.remove(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 43 IFNE L342 - false
   */

  @Test
  public void test050()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.small();
      // Undeclared exception!
      try {
        ErrorPage errorPage1 = (ErrorPage)errorPage0.remove("is");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Component with id is does not exist.
         //
      }
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.placeholder(Ljava/lang/String;)Lwheel/components/Block;: root-Branch
   */

  @Test
  public void test051()  throws Throwable  {
      DateInput dateInput0 = new DateInput((Component) null, "@T*U", "@T*U", "@T*U");
      // Undeclared exception!
      try {
        Block block0 = dateInput0.placeholder("@T*U");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 52
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I11 Branch 144 IFNULL L2344 - true
   * Goal 2. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I11 Branch 144 IFNULL L2344 - false
   * Goal 3. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I19 Branch 145 IFNE L2345 - true
   * Goal 4. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I40 Branch 146 IFLE L2350 - true
   * Goal 5. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I56 Branch 147 IFLE L2353 - true
   * Goal 6. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I71 Branch 148 IF_ICMPEQ L2356 - true
   * Goal 7. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I161 Branch 153 IFLE L2373 - true
   * Goal 8. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I173 Branch 154 IFEQ L2373 - true
   */

  @Test
  public void test052()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "");
      // Undeclared exception!
      try {
        Component component0 = any0.end("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression ''.
         //
      }
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dd()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test053()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dd();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 54
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getChildren()Ljava/util/List;: I7 Branch 36 IFNONNULL L275 - false
   * Goal 2. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I25 Branch 110 IFEQ L1999 - true
   */

  @Test
  public void test054()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.find("a");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id a on the page.
         //
      }
  }

  //Test case number: 55
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.thead()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test055()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.thead();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
      }
  }

  //Test case number: 56
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.small()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test056()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "y", "y");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.small();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 57
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.legend()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test057()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.legend();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 58
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.requestFocus()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.noscript()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.end()Lwheel/components/Component;: I7 Branch 155 IFNONNULL L2384 - true
   */

  @Test
  public void test058()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.requestFocus();
      Block block0 = (Block)errorPage0.noscript();
      ErrorPage errorPage2 = (ErrorPage)block0.end();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 59
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.end()Lwheel/components/Component;: I7 Branch 155 IFNONNULL L2384 - false
   */

  @Test
  public void test059()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.end();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not end compoennt, already at root.
         //
      }
  }

  //Test case number: 60
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.reset(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test060()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.reset("Error loading classifier from jar file (most likely you are not running this code from a jar file or the named classifier is not stored in the jar file)");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 61
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dt()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test061()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dt();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 62
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.blockquote()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test062()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, "Error loadng classifier from jar file (most likely you are not running this code from a jar file or the named classifier is not stored in the jar file)", "Error loadng classifier from jar file (most likely you are not running this code from a jar file or the named classifier is not stored in the jar file)");
      // Undeclared exception!
      try {
        Component component0 = hidden0.blockquote();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 63
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - true
   */

  @Test
  public void test063()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = errorPage0._getAction();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 64
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h6()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test064()  throws Throwable  {
      Form form0 = new Form("h1");
      // Undeclared exception!
      try {
        Component component0 = form0.h6();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 65
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dfn()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test065()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Can'taddcomponentf to a coXponen7|that is notan instane of IContainer.");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.dfn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 66
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.remove(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.h4(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.equals(Ljava/lang/Object;)Z: I7 Branch 97 IF_ACMPNE L1920 - false
   */

  @Test
  public void test066()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Boolean boolean0 = new Boolean(true);
      Label label0 = (Label)errorPage0.h4((Object) boolean0);
      ErrorPage errorPage1 = (ErrorPage)errorPage0.remove((Component) label0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 67
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.label()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test067()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.label();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 68
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.b()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - true
   */

  @Test
  public void test068()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "R");
      Table table1 = table0.renderHint((CharSequence) null);
      assertFalse(table1._isGeneratedId());
      
      Block block0 = (Block)errorPage0.b();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 69
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.s()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.h5()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test069()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h5();
      Block block1 = (Block)block0.s();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 70
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.u(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test070()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "33`?#JrvQIJCR", "33`?#JrvQIJCR");
      CategoryWordTag categoryWordTag0 = new CategoryWordTag("33`?#JrvQIJCR");
      LabeledWord labeledWord0 = new LabeledWord((edu.stanford.nlp.ling.Label) categoryWordTag0, (edu.stanford.nlp.ling.Label) categoryWordTag0);
      // Undeclared exception!
      try {
        Component component0 = checkbox0.u((Object) labeledWord0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 71
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test071()  throws Throwable  {
      Form form0 = new Form("li");
      // Undeclared exception!
      try {
        Component component0 = form0.tr();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tr component can be added only to a TableBlock.
         //
      }
  }

  //Test case number: 72
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ins(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test072()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.ins((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 73
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.imageSubmit(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test073()  throws Throwable  {
      Form form0 = new Form("Testing with batchsize: ");
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.imageSubmit("Testing with batchsize: ", "Testing with batchsize: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 74
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.em()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test074()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.em();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 75
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.form(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test075()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("Can't add components to a )omponent that is not an instance of IContainer.");
      assertEquals("Can't add components to a )omponent that is not an instance of IContainer.", form0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 76
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.numberInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test076()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.numberInput("'qP:q;L)`=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 77
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ins()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test077()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "Can't add components to a componnt that is not an instance of IContainer.", "Can't add components to a componnt that is not an instance of IContainer.");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.ins();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 78
  /*
   * 12 covered goals:
   * Goal 1. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - false
   * Goal 2. wheel.components.Component._clear()V: I7 Branch 90 IFNULL L1892 - true
   * Goal 3. wheel.components.Component._clear()V: I20 Branch 91 IFNULL L1895 - true
   * Goal 4. wheel.components.Component._clear()V: I33 Branch 92 IFNULL L1898 - true
   * Goal 5. wheel.components.Component._clear()V: I46 Branch 93 IFNULL L1901 - true
   * Goal 6. wheel.components.Component._clear()V: I59 Branch 94 IFNULL L1904 - true
   * Goal 7. wheel.components.Component._clear()V: I72 Branch 95 IFNULL L1907 - true
   * Goal 8. wheel.components.Component._clear()V: I85 Branch 96 IFNULL L1910 - true
   * Goal 9. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I17 Branch 105 IFNE L1971 - true
   * Goal 10. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I52 Branch 107 IFNONNULL L1976 - false
   * Goal 11. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I58 Branch 108 IFNE L1976 - true
   * Goal 12. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I79 Branch 109 IFNONNULL L1981 - false
   */

  @Test
  public void test078()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Can't add components to a )omponent that is not an instance of IContainer.");
      xmlEntityRef0._clear();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.get("Can't add components to a )omponent that is not an instance of IContainer.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id 'Can't add components to a )omponent that is not an instance of IContainer.'.
         //
      }
  }

  //Test case number: 79
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.img(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test079()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, (String) null, "-m&Th");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.img("-m&Th", "-m&Th");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 80
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.checkboxGroup(Ljava/lang/String;Lwheel/components/ISelectModel;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test080()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel0 = errorPage0.selectModel();
      ElExpression elExpression0 = new ElExpression("org.mvel.optimizers.AbstractOptimizer");
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.checkboxGroup("org.mvel.optimizers.AbstractOptimizer", (ISelectModel) dynamicSelectModel0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 81
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.el(Ljava/lang/String;)Lwheel/components/ElExpression;: root-Branch
   * Goal 2. wheel.components.Component._getActions()Ljava/util/List;: root-Branch
   */

  @Test
  public void test081()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = errorPage0.el("a");
      TextInput textInput0 = new TextInput(errorPage0, "a", "a");
      Checkbox checkbox0 = new Checkbox(textInput0, "a", "a");
      checkbox0._clear();
      assertFalse(textInput0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 82
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I12 Branch 63 IFEQ L1731 - true
   */

  @Test
  public void test082()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        ErrorPage errorPage1 = (ErrorPage)errorPage0._getTopLevelComponent(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 83
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.li()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test083()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, " 8(d", " 8(d");
      // Undeclared exception!
      try {
        Component component0 = hidden0.li();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 84
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.i(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test084()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "that", "that");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 0, 0, 0, 0);
      // Undeclared exception!
      try {
        Component component0 = checkbox0.i((Object) mockGregorianCalendar0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 85
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.a()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test085()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = (Link)errorPage0.a();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(link0._isGeneratedId());
  }

  //Test case number: 86
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.button()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test086()  throws Throwable  {
      Form form0 = new Form("@/Aoc2CRKK2[2m&H4oh");
      Hidden hidden0 = new Hidden(form0, "@/Aoc2CRKK2[2m&H4oh", "@/Aoc2CRKK2[2m&H4oh");
      // Undeclared exception!
      try {
        Component component0 = hidden0.button();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 87
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.p(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test087()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "Can'taddcmponentf to a coXponen7|tha is notan instane of IContainer.");
      Hidden hidden0 = new Hidden(table0, "Can'taddcmponentf to a coXponen7|tha is notan instane of IContainer.", "Can'taddcmponentf to a coXponen7|tha is notan instane of IContainer.");
      // Undeclared exception!
      try {
        Component component0 = hidden0.p((Object) hidden0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 88
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I98 Branch 18 IFLE L150 - false
   * Goal 2. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I110 Branch 19 IFNE L150 - true
   */

  @Test
  public void test088()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "Error loading classifier from jar file (most likely you are not running this code from a jar file or the named classifier is not stored in the jar file)");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(any0._isGeneratedId());
  }

  //Test case number: 89
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.wrapSelf()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test089()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "|L|h< Y&2Xq=_sS4Qf", "|L|h< Y&2Xq=_sS4Qf");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.wrapSelf();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 90
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sup()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test090()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.sup();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 91
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.code(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test091()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      WordLemmaTag wordLemmaTag0 = new WordLemmaTag("omologs", "omologs", "omologs");
      Label label0 = (Label)errorPage0.code((Object) wordLemmaTag0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 92
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.h2()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.textarea(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test092()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h2();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.textarea((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 93
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.strong(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.wBlock(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test093()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      WordTag wordTag0 = new WordTag("3pie<DCw3,Gs2h)");
      Label label0 = (Label)errorPage0.strong((Object) wordTag0);
      Block block0 = (Block)label0.wBlock((CharSequence) "3pie<DCw3,Gs2h)");
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 94
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tfoot()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test094()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.tfoot();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tfoot component can be added only to a Table.
         //
      }
  }

  //Test case number: 95
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.frame(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.strike(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.entity(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test095()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = (XmlEntityRef)errorPage0.entity("Can'taddcomponentf to a coXponen7|that is notan instane of IContainer.");
      TableBlock tableBlock0 = new TableBlock(errorPage0, "Can'taddcomponentf to a coXponen7|that is notan instane of IContainer.");
      Any any0 = tableBlock0.col();
      Label label0 = (Label)errorPage0.strike((Object) any0);
      // Undeclared exception!
      try {
        Component component0 = any0.frame((CharSequence) "Can'taddcomponentf to a coXponen7|that is notan instane of IContainer.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 96
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.var(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test096()  throws Throwable  {
      Form form0 = new Form("Can't add components to a component that is not an instance of IContainer.");
      Short short0 = new Short((short)4524);
      // Undeclared exception!
      try {
        Component component0 = form0.var((Object) short0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 97
  /*
   * 16 covered goals:
   * Goal 1. wheel.components.Component.actionBinding(Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.acronym()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.action(Ljava/lang/String;)Lwheel/components/ActionExpression;: root-Branch
   * Goal 4. wheel.components.Component.br()Lwheel/components/Component;: root-Branch
   * Goal 5. wheel.components.Component.form(Ljava/lang/String;Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   * Goal 6. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I7 Branch 29 IFNONNULL L239 - false
   * Goal 7. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I26 Branch 30 IFNULL L244 - true
   * Goal 8. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - false
   * Goal 9. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I14 Branch 34 IFLE L264 - false
   * Goal 10. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I26 Branch 35 IFNE L264 - true
   * Goal 11. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - true
   * Goal 12. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - false
   * Goal 13. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I147 Branch 79 IFNE L1828 - false
   * Goal 14. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - false
   * Goal 15. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I211 Branch 82 IFNONNULL L1845 - true
   * Goal 16. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I227 Branch 83 IFEQ L1848 - true
   */

  @Test
  public void test097()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.acronym();
      ActionExpression actionExpression0 = errorPage0.action("&h");
      Form form0 = new Form(errorPage0, "&h", actionExpression0);
      Form form1 = (Form)errorPage0.form("&h", actionExpression0);
      Any any0 = (Any)form0.br();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(any0._isGeneratedId());
  }

  //Test case number: 98
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.script()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 51 IFNE L1654 - false
   */

  @Test
  public void test098()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.script();
      assertTrue(block0._isGeneratedId());
      
      Block block1 = (Block)block0.id("CZDn]7jkxo.x98lh");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 99
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.fileInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test099()  throws Throwable  {
      DateInput dateInput0 = new DateInput((Component) null, "OV'7:S^ A^$w%:H}", "OV'7:S^ A^$w%:H}", "OV'7:S^ A^$w%:H}");
      // Undeclared exception!
      try {
        FormElement formElement0 = dateInput0.fileInput("OV'7:S^ A^$w%:H}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 100
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.dfn(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.dateInput(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 3. wheel.components.Component.abbr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test100()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.dfn((Object) errorPage0);
      Block block0 = (Block)label0.abbr();
      // Undeclared exception!
      try {
        FormElement formElement0 = block0.dateInput("Can't add components to F component that is not an instance of IContainer.", "Can't add components to F component that is not an instance of IContainer.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 101
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.label(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I67 Branch 127 IFNULL L2110 - true
   * Goal 3. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I85 Branch 128 IFNULL L2113 - true
   * Goal 4. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I195 Branch 137 IFEQ L2130 - true
   * Goal 5. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I221 Branch 139 IFNONNULL L2136 - false
   */

  @Test
  public void test101()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression("");
      Label label0 = (Label)errorPage0.label((Object) elExpression0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 102
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tbody()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test102()  throws Throwable  {
      Form form0 = new Form("TzV.f.S]Rg:Lb0");
      // Undeclared exception!
      try {
        Component component0 = form0.tbody();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tbody component can be added only to a Table.
         //
      }
  }

  //Test case number: 103
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.bdo(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test103()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "=a)'r]e4mzr _on[", "=a)'r]e4mzr _on[");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.bdo((CharSequence) "=a)'r]e4mzr _on[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 104
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.kbd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.param(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - true
   * Goal 4. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - true
   * Goal 5. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - true
   */

  @Test
  public void test104()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "MlGB)(15r8hZX");
      Label label0 = (Label)table0.kbd((Object) false);
      assertEquals("MlGB)(15r8hZX", table0.getComponentId());
      
      Table table1 = table0.id("MlGB)(15r8hZX");
      TableBlock tableBlock0 = table1.colgroup();
      TableBlock tableBlock1 = tableBlock0.renderHint((CharSequence) "MlGB)(15r8hZX");
      Any any0 = (Any)errorPage0.param((CharSequence) "MlGB)(15r8hZX", (CharSequence) "MlGB)(15r8hZX");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(any0._isGeneratedId());
  }

  //Test case number: 105
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.big(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test105()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Radio radio0 = new Radio(errorPage0, "compjonents", "compjonents");
      // Undeclared exception!
      try {
        Component component0 = radio0.big((Object) "compjonents");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 106
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.buttonInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component.hashCode()I: I7 Branch 103 IFNULL L1932 - false
   */

  @Test
  public void test106()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "Can't add components to a )omponent that is not an instance of IContainer.", "Can't add components to a )omponent that is not an instance of IContainer.");
      int int0 = checkbox0.hashCode();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.buttonInput("Can't add components to a )omponent that is not an instance of IContainer.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 107
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.ul()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.object()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test107()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.ul();
      Block block1 = (Block)errorPage0.object();
      assertTrue(block1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 108
  /*
   * 10 covered goals:
   * Goal 1. wheel.components.Component.acronym(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 46 IFNE L1642 - false
   * Goal 3. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I27 Branch 47 IFEQ L1642 - true
   * Goal 4. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - false
   * Goal 5. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I73 Branch 49 IFEQ L1652 - false
   * Goal 6. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I87 Branch 50 IFNE L1654 - false
   * Goal 7. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 51 IFNE L1654 - true
   * Goal 8. wheel.components.Component.getComponents()Ljava/util/Map;: I12 Branch 69 IFNE L1774 - true
   * Goal 9. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - true
   * Goal 10. wheel.components.Component.up(I)Lwheel/components/Component;: I14 Branch 104 IF_ICMPGE L1954 - false
   */

  @Test
  public void test108()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.acronym((Object) "-~K{)dLIu?5uE1}P4|i");
      Table table0 = new Table(label0, "-~K{)dLIu?5uE1}P4|i");
      TableBlock tableBlock0 = table0.colgroup();
      TableBlock tableBlock1 = tableBlock0.id("-~K{)dLIu?5uE1}P4|i");
      Any any0 = tableBlock0.col();
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ISO_TIME;
      Locale locale0 = dateTimeFormatter0.getLocale();
      String string0 = locale0.getCountry();
      DateInput dateInput0 = new DateInput(any0, "-~K{)dLIu?5uE1}P4|i", "-~K{)dLIu?5uE1}P4|i", "");
      // Undeclared exception!
      try {
        DateInput dateInput1 = (DateInput)dateInput0.up(2734);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 109
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.col()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test109()  throws Throwable  {
      Form form0 = new Form("Could not find component with id '");
      // Undeclared exception!
      try {
        Component component0 = form0.col();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Col component can be added only to a TableBlock.
         //
      }
  }

  //Test case number: 110
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.noframes()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test110()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.noframes();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 111
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h3(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test111()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.h3((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 112
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.area([Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I6 Branch 23 IFNULL L189 - false
   * Goal 3. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I12 Branch 24 IFNE L189 - true
   * Goal 4. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I26 Branch 25 IFLE L192 - false
   */

  @Test
  public void test112()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try {
        Any any0 = (Any)errorPage0.area(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attributes must be given in name, value pairs.
         //
      }
  }

  //Test case number: 113
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component.clasS(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.h3()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.span()Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - false
   * Goal 5. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - true
   * Goal 6. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - false
   * Goal 7. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I98 Branch 18 IFLE L150 - true
   * Goal 8. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I110 Branch 19 IFNE L150 - false
   */

  @Test
  public void test113()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.span();
      Form form0 = new Form("Can't add components to a component that is not an instance of IContainer.");
      Form form1 = (Form)form0.clasS((CharSequence) "Can't add components to a component that is not an instance of IContainer.");
      // Undeclared exception!
      try {
        Component component0 = form0.h3();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 114
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.big()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.em(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test114()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.big();
      Checkbox checkbox0 = new Checkbox(block0, "", "");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.em((Object) "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 115
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - false
   */

  @Test
  public void test115()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = new Link(errorPage0, "3pie<DCw3,Gs2h)");
      ElExpression elExpression0 = new ElExpression("3pie<DCw3,Gs2h)");
      // Undeclared exception!
      try {
        Component component0 = link0.a((Object) elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression 3pie<DCw3,Gs2h) in class wheel.ErrorPage
         //
      }
  }

  //Test case number: 116
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test116()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.dd((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 117
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.caption()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test117()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("^4`Bp.^Ob^d/0");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.caption();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
      }
  }

  //Test case number: 118
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - true
   */

  @Test
  public void test118()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "K", "K");
      Form form0 = checkbox0._getVisibleForm(false);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(checkbox0._isGeneratedId());
  }

  //Test case number: 119
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.h2(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - true
   */

  @Test
  public void test119()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "span");
      Link link0 = new Link(errorPage0, any0);
      Label label0 = (Label)errorPage0.h2((Object) "span");
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 120
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.nbsp()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test120()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.nbsp();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 121
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.kbd()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.up(I)Lwheel/components/Component;: I14 Branch 104 IF_ICMPGE L1954 - true
   */

  @Test
  public void test121()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.up((-558));
      TableBlock tableBlock0 = new TableBlock(errorPage0, "Can'taddcomponentf to a coXponen7|that is notan instane of IContainer.");
      Any any0 = tableBlock0.col();
      // Undeclared exception!
      try {
        Component component0 = any0.kbd();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 122
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.td()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test122()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
      }
  }

  //Test case number: 123
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.encode(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.getEngine()Lwheel/IEngine;: root-Branch
   */

  @Test
  public void test123()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        String string0 = errorPage0.encode("Can't add components to a component that is not an instance of IContainer.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 124
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.text(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - false
   */

  @Test
  public void test124()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = (Text)errorPage0.text((Object) null);
      assertTrue(text0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 125
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component._getXhtmlAttributes()Ljava/util/Map;: root-Branch
   * Goal 2. wheel.components.Component.map(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.s(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.colgroup()Lwheel/components/Component;: root-Branch
   * Goal 5. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - false
   * Goal 6. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - true
   * Goal 7. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - true
   */

  @Test
  public void test125()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "Can'taddcmponentf to a coXponen7|tha is notan instane of IContainer.");
      Hidden hidden0 = new Hidden(table0, "Can'taddcmponentf to a coXponen7|tha is notan instane of IContainer.", "Can'taddcmponentf to a coXponen7|tha is notan instane of IContainer.");
      TableBlock tableBlock0 = table0.thead();
      Block block0 = (Block)tableBlock0.map("Can'taddcmponentf to a coXponen7|tha is notan instane of IContainer.");
      Label label0 = (Label)tableBlock0.s((Object) errorPage0);
      // Undeclared exception!
      try {
        Component component0 = hidden0.colgroup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Colgroup component can be added only to a Table.
         //
      }
  }

  //Test case number: 126
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.fieldset()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.i()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test126()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.fieldset();
      Block block1 = (Block)block0.i();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block1._isGeneratedId());
  }

  //Test case number: 127
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.base(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test127()  throws Throwable  {
      DateInput dateInput0 = new DateInput((Component) null, "OV'7:S^ A^$w%:H}", "OV'7:S^ A^$w%:H}", "OV'7:S^ A^$w%:H}");
      // Undeclared exception!
      try {
        Component component0 = dateInput0.base((CharSequence) "OV'7:S^ A^$w%:H}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 128
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.selectModel()Lwheel/util/DynamicSelectModel;: root-Branch
   */

  @Test
  public void test128()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, "stem", "stem");
      DynamicSelectModel dynamicSelectModel0 = numberInput0.selectModel();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(numberInput0._isGeneratedId());
  }

  //Test case number: 129
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.multiSelect(Ljava/lang/String;Lwheel/components/ISelectModel;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - true
   * Goal 3. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - true
   * Goal 4. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - false
   * Goal 5. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I37 Branch 55 IFEQ L1690 - true
   */

  @Test
  public void test129()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0, "Error loading classifier from jar file (most likely you are not running this code from a jar file or the named classifier is not stored in the jar file)");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      // Undeclared exception!
      try {
        FormElement formElement0 = tableBlock0.multiSelect("Error loading classifier from jar file (most likely you are not running this code from a jar file or the named classifier is not stored in the jar file)", (ISelectModel) stringSelectModel0, (CharSequence) "Error loading classifier from jar file (most likely you are not running this code from a jar file or the named classifier is not stored in the jar file)");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 130
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - true
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - true
   */

  @Test
  public void test130()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0, "");
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 131
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.h1(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.q()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test131()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.h1((Object) "Error loading classifier from jar file (most likely you are not running this code from a jar file or the named classifier is not stored in the jar file)");
      Block block0 = (Block)label0.q();
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 132
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component._setParent(Lwheel/components/Component;)V: root-Branch
   * Goal 2. wheel.components.Component.pre(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - true
   * Goal 4. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - true
   */

  @Test
  public void test132()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.pre((Object) "3pie<DCw3,Gs2h)");
      errorPage0._setParent((Component) label0);
      Form form0 = new Form("3pie<DCw3,Gs2h)");
      Table table0 = null;
      try {
        table0 = new Table(form0, "3pie<DCw3,Gs2h)");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 133
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - false
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I12 Branch 57 IFEQ L1701 - true
   * Goal 3. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - true
   * Goal 4. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - false
   * Goal 5. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I49 Branch 60 IFEQ L1711 - true
   */

  @Test
  public void test133()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "a", "a");
      Form form0 = checkbox0._getVisibleForm(true);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("a", checkbox0.getComponentId());
  }

  //Test case number: 134
  /*
   * 6 covered goals:
   * Goal 1. wheel.components.Component.samp(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - false
   * Goal 3. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - false
   * Goal 4. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - false
   * Goal 5. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I19 Branch 122 IFEQ L2079 - true
   * Goal 6. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I46 Branch 123 IFEQ L2084 - true
   */

  @Test
  public void test134()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0, "Error loading classifier from jar file (most likely you are not runnig this code from a jar file or the named classifier is not stored in the jar file)");
      Checkbox checkbox0 = new Checkbox(tableBlock0, "Error loading classifier from jar file (most likely you are not runnig this code from a jar file or the named classifier is not stored in the jar file)", "Error loading classifier from jar file (most likely you are not runnig this code from a jar file or the named classifier is not stored in the jar file)");
      IndexedWord indexedWord0 = new IndexedWord();
      // Undeclared exception!
      try {
        Component component0 = checkbox0.samp((Object) indexedWord0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 135
  /*
   * 11 covered goals:
   * Goal 1. wheel.components.Component.head()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.meta()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I15 Branch 7 IFNULL L102 - true
   * Goal 4. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I46 Branch 9 IFNE L107 - true
   * Goal 5. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - true
   * Goal 6. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - true
   * Goal 7. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - false
   * Goal 8. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - false
   * Goal 9. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - true
   * Goal 10. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - true
   * Goal 11. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - true
   */

  @Test
  public void test135()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.head();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 136
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h4()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test136()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        Component component0 = form0.h4();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 137
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.strong()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.hidden(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 3. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - false
   * Goal 4. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - false
   * Goal 5. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - false
   */

  @Test
  public void test137()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.strong();
      Form form0 = new Form("Error loading classifier from jar file (most likely you are not runnig this code from a jar file or the named classifier is not stored in the jar file)");
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.hidden("Error loading classifier from jar file (most likely you are not runnig this code from a jar file or the named classifier is not stored in the jar file)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 138
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component.ol()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - true
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - true
   * Goal 4. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - false
   * Goal 5. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - false
   * Goal 6. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - false
   * Goal 7. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - true
   * Goal 8. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - false
   */

  @Test
  public void test138()  throws Throwable  {
      Form form0 = new Form((String) null);
      Checkbox checkbox0 = new Checkbox(form0, (String) null, "Tr component can be added only to a TableBlock.");
      // Undeclared exception!
      try {
        Component component0 = form0.ol();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 139
  /*
   * 27 covered goals:
   * Goal 1. wheel.components.Component._setGeneratedId(Z)V: root-Branch
   * Goal 2. wheel.components.Component.add(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component._isGeneratedId()Z: root-Branch
   * Goal 4. wheel.components.Component.getComponentId()Ljava/lang/String;: root-Branch
   * Goal 5. wheel.components.Component.tt()Lwheel/components/Component;: root-Branch
   * Goal 6. wheel.components.Component.afterAdd()V: root-Branch
   * Goal 7. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - false
   * Goal 8. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - false
   * Goal 9. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I22 Branch 12 IFNULL L142 - true
   * Goal 10. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - false
   * Goal 11. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - true
   * Goal 12. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I146 Branch 20 IFLE L157 - true
   * Goal 13. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I158 Branch 21 IFNE L157 - false
   * Goal 14. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - false
   * Goal 15. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I12 Branch 63 IFEQ L1731 - false
   * Goal 16. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - true
   * Goal 17. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - true
   * Goal 18. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - true
   * Goal 19. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - false
   * Goal 20. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I107 Branch 75 IFEQ L1822 - false
   * Goal 21. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I114 Branch 76 IFNE L1822 - false
   * Goal 22. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - false
   * Goal 23. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - true
   * Goal 24. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I173 Branch 80 IFEQ L1837 - true
   * Goal 25. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - true
   * Goal 26. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I280 Branch 85 IFEQ L1859 - true
   * Goal 27. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - false
   */

  @Test
  public void test139()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.tt();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 140
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component.getParent()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.a(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - false
   * Goal 4. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - true
   * Goal 5. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - false
   * Goal 6. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - false
   * Goal 7. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - true
   * Goal 8. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - true
   */

  @Test
  public void test140()  throws Throwable  {
      Form form0 = new Form("Can't add components to a )omponent that is not an instance of IContainer.");
      // Undeclared exception!
      try {
        Component component0 = form0.a((Object) "Can't add components to a )omponent that is not an instance of IContainer.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 141
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.<init>(Lwheel/components/Component;)V: root-Branch
   */

  @Test
  public void test141()  throws Throwable  {
      Label label0 = null;
      try {
        label0 = new Label((Component) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
