/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 12 09:02:18 GMT 2015
 */

package wheel.components;

import static org.junit.Assert.*;
import org.junit.Test;
import edu.stanford.nlp.ling.TaggedWord;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.ISelectModel;
import wheel.components.Label;
import wheel.components.Link;
import wheel.components.Radio;
import wheel.components.RenderableComponent;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.Text;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.InitialFieldValue;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.end()Lwheel/components/Component;: I7 Branch 155 IFNONNULL L2384 - true
   */

  @Test
  public void test00()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "Cannot add a form element. No surrounding form found.", "Cannot add a form element. No surrounding form found.");
      XmlEntityRef xmlEntityRef1 = (XmlEntityRef)checkbox0.end();
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef1.getComponentId());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I11 Branch 144 IFNULL L2344 - true
   */

  @Test
  public void test01()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.end("con");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression 'con'.
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.up(I)Lwheel/components/Component;: I14 Branch 104 IF_ICMPGE L1954 - false
   */

  @Test
  public void test02()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        ErrorPage errorPage1 = (ErrorPage)errorPage0.up(1651);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.up(I)Lwheel/components/Component;: I14 Branch 104 IF_ICMPGE L1954 - true
   */

  @Test
  public void test03()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      XmlEntityRef xmlEntityRef1 = (XmlEntityRef)xmlEntityRef0.up(0);
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
      assertNotNull(xmlEntityRef1);
  }

  //Test case number: 4
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component._clear()V: I7 Branch 90 IFNULL L1892 - true
   * Goal 2. wheel.components.Component._clear()V: I20 Branch 91 IFNULL L1895 - true
   * Goal 3. wheel.components.Component._clear()V: I33 Branch 92 IFNULL L1898 - true
   * Goal 4. wheel.components.Component._clear()V: I46 Branch 93 IFNULL L1901 - true
   * Goal 5. wheel.components.Component._clear()V: I59 Branch 94 IFNULL L1904 - true
   * Goal 6. wheel.components.Component._clear()V: I72 Branch 95 IFNULL L1907 - true
   * Goal 7. wheel.components.Component._clear()V: I85 Branch 96 IFNULL L1910 - true
   */

  @Test
  public void test04()  throws Throwable  {
      Form form0 = new Form("<NVBf>5");
      form0._clear();
      assertEquals("<NVBf>5", form0.getComponentId());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.addInternalRenderHint(Ljava/lang/String;)Lwheel/components/Component;: I7 Branch 89 IFNONNULL L1880 - false
   */

  @Test
  public void test05()  throws Throwable  {
      Form form0 = new Form("hunter/NN");
      Form form1 = (Form)form0.addInternalRenderHint("hunter/NN");
      assertEquals("hunter/NN", form0.getComponentId());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - false
   * Goal 2. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I211 Branch 82 IFNONNULL L1845 - false
   */

  @Test
  public void test06()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      FileInput fileInput0 = new FileInput(errorPage0, "", "");
      // Undeclared exception!
      try {
        Component component0 = errorPage0.add((Component) fileInput0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot add a form element. No surrounding form found.
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.getComponents()Ljava/util/Map;: I12 Branch 69 IFNE L1774 - false
   */

  @Test
  public void test07()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "4Gia-%4?\";D&s[[4C3M");
      Map<String, Component> map0 = table0.getComponents();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I12 Branch 57 IFEQ L1701 - true
   */

  @Test
  public void test08()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("QzL(ns[QNa@");
      Form form0 = xmlEntityRef0._getVisibleForm(true);
      assertEquals("QzL(ns[QNa@", xmlEntityRef0.getComponentId());
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - false
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I12 Branch 57 IFEQ L1701 - false
   * Goal 3. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I25 Branch 58 IFEQ L1704 - false
   */

  @Test
  public void test09()  throws Throwable  {
      Form form0 = new Form("o0,y'_");
      Form form1 = form0._getVisibleForm(true);
      assertEquals("o0,y'_", form1.getComponentId());
      assertNotNull(form1);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - true
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - true
   */

  @Test
  public void test10()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("?1S4x*");
      Form form0 = xmlEntityRef0._getVisibleForm(false);
      assertEquals("?1S4x*", xmlEntityRef0.getComponentId());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - true
   */

  @Test
  public void test11()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "Cannot add a form element. No surrounding form found.", "Cannot add a form element. No surrounding form found.");
      Form form0 = checkbox0._getForm(false);
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - false
   */

  @Test
  public void test12()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "4Gia-%4?\";D&s[[4C3M");
      // Undeclared exception!
      try {
        Table table1 = table0.id("\"GS,fZZ^1 ~");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getRenderableChildren()Ljava/util/List;: I13 Branch 37 IFNULL L288 - true
   */

  @Test
  public void test13()  throws Throwable  {
      Form form0 = new Form("}97IN#{)Ss1Cx");
      List<RenderableComponent> list0 = form0._getRenderableChildren();
      assertEquals("}97IN#{)Ss1Cx", form0.getComponentId());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - true
   */

  @Test
  public void test14()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = errorPage0._getAction();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - true
   * Goal 2. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - false
   */

  @Test
  public void test15()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) null);
      assertTrue(any0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dfn()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.dfn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.q()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.q();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.span()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.span();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.addFirst(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "RRr${{c6/[G.P`K%R", "", "RRr${{c6/[G.P`K%R");
      // Undeclared exception!
      try {
        Component component0 = dateInput0.addFirst((Component) errorPage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 20
  /*
   * 9 covered goals:
   * Goal 1. wheel.components.Component.a(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 46 IFNE L1642 - false
   * Goal 3. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I27 Branch 47 IFEQ L1642 - true
   * Goal 4. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - true
   * Goal 5. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I73 Branch 49 IFEQ L1652 - false
   * Goal 6. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I87 Branch 50 IFNE L1654 - false
   * Goal 7. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 51 IFNE L1654 - true
   * Goal 8. wheel.components.Component.getComponents()Ljava/util/Map;: I12 Branch 69 IFNE L1774 - true
   * Goal 9. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - true
   */

  @Test
  public void test20()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Object object0 = new Object();
      Link link0 = (Link)errorPage0.a(object0);
      assertTrue(link0._isGeneratedId());
      
      Table table0 = new Table(errorPage0, "4Gia-%4?\";D&s[[4C3M");
      Table table1 = table0.id("\"GS,fZZ^1 ~");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.label(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      Form form0 = new Form("rn;4--\"eN");
      // Undeclared exception!
      try {
        Component component0 = form0.label((Object) "rn;4--\"eN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.caption()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      Form form0 = new Form("hunter/NN");
      // Undeclared exception!
      try {
        Component component0 = form0.caption();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ol()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      Form form0 = new Form("^g>");
      // Undeclared exception!
      try {
        Component component0 = form0.ol();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.big(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "/W**", "B");
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("/W**");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.big((Object) xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.wBlock(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "K*q`y/;LVkV?gX", "K*q`y/;LVkV?gX");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.wBlock((CharSequence) "pj");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.selectModel()Lwheel/util/DynamicSelectModel;: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("?1S4x*");
      DynamicSelectModel dynamicSelectModel0 = xmlEntityRef0.selectModel();
      assertEquals("?1S4x*", xmlEntityRef0.getComponentId());
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._setParent(Lwheel/components/Component;)V: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      Table table0 = new Table(errorPage0, "fk/)l`FOi8:;I");
      table0._setParent((Component) text0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(text0._isGeneratedId());
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getActions()Ljava/util/List;: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      Radio radio0 = new Radio(xmlEntityRef0, "abbr", ",_)Vo:5u<`YJl<}");
      List<ActionExpression> list0 = radio0._getActions();
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.textarea(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("]&");
      // Undeclared exception!
      try {
        FormElement formElement0 = xmlEntityRef0.textarea("]&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.table()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("'Wx}!]D}k*KW");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.table();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 31
  @Test
  public void test31()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = errorPage0.action("FLZ9iC'");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.rawText(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        Component component0 = form0.rawText((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.big()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      Form form0 = new Form("map");
      // Undeclared exception!
      try {
        Component component0 = form0.big();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.message(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "Can't add components to a component that is not an instance of IContainer.", "");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.isInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.strike()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test35()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, "1H|}QJT0$(", "Ob");
      // Undeclared exception!
      try {
        Component component0 = hidden0.strike();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.noframes()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test36()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      // Undeclared exception!
      try {
        Component component0 = text0.noframes();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test37()  throws Throwable  {
      Submit submit0 = new Submit((Component) null, "C[rYZM?", "C[rYZM?");
      // Undeclared exception!
      try {
        Component component0 = submit0.dd((Object) "C[rYZM?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._applyFormat(Ljava/lang/Object;)Ljava/lang/String;: root-Branch
   */

  @Test
  public void test38()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "RRr${{c/[GP`K%", "", "RRr${{c/[GP`K%");
      Object object0 = new Object();
      String string0 = dateInput0._applyFormat(object0);
      assertTrue(dateInput0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 39
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.action(Ljava/lang/String;)Lwheel/components/ActionExpression;: root-Branch
   * Goal 2. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - true
   */

  @Test
  public void test39()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.tt();
      ActionExpression actionExpression0 = block0.action("FLZ9iC'");
      Object[] objectArray0 = new Object[12];
      objectArray0[1] = (Object) block0;
      ActionExpression actionExpression1 = actionExpression0.parameters(objectArray0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 40
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component.small(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - false
   * Goal 3. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - false
   * Goal 4. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I67 Branch 127 IFNULL L2110 - true
   * Goal 5. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I85 Branch 128 IFNULL L2113 - true
   * Goal 6. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I195 Branch 137 IFEQ L2130 - true
   * Goal 7. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I221 Branch 139 IFNONNULL L2136 - false
   */

  @Test
  public void test40()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "RRr${{c/[GP`K%", "", "RRr${{c/[GP`K%");
      ElExpression elExpression0 = errorPage0.el("");
      // Undeclared exception!
      try {
        Component component0 = dateInput0.small((Object) elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sub(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test41()  throws Throwable  {
      Form form0 = new Form("");
      Hidden hidden0 = new Hidden(form0, "O.jr&[^t", "*m;1\"(");
      InitialFieldValue initialFieldValue0 = new InitialFieldValue((Object) null, "MfgmZj[+");
      // Undeclared exception!
      try {
        Component component0 = hidden0.sub((Object) initialFieldValue0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 42
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.htmlText(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test42()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("frame");
      TaggedWord taggedWord0 = new TaggedWord("chunk");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.htmlText((Object) taggedWord0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 43
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.li(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test43()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.li((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 44
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h5()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test44()  throws Throwable  {
      Form form0 = new Form("r)v");
      // Undeclared exception!
      try {
        Component component0 = form0.h5();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dt()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test45()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("?1S4x*");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.dt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 46
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h4()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test46()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.h4();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 47
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.span(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test47()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.span((Object) "");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 48
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.b(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test48()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.b((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 49
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.passwordInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test49()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.passwordInput("onclick");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 50
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.encode(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.getEngine()Lwheel/IEngine;: root-Branch
   */

  @Test
  public void test50()  throws Throwable  {
      Form form0 = new Form("V");
      // Undeclared exception!
      try {
        String string0 = form0.encode("&PX,}2:Gt^2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.colgroup()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test51()  throws Throwable  {
      Form form0 = new Form("");
      Checkbox checkbox0 = new Checkbox(form0, "", "*m;1\"(");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.colgroup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Colgroup component can be added only to a Table.
         //
      }
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.acronym()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test52()  throws Throwable  {
      Form form0 = new Form("}97IN#{)Ss1Cx");
      // Undeclared exception!
      try {
        Component component0 = form0.acronym();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.radio(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test53()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.radio("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 54
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ul()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test54()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.ul();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 55
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.div()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test55()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "frameset", "lS7E{7Klnb ");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 56
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.nbsp()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.tt()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - true
   */

  @Test
  public void test56()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.nbsp();
      Block block0 = (Block)errorPage1.tt();
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 57
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.getComponentName()Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - false
   * Goal 3. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I41 Branch 73 IFEQ L1806 - true
   */

  @Test
  public void test57()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.add((Component) errorPage0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 100000
         //
      }
  }

  //Test case number: 58
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.base(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test58()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = (Any)errorPage0.base((CharSequence) "");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(any0._isGeneratedId());
  }

  //Test case number: 59
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.del()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test59()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "4Gia-%4?\";D&s[[4C3M");
      Block block0 = (Block)table0.del();
      assertEquals("4Gia-%4?\";D&s[[4C3M", table0.getComponentId());
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 60
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.imageSubmit(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test60()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.imageSubmit("s]Ek'bTr?8Q;~'", "s]Ek'bTr?8Q;~'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 61
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test61()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.tr();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tr component can be added only to a TableBlock.
         //
      }
  }

  //Test case number: 62
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.actionBinding(Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test62()  throws Throwable  {
      Form form0 = new Form("h4");
      // Undeclared exception!
      try {
        form0.buildComponent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 63
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.form(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test63()  throws Throwable  {
      Form form0 = new Form("map");
      // Undeclared exception!
      try {
        Component component0 = form0.form("map");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 64
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dl()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test64()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dl();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 65
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.samp(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test65()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TaggedWord taggedWord0 = new TaggedWord("getTLPParams", "");
      Label label0 = (Label)errorPage0.samp((Object) taggedWord0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 66
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.numberInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test66()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "_Ed6", "_Ed6");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.numberInput("_Ed6");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 67
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.el(Ljava/lang/String;)Lwheel/components/ElExpression;: root-Branch
   * Goal 2. wheel.components.Component.fileInput(Ljava/lang/String;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test67()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = errorPage0.el("src");
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.fileInput("#.'UiwBMU^i", elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 68
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.fileInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - true
   * Goal 3. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - true
   * Goal 4. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - false
   * Goal 5. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I37 Branch 55 IFEQ L1690 - true
   */

  @Test
  public void test68()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "f", "");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.fileInput("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 69
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component._setComponentId(Ljava/lang/String;)V: root-Branch
   * Goal 2. wheel.components.Component.head()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.meta()Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - true
   * Goal 5. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - true
   * Goal 6. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - true
   * Goal 7. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - false
   * Goal 8. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - true
   */

  @Test
  public void test69()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "RRr${{c/[GP`K%", "", "RRr${{c/[GP`K%");
      TextInput textInput0 = new TextInput(dateInput0, "0i<0Xq\";SQmVWwB4", "");
      // Undeclared exception!
      try {
        Component component0 = textInput0.title("RRr${{c/[GP`K%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 70
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.placeholder(Ljava/lang/String;)Lwheel/components/Block;: root-Branch
   * Goal 2. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - true
   * Goal 3. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - true
   */

  @Test
  public void test70()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "Finder expression didn't evaluate to a boolean value.", "INVOKEINTERFACE ");
      // Undeclared exception!
      try {
        Block block0 = checkbox0.placeholder("INVOKEINTERFACE ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 71
  /*
   * 6 covered goals:
   * Goal 1. wheel.components.Component.area([Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I15 Branch 7 IFNULL L102 - true
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I46 Branch 9 IFNE L107 - true
   * Goal 4. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I6 Branch 23 IFNULL L189 - false
   * Goal 5. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I12 Branch 24 IFNE L189 - true
   * Goal 6. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I26 Branch 25 IFLE L192 - false
   */

  @Test
  public void test71()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try {
        Any any0 = (Any)errorPage0.area(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attributes must be given in name, value pairs.
         //
      }
  }

  //Test case number: 72
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.acronym(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test72()  throws Throwable  {
      Form form0 = new Form("^g>");
      // Undeclared exception!
      try {
        Component component0 = form0.acronym((Object) "8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 73
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.h3()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - true
   */

  @Test
  public void test73()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, ")v&M>u-)\"p7Fvg;", "'Wx}!]D}k*KW");
      // Undeclared exception!
      try {
        Component component0 = hidden0.h3();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 74
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.var()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test74()  throws Throwable  {
      Form form0 = new Form("^g>");
      // Undeclared exception!
      try {
        Component component0 = form0.var();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 75
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.small()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test75()  throws Throwable  {
      Form form0 = new Form("h4");
      // Undeclared exception!
      try {
        Component component0 = form0.small();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 76
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.frame(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test76()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("/W**");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.frame((CharSequence) "B");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 77
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.kbd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test77()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.kbd((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 78
  /*
   * 10 covered goals:
   * Goal 1. wheel.components.Component.map(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - false
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - false
   * Goal 4. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - false
   * Goal 5. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - true
   * Goal 6. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - false
   * Goal 7. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - false
   * Goal 8. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - true
   * Goal 9. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I19 Branch 122 IFEQ L2079 - true
   * Goal 10. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I46 Branch 123 IFEQ L2084 - true
   */

  @Test
  public void test78()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.map("G:^");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(block0._isGeneratedId());
  }

  //Test case number: 79
  /*
   * 6 covered goals:
   * Goal 1. wheel.components.Component.actionBinding(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I7 Branch 29 IFNONNULL L239 - false
   * Goal 3. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I26 Branch 30 IFNULL L244 - true
   * Goal 4. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - false
   * Goal 5. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I14 Branch 34 IFLE L264 - false
   * Goal 6. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I26 Branch 35 IFNE L264 - true
   */

  @Test
  public void test79()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.actionBinding((String) null);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 80
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tfoot()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test80()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.tfoot();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tfoot component can be added only to a Table.
         //
      }
  }

  //Test case number: 81
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h2(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test81()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("?1S4x*");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.h2((Object) xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 82
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.clasS(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test82()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.clasS((CharSequence) "DGT2c;}0]");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 83
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.multiSelect(Ljava/lang/String;Lwheel/components/ISelectModel;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - true
   * Goal 3. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - false
   * Goal 4. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - false
   * Goal 5. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - false
   */

  @Test
  public void test83()  throws Throwable  {
      Form form0 = new Form("^g>");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.multiSelect("zQg<+QK]xEM9BH", (ISelectModel) dynamicSelectModel0, (CharSequence) "^g>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 84
  /*
   * 6 covered goals:
   * Goal 1. wheel.components.Component._getXhtmlAttributes()Ljava/util/Map;: root-Branch
   * Goal 2. wheel.components.Component.text(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - false
   * Goal 4. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - true
   * Goal 5. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - false
   * Goal 6. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - false
   */

  @Test
  public void test84()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      FileInput fileInput0 = new FileInput(errorPage0, "", "");
      Text text0 = (Text)errorPage0.text((Object) fileInput0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(fileInput0._isGeneratedId());
  }

  //Test case number: 85
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.dt(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;)V: root-Branch
   * Goal 3. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - true
   * Goal 4. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - false
   */

  @Test
  public void test85()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.dt((Object) xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 86
  /*
   * 34 covered goals:
   * Goal 1. wheel.components.Component.dd()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._setGeneratedId(Z)V: root-Branch
   * Goal 3. wheel.components.Component.add(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component._isGeneratedId()Z: root-Branch
   * Goal 5. wheel.components.Component.getParent()Lwheel/components/Component;: root-Branch
   * Goal 6. wheel.components.Component.getComponentId()Ljava/lang/String;: root-Branch
   * Goal 7. wheel.components.Component.afterAdd()V: root-Branch
   * Goal 8. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - false
   * Goal 9. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - false
   * Goal 10. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - true
   * Goal 11. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - true
   * Goal 12. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - false
   * Goal 13. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I22 Branch 12 IFNULL L142 - true
   * Goal 14. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - false
   * Goal 15. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - true
   * Goal 16. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I146 Branch 20 IFLE L157 - true
   * Goal 17. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I158 Branch 21 IFNE L157 - false
   * Goal 18. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - false
   * Goal 19. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I12 Branch 63 IFEQ L1731 - false
   * Goal 20. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - false
   * Goal 21. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - true
   * Goal 22. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - true
   * Goal 23. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - true
   * Goal 24. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - false
   * Goal 25. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I107 Branch 75 IFEQ L1822 - false
   * Goal 26. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I114 Branch 76 IFNE L1822 - false
   * Goal 27. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - false
   * Goal 28. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - true
   * Goal 29. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I173 Branch 80 IFEQ L1837 - true
   * Goal 30. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - true
   * Goal 31. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I280 Branch 85 IFEQ L1859 - true
   * Goal 32. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - false
   * Goal 33. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - true
   * Goal 34. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - true
   */

  @Test
  public void test86()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dd();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }
}
