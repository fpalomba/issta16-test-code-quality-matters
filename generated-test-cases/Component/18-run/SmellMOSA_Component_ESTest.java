/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 12 01:05:51 GMT 2015
 */

package wheel.components;

import static org.junit.Assert.*;
import org.junit.Test;
import edu.stanford.nlp.ling.Word;
import edu.stanford.nlp.process.WordTokenFactory;
import edu.stanford.nlp.sequences.SeqClassifierFlags;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.ISelectModel;
import wheel.components.Label;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.InitialFieldValue;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.submit(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test00()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "S)5W", "S)5W");
      // Undeclared exception!
      try {
        FormElement formElement0 = fileInput0.submit("S)5W");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - true
   */

  @Test
  public void test01()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, ".,svp['H^a+J}}?4(j");
      TableBlock tableBlock0 = table0.thead();
      TableBlock tableBlock1 = tableBlock0.renderHint((CharSequence) ".,svp['H^a+J}}?4(j");
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.tbody()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.nbsp()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test02()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, " .<i,S");
      TableRow tableRow0 = table0.tr();
      Table table1 = (Table)table0.nbsp();
      // Undeclared exception!
      try {
        Component component0 = tableRow0.tbody();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tbody component can be added only to a Table.
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.numberInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test03()  throws Throwable  {
      TextArea textArea0 = new TextArea((Component) null, "ven", "ven");
      // Undeclared exception!
      try {
        FormElement formElement0 = textArea0.numberInput("ven");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.entity(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test04()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      XmlEntityRef xmlEntityRef0 = (XmlEntityRef)errorPage0.entity("edu.stanford.nlp.trees.tregex.TregexPattern");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("edu.stanford.nlp.trees.tregex.TregexPattern", xmlEntityRef0.getComponentId());
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test05()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
      
      InitialFieldValue initialFieldValue0 = new InitialFieldValue((Object) 'U', (String) null);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.dd((Object) initialFieldValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I46 Branch 123 IFEQ L2084 - false
   * Goal 2. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I53 Branch 124 IFEQ L2084 - true
   */

  @Test
  public void test06()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = new Label((Component) errorPage0, (Object) errorPage0);
      Table table0 = new Table(label0, "beget");
      TableBlock tableBlock0 = table0.colgroup();
      TextArea textArea0 = new TextArea((Component) tableBlock0, "beget", "beget");
      // Undeclared exception!
      try {
        Component component0 = textArea0.find("beget");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id beget on the page.
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h2()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test07()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "G)$;<gzVX2]v}K>=d", "G)$;<gzVX2]v}K>=d");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.h2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dt(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test08()  throws Throwable  {
      SeqClassifierFlags seqClassifierFlags0 = new SeqClassifierFlags();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      WordTokenFactory wordTokenFactory0 = new WordTokenFactory();
      Word word0 = wordTokenFactory0.makeToken((String) null, 1, 1000);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.dt((Object) word0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.span(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test09()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.span((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.radio(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "h4", "h4");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.radio("h4");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.getComponentName()Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - false
   * Goal 3. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I41 Branch 73 IFEQ L1806 - true
   */

  @Test
  public void test11()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.add((Component) errorPage0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 100000
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ul()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Radio radio0 = new Radio(errorPage0, "|", "|");
      // Undeclared exception!
      try {
        Component component0 = radio0.ul();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.placeholder(Ljava/lang/String;)Lwheel/components/Block;: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "q3B4|d':^-GE#S}{", "q3B4|d':^-GE#S}{");
      // Undeclared exception!
      try {
        Block block0 = textInput0.placeholder("q3B4|d':^-GE#S}{");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ins()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test14()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.ins();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.body()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.body();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.del()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, "f2,Khn {/>M*t[SQk", "f2,Khn {/>M*t[SQk");
      // Undeclared exception!
      try {
        Component component0 = hidden0.del();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.q()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      Submit submit0 = new Submit((Component) null, "", "");
      // Undeclared exception!
      try {
        Component component0 = submit0.q();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.up(I)Lwheel/components/Component;: I14 Branch 104 IF_ICMPGE L1954 - false
   */

  @Test
  public void test18()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        ErrorPage errorPage1 = (ErrorPage)errorPage0.up(1633);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.acronym(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.acronym((Object) form0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.script()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.script();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.kbd()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      Form form0 = new Form("7B=v`m='%");
      // Undeclared exception!
      try {
        Component component0 = form0.kbd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.equals(Ljava/lang/Object;)Z: I7 Branch 97 IF_ACMPNE L1920 - false
   */

  @Test
  public void test22()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "b", "b");
      boolean boolean0 = checkbox0.equals((Object) checkbox0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(boolean0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - false
   */

  @Test
  public void test23()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression("S$y");
      Checkbox checkbox0 = new Checkbox(errorPage0, "S$y", "S$y");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.u((Object) elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression S$y in class wheel.ErrorPage
         //
      }
  }

  //Test case number: 24
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.strong(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - true
   */

  @Test
  public void test24()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.strong((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      
      Form form0 = errorPage0._getForm(false);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.i(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      Form form0 = new Form("2aawD`oxK9rX,sSU@R");
      // Undeclared exception!
      try {
        Component component0 = form0.i((Object) form0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.fileInput(Ljava/lang/String;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = errorPage0.el("L]+[U_e'}");
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.fileInput("L]+[U_e'}", elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.imageSubmit(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component.h4()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h4();
      // Undeclared exception!
      try {
        FormElement formElement0 = block0.imageSubmit("over-commt", "over-commt");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.colgroup()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.colgroup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Colgroup component can be added only to a Table.
         //
      }
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.buttonInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.buttonInput("b");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.em()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.em();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.cite(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Long long0 = Long.getLong("ryi5ZAW}CV}^czY");
      Label label0 = (Label)errorPage0.cite((Object) null);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.form(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      Form form0 = new Form("5~KP}]r;&qD<tv`{l");
      // Undeclared exception!
      try {
        Component component0 = form0.form("5~KP}]r;&qD<tv`{l");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I12 Branch 63 IFEQ L1731 - true
   */

  @Test
  public void test33()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        ErrorPage errorPage1 = (ErrorPage)errorPage0._getTopLevelComponent(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.checkboxGroup(Ljava/lang/String;Lwheel/components/ISelectModel;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = errorPage0.el("ma}yuqd}nDbPZ0-");
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.checkboxGroup("ma}yuqd}nDbPZ0-", (ISelectModel) stringSelectModel0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 35
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.tr()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - true
   */

  @Test
  public void test35()  throws Throwable  {
      NumberInput numberInput0 = new NumberInput((Component) null, "L]8PT;U_e'}", "L]8PT;U_e'}");
      NumberInput numberInput1 = (NumberInput)numberInput0.attribute("L]8PT;U_e'}", (CharSequence) "L]8PT;U_e'}");
      // Undeclared exception!
      try {
        Component component0 = numberInput1.tr();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tr component can be added only to a TableBlock.
         //
      }
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.code()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test36()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(":5A");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.code();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.actionBinding(Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test37()  throws Throwable  {
      Form form0 = new Form((String) null);
      ActionExpression actionExpression0 = form0.getAction();
      // Undeclared exception!
      try {
        Component component0 = form0.actionBinding((ActionExpression) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 38
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.head()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.meta()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I46 Branch 9 IFNE L107 - true
   * Goal 4. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - true
   */

  @Test
  public void test38()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.head();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 39
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.sup(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.s()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test39()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.s();
      Byte byte0 = new Byte((byte)0);
      Label label0 = (Label)errorPage0.sup((Object) byte0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.legend()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test40()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, "$.5'F|LS~4`b&.3W-mZ", "$.5'F|LS~4`b&.3W-mZ");
      // Undeclared exception!
      try {
        Component component0 = hidden0.legend();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.iframe()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test41()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("bejewel");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.iframe();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 42
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.q(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test42()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.q((Object) null);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 43
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.passwordInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - false
   */

  @Test
  public void test43()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.passwordInput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 44
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - true
   */

  @Test
  public void test44()  throws Throwable  {
      Form form0 = new Form("[-filter]");
      Table table0 = null;
      try {
        table0 = new Table(form0, "[-filter]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getActions()Ljava/util/List;: root-Branch
   */

  @Test
  public void test45()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "", "");
      List<ActionExpression> list0 = checkbox0._getActions();
      assertTrue(checkbox0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 46
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._setComponentId(Ljava/lang/String;)V: root-Branch
   * Goal 2. wheel.components.Component.wrapSelf()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test46()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Radio radio0 = new Radio(errorPage0, " on the page.", " on the page.");
      // Undeclared exception!
      try {
        Component component0 = radio0.wrapSelf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 47
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.date()Ljava/util/Calendar;: root-Branch
   * Goal 2. wheel.components.Component.dateFormat(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;: I49 Branch 141 IFEQ L2326 - true
   * Goal 3. wheel.components.Component.dateFormat(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;: I65 Branch 142 IFEQ L2328 - true
   * Goal 4. wheel.components.Component.dateFormat(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;: I79 Branch 143 IFEQ L2330 - true
   */

  @Test
  public void test47()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        String string0 = errorPage0.dateFormat("", (Object) errorPage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported type given for dateFormat. Supported types are: Date, Calendar, Long/long .
         //
      }
  }

  //Test case number: 48
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.remove(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test48()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Nattern");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.remove((Component) xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 49
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.var()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.var(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.h5()Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - true
   * Goal 5. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - true
   */

  @Test
  public void test49()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.var();
      Block block1 = (Block)errorPage0.h5();
      Label label0 = (Label)block1.var((Object) block0);
      ActionExpression actionExpression0 = label0._getAction();
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 50
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.td()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test50()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(":5A");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
      }
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.action(Ljava/lang/String;)Lwheel/components/ActionExpression;: root-Branch
   */

  @Test
  public void test51()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, (String) null, "su}");
      ActionExpression actionExpression0 = checkbox0.action((String) null);
      assertFalse(actionExpression0.isSubmissible());
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.img(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test52()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("useEntityRule");
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "useEntityRule", "useEntityRule");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.img("useEntityRule", "useEntityRule");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dt()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test53()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "G)$;<gzVX2]v}K>=d", "G)$;<gzVX2]v}K>=d");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.dt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 54
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - false
   * Goal 2. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - true
   * Goal 3. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - false
   * Goal 4. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I98 Branch 18 IFLE L150 - true
   * Goal 5. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I98 Branch 18 IFLE L150 - false
   * Goal 6. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I110 Branch 19 IFNE L150 - true
   * Goal 7. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I110 Branch 19 IFNE L150 - false
   */

  @Test
  public void test54()  throws Throwable  {
      Form form0 = new Form("Usage: java edu.stanford.nlp.trees.tregex.TregexPattern [-T] [-C] [-w] [-f] [-o] [-n] [-s] [-filter]  [-hf class] [-trf class] [-h handle]* pattern [filepath]");
      Form form1 = form0.renderHint((CharSequence) "Usage: java edu.stanford.nlp.trees.tregex.TregexPattern [-T] [-C] [-w] [-f] [-o] [-n] [-s] [-filter]  [-hf class] [-trf class] [-h handle]* pattern [filepath]");
      assertEquals("Usage: java edu.stanford.nlp.trees.tregex.TregexPattern [-T] [-C] [-w] [-f] [-o] [-n] [-s] [-filter]  [-hf class] [-trf class] [-h handle]* pattern [filepath]", form1.getComponentId());
  }

  //Test case number: 55
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - false
   */

  @Test
  public void test55()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.map("");
      Table table0 = new Table(errorPage0, "");
      assertEquals("Table_1", table0.getComponentId());
      
      Table table1 = table0.id("");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 56
  /*
   * 9 covered goals:
   * Goal 1. wheel.components.Component.label()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getChildren()Ljava/util/List;: I7 Branch 36 IFNONNULL L275 - true
   * Goal 3. wheel.components.Component._getChildren()Ljava/util/List;: I7 Branch 36 IFNONNULL L275 - false
   * Goal 4. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I25 Branch 110 IFEQ L1999 - true
   * Goal 5. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I25 Branch 110 IFEQ L1999 - false
   * Goal 6. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I41 Branch 111 IFLE L2002 - true
   * Goal 7. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I54 Branch 112 IFLE L2005 - true
   * Goal 8. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I74 Branch 113 IFNE L2010 - false
   * Goal 9. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 114 IFNE L2010 - true
   */

  @Test
  public void test56()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.label();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.find("V");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id V on the page.
         //
      }
  }

  //Test case number: 57
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.big()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - false
   */

  @Test
  public void test57()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, (String) null, (String) null);
      // Undeclared exception!
      try {
        Component component0 = checkbox0.big();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 58
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.small()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test58()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.small();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 59
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.pre(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test59()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("<6Lg:Y=QxLF?A7xFh");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.pre((Object) xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 60
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.el(Ljava/lang/String;)Lwheel/components/ElExpression;: root-Branch
   */

  @Test
  public void test60()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, (String) null, (String) null);
      String string0 = checkbox0.defaultTagName();
      Checkbox checkbox1 = (Checkbox)checkbox0.fieldBinding("input");
      assertTrue(checkbox1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 61
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - true
   * Goal 2. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - false
   */

  @Test
  public void test61()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "");
      // Undeclared exception!
      try {
        Table table1 = table0.id("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 62
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.br()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I15 Branch 7 IFNULL L102 - true
   */

  @Test
  public void test62()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Yr =W");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.br();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 63
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.selectModel()Lwheel/util/DynamicSelectModel;: root-Branch
   */

  @Test
  public void test63()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel0 = errorPage0.selectModel();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 64
  /*
   * 10 covered goals:
   * Goal 1. wheel.components.Component.map(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 46 IFNE L1642 - false
   * Goal 3. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I27 Branch 47 IFEQ L1642 - true
   * Goal 4. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - true
   * Goal 5. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I73 Branch 49 IFEQ L1652 - false
   * Goal 6. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I87 Branch 50 IFNE L1654 - false
   * Goal 7. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 51 IFNE L1654 - true
   * Goal 8. wheel.components.Component.getComponents()Ljava/util/Map;: I12 Branch 69 IFNE L1774 - true
   * Goal 9. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - true
   * Goal 10. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - true
   */

  @Test
  public void test64()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.map("featureCountThresho?d");
      Table table0 = new Table(block0, "featureCountThresho?d");
      Table table1 = table0.id("featureCountThresho?d");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 65
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.sub(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - false
   */

  @Test
  public void test65()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.sub((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 66
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.strike(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - false
   */

  @Test
  public void test66()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.strike((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 67
  /*
   * 11 covered goals:
   * Goal 1. wheel.components.Component._getXhtmlAttributes()Ljava/util/Map;: root-Branch
   * Goal 2. wheel.components.Component.tt(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.small(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.link()Lwheel/components/Component;: root-Branch
   * Goal 5. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - true
   * Goal 6. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - true
   * Goal 7. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - false
   * Goal 8. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I12 Branch 57 IFEQ L1701 - true
   * Goal 9. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - true
   * Goal 10. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - false
   * Goal 11. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I49 Branch 60 IFEQ L1711 - true
   */

  @Test
  public void test67()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.link();
      Radio radio0 = new Radio(errorPage0, "pattern", "pattern");
      String string0 = radio0.defaultDomEvent();
      assertFalse(radio0._isGeneratedId());
      
      Label label0 = (Label)block0.tt((Object) block0);
      Form form0 = new Form("onclick");
      assertEquals("onclick", form0.getComponentId());
      
      Long long0 = new Long((-3414L));
      Label label1 = (Label)label0.small((Object) long0);
      Form form1 = block0._getVisibleForm(true);
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 68
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component.div()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.textInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 3. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - false
   * Goal 4. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - false
   * Goal 5. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - true
   * Goal 6. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - true
   * Goal 7. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - false
   * Goal 8. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I37 Branch 55 IFEQ L1690 - true
   */

  @Test
  public void test68()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.div();
      // Undeclared exception!
      try {
        FormElement formElement0 = block0.textInput("|X~\"Eu");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 69
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.message(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.getEngine()Lwheel/IEngine;: root-Branch
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - true
   * Goal 4. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - false
   */

  @Test
  public void test69()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      SeqClassifierFlags seqClassifierFlags0 = new SeqClassifierFlags();
      Checkbox checkbox0 = new Checkbox(errorPage0, (String) null, "Viterbi");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.isInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 70
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.u()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test70()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.u();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 71
  /*
   * 53 covered goals:
   * Goal 1. wheel.components.Component.<init>(Lwheel/components/Component;)V: root-Branch
   * Goal 2. wheel.components.Component._setGeneratedId(Z)V: root-Branch
   * Goal 3. wheel.components.Component.p()Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.add(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 5. wheel.components.Component._isGeneratedId()Z: root-Branch
   * Goal 6. wheel.components.Component.getParent()Lwheel/components/Component;: root-Branch
   * Goal 7. wheel.components.Component.getComponentId()Ljava/lang/String;: root-Branch
   * Goal 8. wheel.components.Component.h1(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 9. wheel.components.Component.u(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 10. wheel.components.Component.afterAdd()V: root-Branch
   * Goal 11. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - false
   * Goal 12. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - false
   * Goal 13. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - true
   * Goal 14. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - false
   * Goal 15. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - false
   * Goal 16. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - true
   * Goal 17. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - false
   * Goal 18. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - false
   * Goal 19. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - false
   * Goal 20. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I22 Branch 12 IFNULL L142 - true
   * Goal 21. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - true
   * Goal 22. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - false
   * Goal 23. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - true
   * Goal 24. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I146 Branch 20 IFLE L157 - true
   * Goal 25. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I158 Branch 21 IFNE L157 - false
   * Goal 26. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - true
   * Goal 27. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - false
   * Goal 28. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I12 Branch 63 IFEQ L1731 - false
   * Goal 29. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - false
   * Goal 30. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - true
   * Goal 31. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - false
   * Goal 32. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - true
   * Goal 33. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - false
   * Goal 34. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - true
   * Goal 35. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - true
   * Goal 36. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - false
   * Goal 37. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - true
   * Goal 38. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - true
   * Goal 39. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - false
   * Goal 40. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I107 Branch 75 IFEQ L1822 - false
   * Goal 41. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I114 Branch 76 IFNE L1822 - false
   * Goal 42. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - false
   * Goal 43. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - true
   * Goal 44. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I173 Branch 80 IFEQ L1837 - true
   * Goal 45. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - true
   * Goal 46. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I280 Branch 85 IFEQ L1859 - true
   * Goal 47. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - true
   * Goal 48. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - false
   * Goal 49. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I19 Branch 122 IFEQ L2079 - true
   * Goal 50. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I46 Branch 123 IFEQ L2084 - true
   * Goal 51. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - true
   * Goal 52. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - false
   * Goal 53. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - true
   */

  @Test
  public void test71()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      SeqClassifierFlags seqClassifierFlags0 = new SeqClassifierFlags();
      Label label0 = (Label)errorPage0.u((Object) seqClassifierFlags0);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Label label1 = (Label)label0.h1((Object) dynamicSelectModel0);
      Table table0 = new Table(label1, "/u/nlp/data/dist.all.last");
      Table table1 = table0.renderHint((CharSequence) null);
      Block block0 = (Block)table0.p();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(table0._isGeneratedId());
      assertTrue(label1._isGeneratedId());
  }
}
