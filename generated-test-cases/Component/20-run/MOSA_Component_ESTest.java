/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 12 07:46:33 GMT 2015
 */

package wheel.components;

import static org.junit.Assert.*;
import org.junit.Test;
import edu.stanford.nlp.ling.CategoryWordTag;
import edu.stanford.nlp.ling.LabeledWord;
import edu.stanford.nlp.ling.TaggedWord;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.ISelectModel;
import wheel.components.Image;
import wheel.components.Label;
import wheel.components.NumberInput;
import wheel.components.RadioGroup;
import wheel.components.RenderableComponent;
import wheel.components.Select;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TextArea;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.end()Lwheel/components/Component;: I7 Branch 155 IFNONNULL L2384 - true
   */

  @Test
  public void test000()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      ErrorPage errorPage1 = (ErrorPage)table0.end();
      assertTrue(table0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 1
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I11 Branch 144 IFNULL L2344 - true
   * Goal 2. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I11 Branch 144 IFNULL L2344 - false
   * Goal 3. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I19 Branch 145 IFNE L2345 - true
   * Goal 4. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I40 Branch 146 IFLE L2350 - true
   * Goal 5. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I56 Branch 147 IFLE L2353 - true
   * Goal 6. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I71 Branch 148 IF_ICMPEQ L2356 - true
   * Goal 7. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I161 Branch 153 IFLE L2373 - true
   * Goal 8. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I173 Branch 154 IFEQ L2373 - true
   */

  @Test
  public void test001()  throws Throwable  {
      Form form0 = new Form("");
      Checkbox checkbox0 = new Checkbox(form0, (String) null, "<t)iE{FqN(q");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.end("<t)iE{FqN(q");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression '<t)iE{FqN(q'.
         //
      }
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - false
   * Goal 2. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I67 Branch 127 IFNULL L2110 - true
   * Goal 3. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I85 Branch 128 IFNULL L2113 - true
   * Goal 4. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I195 Branch 137 IFEQ L2130 - true
   * Goal 5. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I221 Branch 139 IFNONNULL L2136 - false
   */

  @Test
  public void test002()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "Could not end compoennt, already at root.", "");
      ElExpression elExpression0 = errorPage0.el("");
      Table table0 = new Table(hidden0, "");
      Table table1 = table0.renderHint((CharSequence) elExpression0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(table1._isGeneratedId());
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.up(I)Lwheel/components/Component;: I14 Branch 104 IF_ICMPGE L1954 - false
   */

  @Test
  public void test003()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, (String) null, (String) null, (CharSequence) null);
      FileInput fileInput0 = new FileInput(numberInput0, "AKiH7:W%6_jKT`*", "favori/>n");
      // Undeclared exception!
      try {
        FileInput fileInput1 = (FileInput)fileInput0.up(35);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - false
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I12 Branch 57 IFEQ L1701 - true
   */

  @Test
  public void test004()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, ":H^cjz6hR", ":H^cjz6hR");
      Form form0 = checkbox0._getVisibleForm(true);
      assertNull(form0);
  }

  //Test case number: 5
  @Test
  public void test005()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = errorPage0._getVisibleForm(false);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.checkbox(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I37 Branch 55 IFEQ L1690 - false
   */

  @Test
  public void test006()  throws Throwable  {
      Form form0 = new Form("");
      Checkbox checkbox0 = new Checkbox(form0, "null", "null");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.checkbox("#Tm n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.h1()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - false
   */

  @Test
  public void test007()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "Could not end compoennt, already at root.", "");
      Block block0 = (Block)errorPage0.h1();
      NumberInput numberInput0 = new NumberInput(hidden0, "/_8n%Mq", (String) null, "/_8n%Mq");
      assertTrue(numberInput0._isGeneratedId());
      
      NumberInput numberInput1 = (NumberInput)numberInput0.id("Could not end compoennt, already at root.");
      assertTrue(hidden0._isGeneratedId());
  }

  //Test case number: 8
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component.h4()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 46 IFNE L1642 - true
   * Goal 3. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - true
   * Goal 4. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I73 Branch 49 IFEQ L1652 - false
   * Goal 5. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I87 Branch 50 IFNE L1654 - false
   * Goal 6. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 51 IFNE L1654 - true
   * Goal 7. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I46 Branch 123 IFEQ L2084 - false
   * Goal 8. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I53 Branch 124 IFEQ L2084 - true
   */

  @Test
  public void test008()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      Block block0 = (Block)errorPage0.h4();
      NumberInput numberInput0 = new NumberInput(table0, ",", "#~D;JV+v;\"", (CharSequence) null);
      NumberInput numberInput1 = (NumberInput)numberInput0.id("");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(table0._isGeneratedId());
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 46 IFNE L1642 - false
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I27 Branch 47 IFEQ L1642 - true
   * Goal 3. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - false
   */

  @Test
  public void test009()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.id("@P");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getRenderableChildren()Ljava/util/List;: I13 Branch 37 IFNULL L288 - true
   */

  @Test
  public void test010()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      List<RenderableComponent> list0 = errorPage0._getRenderableChildren();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getChildren()Ljava/util/List;: I7 Branch 36 IFNONNULL L275 - false
   */

  @Test
  public void test011()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("qsI|@[U)");
      RadioGroup radioGroup0 = new RadioGroup(errorPage0, "-", "d", dynamicSelectModel1, (ElExpression) null);
      // Undeclared exception!
      try {
        radioGroup0.buildComponent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression qsI|@[U).values() to create a dynamic ISelectModel.
         //
      }
  }

  //Test case number: 12
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I6 Branch 23 IFNULL L189 - false
   * Goal 2. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I12 Branch 24 IFNE L189 - true
   * Goal 3. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I26 Branch 25 IFLE L192 - true
   * Goal 4. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I55 Branch 26 IF_ICMPLE L195 - false
   * Goal 5. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I61 Branch 27 IFNONNULL L195 - false
   * Goal 6. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - true
   * Goal 7. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - false
   */

  @Test
  public void test012()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String[] stringArray0 = new String[6];
      ErrorPage errorPage1 = (ErrorPage)errorPage0.attributes(stringArray0);
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - false
   * Goal 2. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - true
   * Goal 3. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - false
   * Goal 4. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I98 Branch 18 IFLE L150 - true
   * Goal 5. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I110 Branch 19 IFNE L150 - false
   */

  @Test
  public void test013()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      FileInput fileInput0 = new FileInput(errorPage0, "XM ME HY4RYqJRx\"", "dgJ5~ w");
      Table table0 = new Table(fileInput0, "I->2-@lG~'[LWFgm'");
      Table table1 = table0.renderHint((CharSequence) "dgJ5~ w");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 14
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - true
   * Goal 2. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - true
   * Goal 3. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I146 Branch 20 IFLE L157 - false
   * Goal 4. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I158 Branch 21 IFNE L157 - true
   */

  @Test
  public void test014()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "@P");
      Table table1 = table0.renderHint((CharSequence) null);
      Table table2 = table1.renderHint((CharSequence) null);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.code()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test015()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, "splitOnHead", "/UhK/}Zk");
      // Undeclared exception!
      try {
        Component component0 = hidden0.code();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.em(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test016()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = new Form("Could not evaluate finder expression ' ");
      Image image0 = new Image(errorPage0, "", "*CL,E*r08$*");
      // Undeclared exception!
      try {
        Component component0 = form0.em((Object) image0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.del(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.getComponents()Ljava/util/Map;: I12 Branch 69 IFNE L1774 - true
   * Goal 3. wheel.components.Component.getComponents()Ljava/util/Map;: I12 Branch 69 IFNE L1774 - false
   * Goal 4. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - true
   */

  @Test
  public void test017()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.del((Object) errorPage0);
      Map<String, Component> map0 = label0.getComponents();
      assertFalse(map0.isEmpty());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sup()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test018()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.sup();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.span()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test019()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.span();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.addFirst(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test020()  throws Throwable  {
      Form form0 = new Form("Th component can be added only to a TableRow.");
      // Undeclared exception!
      try {
        Component component0 = form0.addFirst((Component) form0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 100000
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.select(Ljava/lang/String;Lwheel/components/ISelectModel;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test021()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "dzmlOY/2mX");
      TableBlock tableBlock0 = table0.thead();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("eKh>16_QkqM+v;");
      DynamicSelectModel dynamicSelectModel0 = tableBlock0.selectModel();
      // Undeclared exception!
      try {
        FormElement formElement0 = xmlEntityRef0.select("Iqj{|EhMQ::n[", (ISelectModel) dynamicSelectModel0, (CharSequence) "{P[UU");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.p(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test022()  throws Throwable  {
      Form form0 = new Form("?`{{aq;@A,c7Ouup=");
      // Undeclared exception!
      try {
        Component component0 = form0.p((Object) "?`{{aq;@A,c7Ouup=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.label(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test023()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      FileInput fileInput0 = new FileInput(errorPage0, "XM ME HY4RYqJRx\"", "dgJ5~ w");
      // Undeclared exception!
      try {
        Component component0 = fileInput0.label((Object) "NMU#`(Wj");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.caption()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test024()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.caption();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.param(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test025()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = (Any)errorPage0.param((CharSequence) "Teh>16_QkqM+v", (CharSequence) " ,PQB(zC");
      assertTrue(any0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.reset(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test026()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.reset(" !<, (/^VB/ < ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ol()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test027()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.ol();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.wBlock(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test028()  throws Throwable  {
      Form form0 = new Form("Th component can be added only to a TableRow.");
      // Undeclared exception!
      try {
        Component component0 = form0.wBlock((CharSequence) "Th component can be added only to a TableRow.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.thead()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test029()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.thead();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
      }
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._setParent(Lwheel/components/Component;)V: root-Branch
   */

  @Test
  public void test030()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, (String) null, (String) null, (CharSequence) null);
      FileInput fileInput0 = new FileInput(numberInput0, "AKiH7:W%6_jKT`*", "favori/>n");
      fileInput0._setParent((Component) numberInput0);
      assertTrue(numberInput0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.textarea(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test031()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.textarea((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.u(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test032()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0);
      Label label0 = (Label)errorPage0.u((Object) tableBlock0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.table()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test033()  throws Throwable  {
      Form form0 = new Form("Th component can be added only to a TableRow.");
      // Undeclared exception!
      try {
        Component component0 = form0.table();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.radioGroup(Ljava/lang/String;Lwheel/components/ISelectModel;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test034()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel0 = errorPage0.selectModel();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.radioGroup("@P", (ISelectModel) dynamicSelectModel0, (ElExpression) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sub()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test035()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "u-k_2Sp[");
      // Undeclared exception!
      try {
        Component component0 = any0.sub();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.link()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test036()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.link();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.cite()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test037()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("{^");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.cite();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 38
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.message(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - true
   */

  @Test
  public void test038()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "o>pnG<9s4Af\"", "blockquote");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.required();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 39
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.strike()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test039()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.strike();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.noframes()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test040()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextArea textArea0 = new TextArea((Component) errorPage0, "", "F!`");
      // Undeclared exception!
      try {
        Component component0 = textArea0.noframes();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.i()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test041()  throws Throwable  {
      Form form0 = new Form("p*Pf`UWLsi]4;3Nx[");
      // Undeclared exception!
      try {
        Component component0 = form0.i();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 42
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.dd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - true
   */

  @Test
  public void test042()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, (String) null, (String) null, (CharSequence) null);
      Table table0 = new Table(errorPage0, (String) null);
      TableBlock tableBlock0 = table0.colgroup();
      Label label0 = new Label((Component) numberInput0, (Object) tableBlock0);
      Hidden hidden0 = new Hidden(label0, "", "");
      Label label1 = (Label)label0.dd((Object) hidden0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(hidden0._isGeneratedId());
  }

  //Test case number: 43
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.head()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test043()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "Could not end compoennt, already at root.", "");
      // Undeclared exception!
      try {
        Component component0 = hidden0.head();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 44
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tt()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test044()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, (String) null, "dzmlOY/2mX");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.tt();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.hr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test045()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = (Any)errorPage0.hr();
      assertTrue(any0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 46
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.script()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test046()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.script();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 47
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.hidden(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test047()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.hidden("dzmlOY/2mX");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 48
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.small(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test048()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression("NORMAL");
      RadioGroup radioGroup0 = new RadioGroup(errorPage0, "NORMAL", "", (ISelectModel) null, elExpression0);
      Label label0 = (Label)radioGroup0.small((Object) "NORMAL");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(radioGroup0._isGeneratedId());
  }

  //Test case number: 49
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h2()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test049()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("discolouring");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.h2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 50
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.htmlText(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - false
   */

  @Test
  public void test050()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, (String) null, "bA^F!-OtPF {");
      // Undeclared exception!
      try {
        Component component0 = hidden0.htmlText((Object) "bA^F!-OtPF {");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h5()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test051()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h5();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.bdo(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test052()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.bdo((CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dt()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test053()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dt();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 54
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.numberInput(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test054()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.numberInput("dzmOY/2mX", (CharSequence) "dzmOY/2mX");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 55
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.abbr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test055()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.abbr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 56
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.span(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - true
   * Goal 3. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - true
   * Goal 4. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - false
   * Goal 5. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I49 Branch 60 IFEQ L1711 - true
   */

  @Test
  public void test056()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.span((Object) errorPage0);
      Form form0 = label0._getVisibleForm(false);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 57
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.b(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test057()  throws Throwable  {
      TextArea textArea0 = new TextArea((Component) null, "ZF'&m:;%", "w");
      // Undeclared exception!
      try {
        Component component0 = textArea0.b((Object) "w");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 58
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.buttonInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test058()  throws Throwable  {
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      Select select0 = new Select((Component) null, "$+!9ov*0Dala'e,", "$+!9ov*0Dala'e,", stringSelectModel0, "$+!9ov*0Dala'e,");
      // Undeclared exception!
      try {
        FormElement formElement0 = select0.buttonInput("r-]<C+p>zvE}ny2(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 59
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.passwordInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test059()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.passwordInput((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 60
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.encode(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.getEngine()Lwheel/IEngine;: root-Branch
   */

  @Test
  public void test060()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "eKh>16_QkqM+v;");
      // Undeclared exception!
      try {
        String string0 = table0.encode("eKh>16_QkqM+v;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 61
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.var(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test061()  throws Throwable  {
      Form form0 = new Form("flavour");
      // Undeclared exception!
      try {
        Component component0 = form0.var((Object) form0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 62
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ins()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test062()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.ins();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 63
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tt(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test063()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.tt((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 64
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ul()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test064()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.ul();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 65
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.abbr(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test065()  throws Throwable  {
      Form form0 = new Form("?`{{aq;@A,c7Ouup=");
      // Undeclared exception!
      try {
        Component component0 = form0.abbr((Object) "?`{{aq;@A,c7Ouup=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 66
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.div()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test066()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.div();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 67
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.col()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test067()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.col();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Col component can be added only to a TableBlock.
         //
      }
  }

  //Test case number: 68
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.date()Ljava/util/Calendar;: root-Branch
   */

  @Test
  public void test068()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        String string0 = errorPage0.dateFormat((String) null, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to initialize SimpleDateFormat with pattern 'null'.
         //
      }
  }

  //Test case number: 69
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.em()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test069()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.em();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 70
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.nbsp()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test070()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.nbsp();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 71
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.getComponentName()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test071()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "%;c62+&nIA))G%Iugr", "@40I#Y++l{J_~");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "@40I#Y++l{J_~");
      checkbox0.serialize(stringBuilder0);
      assertEquals("@40I#Y++l{J_~%;c62+&nIA))G%Iugr$$Checkbox$$", stringBuilder0.toString());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 72
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.fieldset()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test072()  throws Throwable  {
      Form form0 = new Form("");
      Checkbox checkbox0 = new Checkbox(form0, "null", "null");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.fieldset();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 73
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.q(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test073()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.q((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 74
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.li()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test074()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      Block block0 = (Block)table0.li();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(table0._isGeneratedId());
  }

  //Test case number: 75
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.s(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test075()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      CategoryWordTag categoryWordTag0 = new CategoryWordTag("{PTUU", "cite", "]=QWq3ICe@HIp-Id");
      Label label0 = (Label)table0.s((Object) categoryWordTag0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(table0._isGeneratedId());
  }

  //Test case number: 76
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.address()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test076()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.address();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 77
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.imageSubmit(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test077()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, (String) null, (String) null, (CharSequence) null);
      // Undeclared exception!
      try {
        FormElement formElement0 = numberInput0.imageSubmit("nuA;", "~4");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 78
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test078()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.tr();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tr component can be added only to a TableBlock.
         //
      }
  }

  //Test case number: 79
  /*
   * 16 covered goals:
   * Goal 1. wheel.components.Component.actionBinding(Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.action(Ljava/lang/String;)Lwheel/components/ActionExpression;: root-Branch
   * Goal 3. wheel.components.Component.form(Ljava/lang/String;Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - true
   * Goal 5. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I7 Branch 29 IFNONNULL L239 - false
   * Goal 6. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I26 Branch 30 IFNULL L244 - true
   * Goal 7. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - false
   * Goal 8. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I14 Branch 34 IFLE L264 - false
   * Goal 9. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I26 Branch 35 IFNE L264 - true
   * Goal 10. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - true
   * Goal 11. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - false
   * Goal 12. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I147 Branch 79 IFNE L1828 - false
   * Goal 13. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - false
   * Goal 14. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I211 Branch 82 IFNONNULL L1845 - true
   * Goal 15. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I227 Branch 83 IFEQ L1848 - true
   * Goal 16. wheel.components.Component.hashCode()I: I7 Branch 103 IFNULL L1932 - false
   */

  @Test
  public void test079()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      TableBlock tableBlock0 = table0.thead();
      ActionExpression actionExpression0 = tableBlock0.action((String) null);
      Form form0 = (Form)tableBlock0.form("u-k_2Sp[", actionExpression0);
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 80
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.legend(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test080()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Hidden hidden0 = new Hidden(errorPage0, "Could not end compoennt, already at root.", "");
      Label label0 = (Label)errorPage0.legend((Object) hidden0);
      assertTrue(hidden0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 81
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dl()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test081()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dl();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 82
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.el(Ljava/lang/String;)Lwheel/components/ElExpression;: root-Branch
   * Goal 2. wheel.components.Component.checkboxGroup(Ljava/lang/String;Lwheel/components/ISelectModel;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   * Goal 3. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - false
   * Goal 4. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I37 Branch 55 IFEQ L1690 - true
   * Goal 5. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - false
   */

  @Test
  public void test082()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, (String) null, (String) null, (CharSequence) null);
      Object object0 = new Object();
      Table table0 = new Table(errorPage0, (String) null);
      Label label0 = new Label((Component) numberInput0, object0);
      Hidden hidden0 = new Hidden(label0, "", "");
      DynamicSelectModel dynamicSelectModel0 = table0.selectModel();
      ElExpression elExpression0 = hidden0.el("5T6kc!D816j9");
      // Undeclared exception!
      try {
        FormElement formElement0 = numberInput0.checkboxGroup((String) null, (ISelectModel) dynamicSelectModel0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 83
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.getAttributes()Ljava/util/Map;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - true
   * Goal 3. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - false
   */

  @Test
  public void test083()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("embeddings.size()=");
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "embeddings.size()=", "En oGyV(");
      Map<String, String> map0 = checkbox0.getAttributes();
      assertEquals("embeddings.size()=", xmlEntityRef0.getComponentId());
  }

  //Test case number: 84
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.button()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - true
   */

  @Test
  public void test084()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.button();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 85
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.placeholder(Ljava/lang/String;)Lwheel/components/Block;: root-Branch
   * Goal 2. wheel.components.Component.entity(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test085()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = errorPage0.placeholder("o(Alz");
      XmlEntityRef xmlEntityRef0 = (XmlEntityRef)block0.entity("leaned");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("leaned", xmlEntityRef0.getComponentId());
      assertFalse(block0._isGeneratedId());
  }

  //Test case number: 86
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.acronym(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test086()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      Label label0 = (Label)table0.acronym((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 87
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h3()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test087()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h3();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 88
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.s()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test088()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.s();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 89
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.requestFocus()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test089()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.requestFocus();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 90
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.dateInput(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - true
   * Goal 3. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - true
   */

  @Test
  public void test090()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.dateInput("CHECKCAST java/lang/CharSequence", "CHECKCAST java/lang/CharSequence");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 91
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.var()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test091()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.var();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 92
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sup(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test092()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.sup((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 93
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.small()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - true
   * Goal 3. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - false
   */

  @Test
  public void test093()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      TableBlock tableBlock0 = table0.colgroup();
      Block block0 = (Block)tableBlock0.small();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 94
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.frame(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.meta()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I15 Branch 7 IFNULL L102 - true
   * Goal 4. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I46 Branch 9 IFNE L107 - true
   * Goal 5. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - true
   */

  @Test
  public void test094()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.frame((CharSequence) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 95
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.kbd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test095()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(":DF!:8");
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.kbd((Object) errorPage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 96
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.samp()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test096()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.samp();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 97
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.map(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - true
   */

  @Test
  public void test097()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      Block block0 = (Block)table0.map("");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 98
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dfn(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test098()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      LabeledWord labeledWord0 = new LabeledWord();
      Label label0 = (Label)errorPage0.dfn((Object) labeledWord0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 99
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tfoot()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test099()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.tfoot();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tfoot component can be added only to a Table.
         //
      }
  }

  //Test case number: 100
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h6(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test100()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.h6((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 101
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.clasS(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test101()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.clasS((CharSequence) "dzmOY/2mX");
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
  }

  //Test case number: 102
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component.multiSelect(Ljava/lang/String;Lwheel/components/ISelectModel;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component.selectModel()Lwheel/util/DynamicSelectModel;: root-Branch
   * Goal 3. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - true
   * Goal 4. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - false
   * Goal 5. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - false
   * Goal 6. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - false
   * Goal 7. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - false
   */

  @Test
  public void test102()  throws Throwable  {
      Form form0 = new Form("7");
      DynamicSelectModel dynamicSelectModel0 = form0.selectModel();
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.multiSelect("7", (ISelectModel) dynamicSelectModel0, (CharSequence) "7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 103
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.legend()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test103()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.legend();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 104
  /*
   * 21 covered goals:
   * Goal 1. wheel.components.Component._getXhtmlAttributes()Ljava/util/Map;: root-Branch
   * Goal 2. wheel.components.Component._setComponentId(Ljava/lang/String;)V: root-Branch
   * Goal 3. wheel.components.Component.remove(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.h4(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 5. wheel.components.Component.wrapSelf()Lwheel/components/Component;: root-Branch
   * Goal 6. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - false
   * Goal 7. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - false
   * Goal 8. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - false
   * Goal 9. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - false
   * Goal 10. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - false
   * Goal 11. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - true
   * Goal 12. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - false
   * Goal 13. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - false
   * Goal 14. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - true
   * Goal 15. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - true
   * Goal 16. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - true
   * Goal 17. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - true
   * Goal 18. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - true
   * Goal 19. wheel.components.Component.equals(Ljava/lang/Object;)Z: I7 Branch 97 IF_ACMPNE L1920 - false
   * Goal 20. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I19 Branch 122 IFEQ L2079 - true
   * Goal 21. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I46 Branch 123 IFEQ L2084 - true
   */

  @Test
  public void test104()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.h4((Object) errorPage0);
      Label label1 = (Label)label0.wrapSelf();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 105
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.dt(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;)V: root-Branch
   */

  @Test
  public void test105()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TaggedWord taggedWord0 = new TaggedWord();
      Label label0 = (Label)errorPage0.dt((Object) taggedWord0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 106
  /*
   * 34 covered goals:
   * Goal 1. wheel.components.Component.dd()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._setGeneratedId(Z)V: root-Branch
   * Goal 3. wheel.components.Component.add(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component._isGeneratedId()Z: root-Branch
   * Goal 5. wheel.components.Component.getParent()Lwheel/components/Component;: root-Branch
   * Goal 6. wheel.components.Component.getComponentId()Ljava/lang/String;: root-Branch
   * Goal 7. wheel.components.Component.afterAdd()V: root-Branch
   * Goal 8. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - false
   * Goal 9. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - false
   * Goal 10. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - true
   * Goal 11. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - true
   * Goal 12. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - false
   * Goal 13. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I22 Branch 12 IFNULL L142 - true
   * Goal 14. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - false
   * Goal 15. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - true
   * Goal 16. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I146 Branch 20 IFLE L157 - true
   * Goal 17. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I158 Branch 21 IFNE L157 - false
   * Goal 18. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - false
   * Goal 19. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I12 Branch 63 IFEQ L1731 - false
   * Goal 20. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - false
   * Goal 21. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - true
   * Goal 22. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - true
   * Goal 23. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - true
   * Goal 24. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - false
   * Goal 25. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I107 Branch 75 IFEQ L1822 - false
   * Goal 26. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I114 Branch 76 IFNE L1822 - false
   * Goal 27. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - false
   * Goal 28. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - true
   * Goal 29. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I173 Branch 80 IFEQ L1837 - true
   * Goal 30. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - true
   * Goal 31. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I280 Branch 85 IFEQ L1859 - true
   * Goal 32. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - false
   * Goal 33. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - true
   * Goal 34. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - true
   */

  @Test
  public void test106()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dd();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }
}
