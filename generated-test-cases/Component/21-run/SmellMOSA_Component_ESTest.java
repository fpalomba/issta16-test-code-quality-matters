/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 12 01:53:16 GMT 2015
 */

package wheel.components;

import static org.junit.Assert.*;
import org.junit.Test;
import edu.stanford.nlp.ling.CoreLabel;
import edu.stanford.nlp.ling.TaggedWord;
import edu.stanford.nlp.ling.Word;
import edu.stanford.nlp.process.WordTokenFactory;
import java.text.DecimalFormat;
import java.util.List;
import java.util.Map;
import org.eclipse.core.internal.boot.PlatformURLHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.ISelectModel;
import wheel.components.Label;
import wheel.components.Link;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.RenderableComponent;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.TextInput;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.InitialFieldValue;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h3()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test000()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h3();
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.colgroup()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.end()Lwheel/components/Component;: I7 Branch 155 IFNONNULL L2384 - true
   */

  @Test
  public void test001()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h4();
      Checkbox checkbox0 = new Checkbox(errorPage0, "with", "with");
      ErrorPage errorPage1 = (ErrorPage)block0.end();
      // Undeclared exception!
      try {
        Component component0 = checkbox0.colgroup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Colgroup component can be added only to a Table.
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.span()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test002()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.span();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.up(I)Lwheel/components/Component;: I14 Branch 104 IF_ICMPGE L1954 - false
   */

  @Test
  public void test003()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.up(187);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.label(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test004()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.label((Object) "=k> D,HnnZC");
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dl()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test005()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dl();
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.wrapSelf()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test006()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "/u6>9&Z!2T^\"J>=S", "/u6>9&Z!2T^\"J>=S");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.wrapSelf();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.th()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test007()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.th();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Th component can be added only to a TableRow.
         //
      }
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.reset(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test008()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.reset((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tbody()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test009()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.tbody();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tbody component can be added only to a Table.
         //
      }
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.actionBinding(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.abbr(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test010()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = errorPage0._getAction();
      Label label0 = (Label)errorPage0.abbr((Object) null);
      Label label1 = (Label)label0.actionBinding("4C67Ww'w");
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h6()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test011()  throws Throwable  {
      Form form0 = new Form("_PA4mt[");
      // Undeclared exception!
      try {
        Component component0 = form0.h6();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.buttonInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component.style()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test012()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.style();
      DateInput dateInput0 = new DateInput(errorPage0, "gpj", "gpj", "gpj");
      // Undeclared exception!
      try {
        FormElement formElement0 = dateInput0.buttonInput("gpj");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dateInput(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test013()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.dateInput("-C\"e?6LPkbIa=o%", "-C\"e?6LPkbIa=o%");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.message(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   */

  @Test
  public void test014()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "Th component can be added only to a TableRow.", "Th component can be added only to a TableRow.");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.required();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._clear()V: I7 Branch 90 IFNULL L1892 - false
   * Goal 2. wheel.components.Component._clear()V: I46 Branch 93 IFNULL L1901 - false
   */

  @Test
  public void test015()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.i();
      errorPage0._clear();
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I146 Branch 20 IFLE L157 - false
   * Goal 2. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I158 Branch 21 IFNE L157 - true
   */

  @Test
  public void test016()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      Table table1 = table0.renderHint((CharSequence) null);
      Table table2 = table1.renderHint((CharSequence) null);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tt()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test017()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, (String) null, (String) null);
      // Undeclared exception!
      try {
        Component component0 = checkbox0.tt();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.findAll(Lwheel/components/ElExpression;)Ljava/util/List;: I25 Branch 115 IFEQ L2029 - true
   */

  @Test
  public void test018()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression("CNJyb*_d<?[!S9}3");
      List<Component> list0 = errorPage0.findAll(elExpression0);
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.script()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.radioGroup(Ljava/lang/String;Lwheel/components/ISelectModel;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test019()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.script();
      DynamicSelectModel dynamicSelectModel0 = errorPage0.selectModel();
      ElExpression elExpression0 = errorPage0.el("7*MOJ|");
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.radioGroup("7*MOJ|", (ISelectModel) dynamicSelectModel0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.label()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getRenderableChildren()Ljava/util/List;: I13 Branch 37 IFNULL L288 - true
   * Goal 3. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - false
   */

  @Test
  public void test020()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      List<RenderableComponent> list0 = errorPage0._getRenderableChildren();
      Block block0 = (Block)errorPage0.label();
      ElExpression elExpression0 = block0.el(" Bn clA52");
      // Undeclared exception!
      try {
        Component component0 = errorPage0.tt((Object) elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression  Bn clA52 in class wheel.ErrorPage
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.small(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test021()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("prx|e");
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "prx|e", "prx|e");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.small((Object) checkbox0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I25 Branch 110 IFEQ L1999 - false
   * Goal 2. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I41 Branch 111 IFLE L2002 - true
   * Goal 3. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I54 Branch 112 IFLE L2005 - true
   * Goal 4. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I54 Branch 112 IFLE L2005 - false
   * Goal 5. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I74 Branch 113 IFNE L2010 - true
   * Goal 6. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I74 Branch 113 IFNE L2010 - false
   * Goal 7. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 114 IFNE L2010 - true
   * Goal 8. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 114 IFNE L2010 - false
   */

  @Test
  public void test022()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.noframes();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.find("bp");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id bp on the page.
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.kbd()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test023()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "", "@/#}gA3upZQa&/rY");
      // Undeclared exception!
      try {
        Component component0 = fileInput0.kbd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.checkboxGroup(Ljava/lang/String;Lwheel/components/ISelectModel;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test024()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel0 = errorPage0.selectModel();
      ElExpression elExpression0 = new ElExpression("Unexpected input (many fields): ");
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.checkboxGroup("Unexpected input (many fields): ", (ISelectModel) dynamicSelectModel0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.end()Lwheel/components/Component;: I7 Branch 155 IFNONNULL L2384 - false
   */

  @Test
  public void test025()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.end();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not end compoennt, already at root.
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test026()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, (String) null, "wheel.components.Component");
      // Undeclared exception!
      try {
        Component component0 = fileInput0.tr();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tr component can be added only to a TableBlock.
         //
      }
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.form(Ljava/lang/String;Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.code()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test027()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.code();
      Form form0 = new Form("added");
      ActionExpression actionExpression0 = errorPage0.action("added");
      // Undeclared exception!
      try {
        Component component0 = form0.form("added", actionExpression0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.em()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test028()  throws Throwable  {
      Form form0 = new Form("Thead component can be added only to a Table.");
      // Undeclared exception!
      try {
        Component component0 = form0.em();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.checkbox(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test029()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.checkbox((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.submit(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test030()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.submit((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.textarea(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test031()  throws Throwable  {
      Form form0 = new Form("backgroundSymbol");
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.textarea("backgroundSymbol");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.samp(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test032()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      CoreLabel coreLabel0 = new CoreLabel(0);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.samp((Object) coreLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.a(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test033()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      Byte byte0 = new Byte((byte)0);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.a((Object) byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 34
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.date()Ljava/util/Calendar;: root-Branch
   * Goal 2. wheel.components.Component.dateFormat(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;: I49 Branch 141 IFEQ L2326 - true
   * Goal 3. wheel.components.Component.dateFormat(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;: I65 Branch 142 IFEQ L2328 - true
   * Goal 4. wheel.components.Component.dateFormat(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;: I79 Branch 143 IFEQ L2330 - true
   */

  @Test
  public void test034()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        String string0 = errorPage0.dateFormat("%d", (Object) errorPage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unsupported type given for dateFormat. Supported types are: Date, Calendar, Long/long .
         //
      }
  }

  //Test case number: 35
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I26 Branch 25 IFLE L192 - true
   * Goal 2. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I55 Branch 26 IF_ICMPLE L195 - false
   * Goal 3. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I61 Branch 27 IFNONNULL L195 - false
   * Goal 4. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - true
   * Goal 5. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - false
   */

  @Test
  public void test035()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String[] stringArray0 = new String[2];
      ErrorPage errorPage1 = (ErrorPage)errorPage0.attributes(stringArray0);
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.iframe()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test036()  throws Throwable  {
      TextInput textInput0 = new TextInput((Component) null, "OHLLJ6IDd49y", "OHLLJ6IDd49y");
      // Undeclared exception!
      try {
        Component component0 = textInput0.iframe();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.up(I)Lwheel/components/Component;: I14 Branch 104 IF_ICMPGE L1954 - true
   */

  @Test
  public void test037()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.up((-982));
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.table()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test038()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = (Table)errorPage0.table();
  }

  //Test case number: 39
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.param(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test039()  throws Throwable  {
      Form form0 = new Form("mVTi{8q%!");
      // Undeclared exception!
      try {
        Component component0 = form0.param((CharSequence) "mVTi{8q%!", (CharSequence) "mVTi{8q%!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.fieldset()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test040()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.fieldset();
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.fileInput(Ljava/lang/String;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test041()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression((String) null);
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.fileInput((String) null, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 42
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.samp()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test042()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.samp();
  }

  //Test case number: 43
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.em(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test043()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.em((Object) errorPage0);
  }

  //Test case number: 44
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - true
   */

  @Test
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[3];
      Form form0 = new Form(stringArray0[0]);
      assertEquals("wheel_components_Form", form0.getComponentId());
      
      Table table0 = null;
      try {
        table0 = new Table(form0, "xG]yzrXp)akz2:Y'(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.big(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test045()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "8a4|~=D");
      Block block0 = table0.placeholder("8a4|~=D");
      Label label0 = (Label)table0.big((Object) block0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 46
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getChildren()Ljava/util/List;: I7 Branch 36 IFNONNULL L275 - true
   * Goal 2. wheel.components.Component.findAll(Lwheel/components/ElExpression;)Ljava/util/List;: I25 Branch 115 IFEQ L2029 - false
   */

  @Test
  public void test046()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.ol();
      ElExpression elExpression0 = errorPage0.el("me8VF0");
      // Undeclared exception!
      try {
        List<Component> list0 = errorPage0.findAll(elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate finder expression ' me8VF0'
         //
      }
  }

  //Test case number: 47
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.address()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test047()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.address();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 48
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I71 Branch 148 IF_ICMPEQ L2356 - true
   * Goal 2. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I161 Branch 153 IFLE L2373 - true
   * Goal 3. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I173 Branch 154 IFEQ L2373 - true
   */

  @Test
  public void test048()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "", (String) null);
      // Undeclared exception!
      try {
        Component component0 = textInput0.end("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression ''.
         //
      }
  }

  //Test case number: 49
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I11 Branch 144 IFNULL L2344 - true
   * Goal 2. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I40 Branch 146 IFLE L2350 - true
   * Goal 3. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I56 Branch 147 IFLE L2353 - true
   * Goal 4. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I71 Branch 148 IF_ICMPEQ L2356 - false
   * Goal 5. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 149 IF_ICMPGE L2360 - false
   * Goal 6. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I109 Branch 150 IFLE L2363 - true
   * Goal 7. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I121 Branch 151 IFEQ L2363 - true
   * Goal 8. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I140 Branch 152 IF_ICMPNE L2369 - true
   */

  @Test
  public void test049()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "%d", "%d");
      // Undeclared exception!
      try {
        Component component0 = textInput0.end("+Qo(%]~1ecgG ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression '+Qo(%]~1ecgG '.
         //
      }
  }

  //Test case number: 50
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h1(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test050()  throws Throwable  {
      Form form0 = new Form("D,HnnZC");
      Submit submit0 = new Submit(form0, "D,HnnZC", "D,HnnZC");
      // Undeclared exception!
      try {
        Component component0 = submit0.h1((Object) "D,HnnZC");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.imageSubmit(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test051()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.imageSubmit("pare", "pare");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h5(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test052()  throws Throwable  {
      String[] stringArray0 = new String[3];
      Form form0 = new Form(stringArray0[0]);
      Integer integer0 = new Integer(0);
      Checkbox checkbox0 = new Checkbox(form0, "y", "y");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.h5((Object) integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getActions()Ljava/util/List;: root-Branch
   */

  @Test
  public void test053()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("TQble.");
      Checkbox checkbox0 = new Checkbox(xmlEntityRef0, "TQble.", "TQble.");
      checkbox0._clear();
      assertEquals("TQble.", xmlEntityRef0.getComponentId());
  }

  //Test case number: 54
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.strike()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test054()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.strike();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 55
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.body()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test055()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = PlatformURLHandler.FILE;
      Any any0 = new Any((Component) errorPage0, (CharSequence) "file");
      // Undeclared exception!
      try {
        Component component0 = any0.body();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 56
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dt()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test056()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dt();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 57
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.p()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test057()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.p();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 58
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.cite()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test058()  throws Throwable  {
      Form form0 = new Form("tnD");
      // Undeclared exception!
      try {
        Component component0 = form0.cite();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 59
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.tt(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.span(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.i()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test059()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.span((Object) errorPage0);
      Block block0 = (Block)errorPage0.i();
      Label label1 = (Label)errorPage0.tt((Object) errorPage0);
      assertTrue(label1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 60
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I11 Branch 144 IFNULL L2344 - false
   * Goal 2. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I19 Branch 145 IFNE L2345 - true
   * Goal 3. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I40 Branch 146 IFLE L2350 - false
   */

  @Test
  public void test060()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, "%O", "%O");
      TextInput textInput1 = new TextInput(textInput0, "%O", "%O");
      ErrorPage errorPage1 = (ErrorPage)textInput1.end("%O");
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
  }

  //Test case number: 61
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.var(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.pre(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test061()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.var((Object) errorPage0);
      Label label1 = (Label)label0.pre((Object) label0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label1._isGeneratedId());
  }

  //Test case number: 62
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.entity(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._setParent(Lwheel/components/Component;)V: root-Branch
   */

  @Test
  public void test062()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "LYW<Sl");
      TableBlock tableBlock0 = table0.colgroup();
      errorPage0._setParent((Component) tableBlock0);
      // Undeclared exception!
      try {
        Component component0 = table0.entity("LYW<Sl");
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 100000
         //
      }
  }

  //Test case number: 63
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.radio(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test063()  throws Throwable  {
      String[] stringArray0 = new String[3];
      Form form0 = new Form(stringArray0[0]);
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.radio("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 64
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.clasS(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.getAttributes()Ljava/util/Map;: root-Branch
   * Goal 3. wheel.components.Component.numberInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test064()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, "address", "address");
      String string0 = radio0.defaultTagName();
      Map<String, String> map0 = radio0.getAttributes();
      Checkbox checkbox0 = new Checkbox((Component) null, "address", "input");
      Radio radio1 = (Radio)radio0.clasS((CharSequence) "address");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.numberInput("address");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 65
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.noframes()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I25 Branch 110 IFEQ L1999 - true
   * Goal 3. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I46 Branch 123 IFEQ L2084 - false
   * Goal 4. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I53 Branch 124 IFEQ L2084 - true
   */

  @Test
  public void test065()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "address", "address");
      Block block0 = (Block)errorPage0.noframes();
      // Undeclared exception!
      try {
        Component component0 = checkbox0.find("address");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id address on the page.
         //
      }
  }

  //Test case number: 66
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.map(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.sub()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test066()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.sub();
      Block block1 = (Block)block0.map("%_");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 67
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.acronym(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test067()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "uarMl!*$+Iq");
      Checkbox checkbox0 = new Checkbox(any0, "uarMl!*$+Iq", "uarMl!*$+Iq");
      Text text0 = new Text(checkbox0, errorPage0);
      // Undeclared exception!
      try {
        Component component0 = text0.acronym((Object) errorPage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 68
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.dd()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.hidden(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test068()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dd();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "k> D,HnnZC");
      // Undeclared exception!
      try {
        FormElement formElement0 = any0.hidden("k> D,HnnZC");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 69
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ins()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test069()  throws Throwable  {
      Form form0 = new Form("G?\"W!t)}h");
      // Undeclared exception!
      try {
        Component component0 = form0.ins();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 70
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.requestFocus()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test070()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "f@c0lq<$S[B");
      Any any1 = (Any)any0.requestFocus();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(any1._isGeneratedId());
  }

  //Test case number: 71
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.u(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test071()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.u((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 72
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._clear()V: I20 Branch 91 IFNULL L1895 - true
   */

  @Test
  public void test072()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._clear();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 73
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.button()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.base(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test073()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, (String) null, (String) null);
      Block block0 = (Block)errorPage0.button();
      // Undeclared exception!
      try {
        Component component0 = textInput0.base((CharSequence) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 74
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.bdo(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test074()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "~8Tg.\u0007$.>v'+ c8", "~8Tg.\u0007$.>v'+ c8");
      NumberInput numberInput0 = new NumberInput(checkbox0, "~8Tg.\u0007$.>v'+ c8", "~8Tg.\u0007$.>v'+ c8");
      // Undeclared exception!
      try {
        Component component0 = numberInput0.bdo((CharSequence) "~8Tg.\u0007$.>v'+ c8");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 75
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.br()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test075()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = (Any)errorPage0.br();
      assertTrue(any0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 76
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.img(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test076()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, (String) null, "wO43fjxve)EU/R%es");
      String string0 = radio0.getComponentId();
      // Undeclared exception!
      try {
        Component component0 = radio0.img("wO43fjxve)EU/R%es", "wO43fjxve)EU/R%es");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 77
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component.form(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.acronym()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - true
   * Goal 4. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - true
   * Goal 5. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - false
   * Goal 6. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I147 Branch 79 IFNE L1828 - false
   * Goal 7. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I52 Branch 107 IFNONNULL L1976 - true
   * Goal 8. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I79 Branch 109 IFNONNULL L1981 - true
   */

  @Test
  public void test077()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("k> D,HnnZC");
      assertEquals("k> D,HnnZC", form0.getComponentId());
      
      Form form1 = (Form)errorPage0.get("k> D,HnnZC");
      Block block0 = (Block)errorPage0.acronym();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 78
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.strike(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.abbr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test078()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.abbr();
      TaggedWord taggedWord0 = new TaggedWord("Block_1");
      Label label0 = (Label)errorPage0.strike((Object) taggedWord0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 79
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.a()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addInternalRenderHint(Ljava/lang/String;)Lwheel/components/Component;: I7 Branch 89 IFNONNULL L1880 - false
   */

  @Test
  public void test079()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = (Link)errorPage0.a();
      Link link1 = (Link)link0.addInternalRenderHint((String) null);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(link1._isGeneratedId());
  }

  //Test case number: 80
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.strong(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test080()  throws Throwable  {
      String[] stringArray0 = new String[4];
      Form form0 = new Form(stringArray0[0]);
      // Undeclared exception!
      try {
        Component component0 = form0.strong((Object) form0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 81
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.area([Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I6 Branch 23 IFNULL L189 - false
   * Goal 3. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I12 Branch 24 IFNE L189 - true
   * Goal 4. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I26 Branch 25 IFLE L192 - false
   */

  @Test
  public void test081()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, (String) null, (String) null);
      Checkbox checkbox0 = new Checkbox(textInput0, (String) null, (String) null);
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try {
        Component component0 = checkbox0.area(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attributes must be given in name, value pairs.
         //
      }
  }

  //Test case number: 82
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I17 Branch 105 IFNE L1971 - true
   * Goal 2. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I52 Branch 107 IFNONNULL L1976 - false
   * Goal 3. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I58 Branch 108 IFNE L1976 - true
   * Goal 4. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I79 Branch 109 IFNONNULL L1981 - false
   */

  @Test
  public void test082()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.get("k> D,HnnC");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id 'k> D,HnnC'.
         //
      }
  }

  //Test case number: 83
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.remove(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test083()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "Thwi1XS", "Thwi1XS");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.remove((Component) checkbox0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 84
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.b()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.htmlText(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test084()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = new Block(errorPage0);
      Block block1 = (Block)errorPage0.b();
      Text text0 = (Text)errorPage0.htmlText((Object) block0);
      assertTrue(text0.isHtml());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 85
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.td()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test085()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
      }
  }

  //Test case number: 86
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.rawText(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test086()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Submit submit0 = new Submit(errorPage0, " in cla\"s ", " in cla\"s ");
      TextArea textArea0 = new TextArea((Component) submit0, " in cla\"s ", " in cla\"s ");
      // Undeclared exception!
      try {
        Component component0 = submit0.rawText((Object) textArea0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 87
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test087()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      String string0 = decimalFormat0.getPositivePrefix();
      Label label0 = (Label)errorPage0.dd((Object) "");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 88
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.div()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.ol()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test088()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      Block block0 = (Block)errorPage0.div();
      // Undeclared exception!
      try {
        Component component0 = text0.ol();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 89
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.legend()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test089()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.legend();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 90
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.multiSelect(Ljava/lang/String;Lwheel/components/ISelectModel;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test090()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.multiSelect("strong", (ISelectModel) dynamicSelectModel0, (CharSequence) "strong");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 91
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sub(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test091()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("U1e|:$*MX");
      String string0 = xmlEntityRef0.refName;
      InitialFieldValue initialFieldValue0 = new InitialFieldValue((Object) "U1e|:$*MX", "U1e|:$*MX");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.sub((Object) initialFieldValue0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 92
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.b(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test092()  throws Throwable  {
      Form form0 = new Form("script");
      // Undeclared exception!
      try {
        Component component0 = form0.b((Object) form0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 93
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.pre()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test093()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "ol", "ol");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.pre();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 94
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tfoot()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test094()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.tfoot();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tfoot component can be added only to a Table.
         //
      }
  }

  //Test case number: 95
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - true
   */

  @Test
  public void test095()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "i< cla\"! ");
      TableBlock tableBlock0 = table0.tbody();
      TableBlock tableBlock1 = tableBlock0.renderHint((CharSequence) "i< cla\"! ");
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("i< cla\"! ", table0.getComponentId());
  }

  //Test case number: 96
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.frame(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test096()  throws Throwable  {
      Form form0 = new Form("d;;8");
      // Undeclared exception!
      try {
        Component component0 = form0.frame((CharSequence) "d;;8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 97
  /*
   * 6 covered goals:
   * Goal 1. wheel.components.Component.fileInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component.i(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I27 Branch 47 IFEQ L1642 - false
   * Goal 4. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I211 Branch 82 IFNONNULL L1845 - true
   * Goal 5. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I227 Branch 83 IFEQ L1848 - true
   * Goal 6. wheel.components.Component.hashCode()I: I7 Branch 103 IFNULL L1932 - false
   */

  @Test
  public void test097()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.i((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      
      TextArea textArea0 = new TextArea((Component) errorPage0, "re-sLatal", "re-sLatal");
      ActionExpression actionExpression0 = textArea0.action("re-sLatal");
      Form form0 = new Form(errorPage0, "re-sLatal", actionExpression0);
      Form form1 = form0.id("re-sLatal");
      FileInput fileInput0 = (FileInput)form1.fileInput("re-sLatal");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 98
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.big()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test098()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("dfn");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.big();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 99
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.s()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test099()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.s();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 100
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.legend(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test100()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "q,:cg.KC1~", "q,:cg.KC1~");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.legend((Object) checkbox0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 101
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dfn()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test101()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "Wh#lc$6CGF@llagBzL", "Wh#lc$6CGF@llagBzL");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.dfn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 102
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - false
   * Goal 2. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I211 Branch 82 IFNONNULL L1845 - false
   */

  @Test
  public void test102()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextInput textInput0 = new TextInput(errorPage0, (String) null, (String) null);
      // Undeclared exception!
      try {
        Component component0 = errorPage0.addFirst((Component) textInput0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot add a form element. No surrounding form found.
         //
      }
  }

  //Test case number: 103
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.noscript()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test103()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.noscript();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 104
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.li(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test104()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "AphLHmlnq\"<!", "AphLHmlnq\"<!");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.li((Object) "AphLHmlnq\"<!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 105
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.object()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.equals(Ljava/lang/Object;)Z: I7 Branch 97 IF_ACMPNE L1920 - false
   */

  @Test
  public void test105()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.object();
      boolean boolean0 = block0.equals((Object) block0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(boolean0);
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 106
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dt(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test106()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, "\n\n@@123\nthis\nis\na\nsentence\n\n@@124\nThis\nis\nanother\n.\n\n@125\nThis\nis\nthe\nlast\n", "\n\n@@123\nthis\nis\na\nsentence\n\n@@124\nThis\nis\nanother\n.\n\n@125\nThis\nis\nthe\nlast\n");
      // Undeclared exception!
      try {
        Component component0 = hidden0.dt((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 107
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.hr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test107()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "FPxZ\"9!x-u[il", "FPxZ\"9!x-u[il");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.hr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 108
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.ins(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.col()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test108()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.ins((Object) errorPage0);
      // Undeclared exception!
      try {
        Component component0 = label0.col();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Col component can be added only to a TableBlock.
         //
      }
  }

  //Test case number: 109
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.del(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test109()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      WordTokenFactory wordTokenFactory0 = new WordTokenFactory();
      Word word0 = wordTokenFactory0.makeToken((String) null, (-507), (-507));
      Label label0 = (Label)errorPage0.del((Object) word0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 110
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h2(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test110()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "(d|9");
      Checkbox checkbox0 = new Checkbox(any0, "(d|9", "(d|9");
      Label label0 = (Label)errorPage0.h2((Object) checkbox0);
      assertTrue(any0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("(d|9", checkbox0.getComponentId());
  }

  //Test case number: 111
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.getComponentName()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test111()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, (String) null, (String) null);
      StringBuilder stringBuilder0 = new StringBuilder();
      checkbox0.serialize(stringBuilder0);
      assertEquals("null$$Checkbox$$", stringBuilder0.toString());
  }

  //Test case number: 112
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.text(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test112()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "+Qo(%]~1ecgG ", "+Qo(%]~1ecgG ");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.text((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 113
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.select(Ljava/lang/String;Lwheel/components/ISelectModel;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getChildren()Ljava/util/List;: I7 Branch 36 IFNONNULL L275 - false
   */

  @Test
  public void test113()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      List<Component> list0 = errorPage0._getChildren();
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.select("redirect", (ISelectModel) stringSelectModel0, (CharSequence) "redirect");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 114
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.h3(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.address(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test114()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.h3((Object) errorPage0);
      Label label1 = (Label)label0.address((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label1._isGeneratedId());
  }

  //Test case number: 115
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.li()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.del()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test115()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.del();
      Text text0 = new Text(errorPage0, errorPage0);
      // Undeclared exception!
      try {
        Component component0 = text0.li();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 116
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.action(Ljava/lang/String;)Lwheel/components/ActionExpression;: root-Branch
   * Goal 2. wheel.components.Component.q()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test116()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = errorPage0.action("useDictleng");
      Block block0 = (Block)errorPage0.q();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 117
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.encode(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.getEngine()Lwheel/IEngine;: root-Branch
   * Goal 3. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - true
   * Goal 4. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 51 IFNE L1654 - true
   */

  @Test
  public void test117()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = errorPage0.placeholder("\"i*B.tO@w0,&yG't");
      Block block1 = block0.id("\"i*B.tO@w0,&yG't");
      // Undeclared exception!
      try {
        String string0 = errorPage0.encode("\"i*B.tO@w0,&yG't");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 118
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - false
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I12 Branch 57 IFEQ L1701 - true
   * Goal 3. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - false
   * Goal 4. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I49 Branch 60 IFEQ L1711 - true
   */

  @Test
  public void test118()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "g(d|k");
      Form form0 = any0._getVisibleForm(true);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(any0._isGeneratedId());
  }

  //Test case number: 119
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.h6(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.nbsp()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I98 Branch 18 IFLE L150 - false
   * Goal 4. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I110 Branch 19 IFNE L150 - true
   * Goal 5. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - true
   */

  @Test
  public void test119()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.h6((Object) errorPage0);
      ErrorPage errorPage1 = (ErrorPage)errorPage0.nbsp();
      Checkbox checkbox0 = new Checkbox(errorPage1, "Failed to send redirect to url '", "Failed to send redirect to url '");
      ActionExpression actionExpression0 = label0._getAction();
      Any any0 = new Any((Component) checkbox0, (CharSequence) "Failed to send redirect to url '");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(any0._isGeneratedId());
  }

  //Test case number: 120
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.var()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.link()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test120()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.var();
      Block block1 = (Block)errorPage0.link();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block1._isGeneratedId());
  }

  //Test case number: 121
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dfn(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test121()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.dfn((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 122
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - true
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - true
   */

  @Test
  public void test122()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = errorPage0._getVisibleForm(false);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 123
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component._clear()V: I7 Branch 90 IFNULL L1892 - true
   * Goal 2. wheel.components.Component._clear()V: I20 Branch 91 IFNULL L1895 - false
   * Goal 3. wheel.components.Component._clear()V: I33 Branch 92 IFNULL L1898 - true
   * Goal 4. wheel.components.Component._clear()V: I46 Branch 93 IFNULL L1901 - true
   * Goal 5. wheel.components.Component._clear()V: I59 Branch 94 IFNULL L1904 - true
   * Goal 6. wheel.components.Component._clear()V: I72 Branch 95 IFNULL L1907 - true
   * Goal 7. wheel.components.Component._clear()V: I85 Branch 96 IFNULL L1910 - true
   */

  @Test
  public void test123()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      TableBlock tableBlock0 = table0.tbody();
      Any any0 = tableBlock0.col();
      any0._clear();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(table0._isGeneratedId());
  }

  //Test case number: 124
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.caption()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - true
   */

  @Test
  public void test124()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, (String) null);
      Table table1 = table0.renderHint((CharSequence) null);
      Checkbox checkbox0 = new Checkbox(table0, (String) null, (String) null);
      // Undeclared exception!
      try {
        Component component0 = checkbox0.caption();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
      }
  }

  //Test case number: 125
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.passwordInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - false
   */

  @Test
  public void test125()  throws Throwable  {
      Form form0 = new Form("3/zA,DR_h");
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.passwordInput("3/zA,DR_h");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 126
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ul()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test126()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.ul();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 127
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.placeholder(Ljava/lang/String;)Lwheel/components/Block;: root-Branch
   * Goal 2. wheel.components.Component.h4(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.h2()Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - true
   */

  @Test
  public void test127()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = errorPage0.placeholder("Lr");
      Block block1 = (Block)errorPage0.h2();
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Lr");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.h4((Object) xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 128
  /*
   * 6 covered goals:
   * Goal 1. wheel.components.Component.actionBinding(Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I7 Branch 29 IFNONNULL L239 - false
   * Goal 3. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I26 Branch 30 IFNULL L244 - true
   * Goal 4. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - false
   * Goal 5. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I14 Branch 34 IFLE L264 - false
   * Goal 6. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I26 Branch 35 IFNE L264 - true
   */

  @Test
  public void test128()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("Qo~");
      ErrorPage errorPage1 = (ErrorPage)errorPage0.actionBinding(actionExpression0);
      assertEquals("wheel_ErrorPage", actionExpression0.getSourceId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 129
  /*
   * 8 covered goals:
   * Goal 1. wheel.components.Component.blockquote()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.h4()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.numberInput(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   * Goal 4. wheel.components.Component.addFirst(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 5. wheel.components.Component.h1()Lwheel/components/Component;: root-Branch
   * Goal 6. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - false
   * Goal 7. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I37 Branch 55 IFEQ L1690 - true
   * Goal 8. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I173 Branch 80 IFEQ L1837 - false
   */

  @Test
  public void test129()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.blockquote();
      Block block1 = (Block)errorPage0.addFirst((Component) block0);
      Block block2 = (Block)errorPage0.h4();
      Block block3 = (Block)block2.h1();
      // Undeclared exception!
      try {
        FormElement formElement0 = block3.numberInput("27>3Oi?-Ty2`x[", (CharSequence) "27>3Oi?-Ty2`x[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 130
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.strong()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.u()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test130()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.u();
      Block block1 = (Block)errorPage0.strong();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block1._isGeneratedId());
  }

  //Test case number: 131
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.textInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - false
   * Goal 3. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - true
   * Goal 4. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - true
   */

  @Test
  public void test131()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.textInput("wrZT},K_dUF@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 132
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.code(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - true
   * Goal 3. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - false
   */

  @Test
  public void test132()  throws Throwable  {
      Form form0 = new Form("D,HnnZC");
      Submit submit0 = new Submit(form0, "D,HnnZC", "D,HnnZC");
      // Undeclared exception!
      try {
        Component component0 = form0.code((Object) submit0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 133
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sup()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test133()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.sup();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 134
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component.sup(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - false
   * Goal 3. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I73 Branch 49 IFEQ L1652 - false
   * Goal 4. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I87 Branch 50 IFNE L1654 - false
   * Goal 5. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 51 IFNE L1654 - false
   * Goal 6. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - true
   * Goal 7. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - true
   */

  @Test
  public void test134()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = PlatformURLHandler.FILE;
      Any any0 = new Any((Component) errorPage0, (CharSequence) "file");
      Link link0 = new Link(any0, "file");
      Label label0 = (Label)errorPage0.sup((Object) link0);
      Table table0 = new Table(link0, "file");
      TableBlock tableBlock0 = table0.thead();
      assertTrue(tableBlock0._isGeneratedId());
      
      TableBlock tableBlock1 = tableBlock0.id("file");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 135
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component._applyFormat(Ljava/lang/Object;)Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.thead()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.p(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - true
   */

  @Test
  public void test135()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.p((Object) errorPage0);
      String string0 = errorPage0._applyFormat((Object) label0);
      // Undeclared exception!
      try {
        Component component0 = errorPage0.thead();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
      }
  }

  //Test case number: 136
  /*
   * 6 covered goals:
   * Goal 1. wheel.components.Component._setComponentId(Ljava/lang/String;)V: root-Branch
   * Goal 2. wheel.components.Component.h5()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.head()Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.meta()Lwheel/components/Component;: root-Branch
   * Goal 5. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - true
   * Goal 6. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - false
   */

  @Test
  public void test136()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h5();
      // Undeclared exception!
      try {
        errorPage0.buildComponent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 137
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - false
   */

  @Test
  public void test137()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "g(d|k");
      Checkbox checkbox0 = new Checkbox(any0, "g(d|k", "g(d|k");
      String string0 = checkbox0.genericFieldErrorMessage;
      Any any1 = new Any((Component) checkbox0, (CharSequence) "fieldError");
      assertFalse(checkbox0._isGeneratedId());
      assertTrue(any1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 138
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component.small()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.selectModel()Lwheel/util/DynamicSelectModel;: root-Branch
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I15 Branch 7 IFNULL L102 - true
   * Goal 4. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I46 Branch 9 IFNE L107 - true
   * Goal 5. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - true
   * Goal 6. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - true
   * Goal 7. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - false
   */

  @Test
  public void test138()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "(d|k");
      DynamicSelectModel dynamicSelectModel0 = errorPage0.selectModel();
      // Undeclared exception!
      try {
        Component component0 = any0.small();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 139
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.kbd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - false
   */

  @Test
  public void test139()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.kbd((Object) null);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 140
  /*
   * 30 covered goals:
   * Goal 1. wheel.components.Component._getXhtmlAttributes()Ljava/util/Map;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;)V: root-Branch
   * Goal 3. wheel.components.Component.add(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component._isGeneratedId()Z: root-Branch
   * Goal 5. wheel.components.Component.afterAdd()V: root-Branch
   * Goal 6. wheel.components.Component.wBlock(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * Goal 7. wheel.components.Component.cite(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 8. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - true
   * Goal 9. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - true
   * Goal 10. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - false
   * Goal 11. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - true
   * Goal 12. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - false
   * Goal 13. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I98 Branch 18 IFLE L150 - true
   * Goal 14. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I110 Branch 19 IFNE L150 - false
   * Goal 15. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - false
   * Goal 16. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - false
   * Goal 17. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I12 Branch 63 IFEQ L1731 - false
   * Goal 18. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - true
   * Goal 19. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - true
   * Goal 20. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - true
   * Goal 21. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - false
   * Goal 22. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I107 Branch 75 IFEQ L1822 - false
   * Goal 23. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I114 Branch 76 IFNE L1822 - false
   * Goal 24. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - false
   * Goal 25. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - true
   * Goal 26. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I173 Branch 80 IFEQ L1837 - true
   * Goal 27. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - true
   * Goal 28. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I280 Branch 85 IFEQ L1859 - true
   * Goal 29. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - true
   * Goal 30. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - false
   */

  @Test
  public void test140()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.cite((Object) errorPage0);
      Block block0 = (Block)errorPage0.wBlock((CharSequence) "=k> D,HnnZC");
      assertTrue(block0._isGeneratedId());
      
      FileInput fileInput0 = new FileInput(label0, "=k> D,HnnZC", "=k> D,HnnZC");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(fileInput0._isGeneratedId());
  }

  //Test case number: 141
  /*
   * 32 covered goals:
   * Goal 1. wheel.components.Component._setGeneratedId(Z)V: root-Branch
   * Goal 2. wheel.components.Component.el(Ljava/lang/String;)Lwheel/components/ElExpression;: root-Branch
   * Goal 3. wheel.components.Component.getParent()Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.getComponentId()Ljava/lang/String;: root-Branch
   * Goal 5. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - false
   * Goal 6. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - false
   * Goal 7. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - true
   * Goal 8. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - false
   * Goal 9. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - false
   * Goal 10. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - true
   * Goal 11. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - false
   * Goal 12. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - false
   * Goal 13. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - false
   * Goal 14. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I22 Branch 12 IFNULL L142 - true
   * Goal 15. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - false
   * Goal 16. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - true
   * Goal 17. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I146 Branch 20 IFLE L157 - true
   * Goal 18. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I158 Branch 21 IFNE L157 - false
   * Goal 19. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - false
   * Goal 20. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 46 IFNE L1642 - false
   * Goal 21. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I27 Branch 47 IFEQ L1642 - true
   * Goal 22. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - true
   * Goal 23. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - false
   * Goal 24. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - false
   * Goal 25. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - false
   * Goal 26. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - true
   * Goal 27. wheel.components.Component.getComponents()Ljava/util/Map;: I12 Branch 69 IFNE L1774 - true
   * Goal 28. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - false
   * Goal 29. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I19 Branch 122 IFEQ L2079 - true
   * Goal 30. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I46 Branch 123 IFEQ L2084 - true
   * Goal 31. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - true
   * Goal 32. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - true
   */

  @Test
  public void test141()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "abel", (String) null);
      Checkbox checkbox1 = (Checkbox)checkbox0.fieldBinding(" i< cla\"s ");
      Table table0 = new Table(errorPage0, "abel");
      Table table1 = table0.renderHint((CharSequence) "abel");
      // Undeclared exception!
      try {
        Table table2 = table1.id("abel");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
