/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 11 23:54:37 GMT 2015
 */

package wheel.components;

import static org.junit.Assert.*;
import org.junit.Test;
import edu.stanford.nlp.ling.Tag;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.IEngine;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.ISelectModel;
import wheel.components.Image;
import wheel.components.Label;
import wheel.components.Link;
import wheel.components.NumberInput;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h4(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test00()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Tag tag0 = new Tag("b");
      Label label0 = (Label)errorPage0.h4((Object) tag0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.bdo(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test01()  throws Throwable  {
      Form form0 = new Form("B7D-/8A=jQl}4@r=3d");
      // Undeclared exception!
      try {
        Component component0 = form0.bdo((CharSequence) "B7D-/8A=jQl}4@r=3d");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.numberInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test02()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.numberInput("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h1(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test03()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, (String) null, "ul");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 0);
      // Undeclared exception!
      try {
        Component component0 = checkbox0.h1((Object) mockGregorianCalendar0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.i(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test04()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("b");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.i((Object) xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.legend()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test05()  throws Throwable  {
      DateInput dateInput0 = new DateInput((Component) null, "vMeB138", "vMeB138", "vMeB138");
      // Undeclared exception!
      try {
        Component component0 = dateInput0.legend();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.address()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test06()  throws Throwable  {
      Form form0 = new Form("loadPCTSegmenterPath");
      // Undeclared exception!
      try {
        Component component0 = form0.address();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 7
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.br()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test07()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = (Any)errorPage0.br();
      assertTrue(any0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.small(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test08()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.small((Object) "Could not find component with id ");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.radioGroup(Ljava/lang/String;Lwheel/components/ISelectModel;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test09()  throws Throwable  {
      Form form0 = new Form("B7D-/8A=jQl}4@r=3d");
      DynamicSelectModel dynamicSelectModel0 = form0.selectModel();
      ElExpression elExpression0 = new ElExpression("B7D-/8A=jQl}4@r=3d");
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.radioGroup("B7D-/8A=jQl}4@r=3d", (ISelectModel) dynamicSelectModel0, elExpression0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.actionBinding(Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test10()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        form0.buildComponent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.abbr(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      Form form0 = new Form("");
      ElExpression elExpression0 = new ElExpression("");
      // Undeclared exception!
      try {
        Component component0 = form0.abbr((Object) elExpression0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h5(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test12()  throws Throwable  {
      Form form0 = new Form("wG}oV;jy!a-%ID {-]d");
      // Undeclared exception!
      try {
        Component component0 = form0.h5((Object) "wG}oV;jy!a-%ID {-]d");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.text(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test13()  throws Throwable  {
      Form form0 = new Form("F%B[eJOhGHf");
      // Undeclared exception!
      try {
        Component component0 = form0.text((Object) form0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - false
   */

  @Test
  public void test14()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "Horrible bIg", "Horrible bIg");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.big((Object) errorPage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.textInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test15()  throws Throwable  {
      Form form0 = new Form("ZGuu ?TC");
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.textInput("ZGuu ?TC");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ol()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test16()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef((String) null);
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.ol();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h6()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "MdeY8MG*Rw.Ne", "MdeY8MG*Rw.Ne");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.h6();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.param(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.param((CharSequence) "", (CharSequence) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sup(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("Cut");
      Long long0 = new Long((-205L));
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.sup((Object) long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.submit(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.submit("hU0.[J");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.caption()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.caption();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - true
   */

  @Test
  public void test22()  throws Throwable  {
      Form form0 = new Form("FIRST");
      Checkbox checkbox0 = new Checkbox(form0, "FIRST", "FIRST");
      Checkbox checkbox1 = (Checkbox)checkbox0.attribute("FIRST", (CharSequence) "FIRST");
      assertEquals("FIRST", form0.getComponentId());
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.thead()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.thead();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Thead component can be added only to a Table.
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dateInput(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.dateInput("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.entity(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        Component component0 = form0.entity((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.dd()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - true
   */

  @Test
  public void test26()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0);
      Any any0 = tableBlock0.col();
      ActionExpression actionExpression0 = any0.action("");
      Block block0 = (Block)tableBlock0.dd();
      Any any1 = new Any((Component) any0, (CharSequence) actionExpression0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(any1._isGeneratedId());
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.meta()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      Form form0 = new Form("_pNo0eKW/~$Hlc(#7");
      // Undeclared exception!
      try {
        Component component0 = form0.meta();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.ul()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - true
   */

  @Test
  public void test28()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.ul();
      Label label0 = (Label)errorPage0.var((Object) block0);
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.strike()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      Form form0 = new Form("y'k#\"=E>}KkORaR,3L");
      // Undeclared exception!
      try {
        Component component0 = form0.strike();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.samp()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("b");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.samp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sup()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.sup();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.radio(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.radio("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.action(Ljava/lang/String;)Lwheel/components/ActionExpression;: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = errorPage0.action("Horrible bug");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.big()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test34()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.big();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 35
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.li(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I27 Branch 47 IFEQ L1642 - false
   */

  @Test
  public void test35()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("Tr component can be added only to a TableBlock.");
      Form form0 = new Form(errorPage0, "Tr component can be added only to a TableBlock.", actionExpression0);
      Label label0 = (Label)form0.li((Object) "Tr component can be added only to a TableBlock.");
      assertTrue(label0._isGeneratedId());
      
      Form form1 = form0.id("Tr component can be added only to a TableBlock.");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 36
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - false
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I49 Branch 60 IFEQ L1711 - true
   */

  @Test
  public void test36()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0);
      Form form0 = tableBlock0._getVisibleForm(false);
      assertTrue(tableBlock0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - false
   */

  @Test
  public void test37()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, ".O[J");
      // Undeclared exception!
      try {
        Table table1 = table0.id(".O[J");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 38
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I6 Branch 23 IFNULL L189 - false
   * Goal 2. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I12 Branch 24 IFNE L189 - true
   * Goal 3. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I26 Branch 25 IFLE L192 - true
   * Goal 4. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I55 Branch 26 IF_ICMPLE L195 - false
   * Goal 5. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I61 Branch 27 IFNONNULL L195 - false
   * Goal 6. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - true
   * Goal 7. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - false
   */

  @Test
  public void test38()  throws Throwable  {
      Form form0 = new Form("B7D-/8A=jQl}4@r=3d");
      String[] stringArray0 = new String[10];
      Form form1 = (Form)form0.attributes(stringArray0);
      assertEquals("B7D-/8A=jQl}4@r=3d", form0.getComponentId());
  }

  //Test case number: 39
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.cite()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test39()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.cite();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.fileInput(Ljava/lang/String;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test40()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression("Skipping transdtion %s at pos 0.%n");
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.fileInput("Skipping transdtion %s at pos 0.%n", elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.q()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test41()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.q();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 42
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.textarea(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test42()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.textarea("._P%RO\"H/g");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 43
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.reset(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - false
   */

  @Test
  public void test43()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.reset((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 44
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - true
   */

  @Test
  public void test44()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = errorPage0._getVisibleForm(false);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.del()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test45()  throws Throwable  {
      Form form0 = new Form("({l7I3{M");
      // Undeclared exception!
      try {
        Component component0 = form0.del();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 46
  /*
   * 10 covered goals:
   * Goal 1. wheel.components.Component.checkbox(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - false
   * Goal 3. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 51 IFNE L1654 - false
   * Goal 4. wheel.components.Component._clear()V: I7 Branch 90 IFNULL L1892 - true
   * Goal 5. wheel.components.Component._clear()V: I20 Branch 91 IFNULL L1895 - false
   * Goal 6. wheel.components.Component._clear()V: I33 Branch 92 IFNULL L1898 - true
   * Goal 7. wheel.components.Component._clear()V: I46 Branch 93 IFNULL L1901 - true
   * Goal 8. wheel.components.Component._clear()V: I59 Branch 94 IFNULL L1904 - true
   * Goal 9. wheel.components.Component._clear()V: I72 Branch 95 IFNULL L1907 - true
   * Goal 10. wheel.components.Component._clear()V: I85 Branch 96 IFNULL L1910 - true
   */

  @Test
  public void test46()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.samp((Object) errorPage0);
      label0._clear();
      Label label1 = (Label)label0.id("Horrible bug");
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.checkbox("Horrible bug");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 47
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.s()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test47()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "6LwRD_z<|f~");
      TableBlock tableBlock0 = table0.tfoot();
      Block block0 = (Block)tableBlock0.s();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 48
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.th()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test48()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.th();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Th component can be added only to a TableRow.
         //
      }
  }

  //Test case number: 49
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tt()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test49()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.tt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 50
  /*
   * 6 covered goals:
   * Goal 1. wheel.components.Component.actionBinding(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I7 Branch 29 IFNONNULL L239 - false
   * Goal 3. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I26 Branch 30 IFNULL L244 - true
   * Goal 4. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - false
   * Goal 5. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I14 Branch 34 IFLE L264 - false
   * Goal 6. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I26 Branch 35 IFNE L264 - true
   */

  @Test
  public void test50()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("6");
      XmlEntityRef xmlEntityRef1 = (XmlEntityRef)xmlEntityRef0.actionBinding("6");
      assertEquals("6", xmlEntityRef0.getComponentId());
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.base(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test51()  throws Throwable  {
      Form form0 = new Form("B7D-/8A=jQl}4@r=3d");
      // Undeclared exception!
      try {
        Component component0 = form0.base((CharSequence) "B7D-/8A=jQl}4@r=3d");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I37 Branch 55 IFEQ L1690 - false
   */

  @Test
  public void test52()  throws Throwable  {
      Form form0 = new Form("_wrapper");
      FileInput fileInput0 = new FileInput(form0, "_wrapper", "_wrapper");
      Checkbox checkbox0 = new Checkbox(fileInput0, "_wrapper", "_wrapper");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.passwordInput("_wrapper");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.colgroup()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test53()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("'.");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.colgroup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Colgroup component can be added only to a Table.
         //
      }
  }

  //Test case number: 54
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.passwordInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - false
   * Goal 3. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I37 Branch 55 IFEQ L1690 - true
   */

  @Test
  public void test54()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, ".O[J", ".O[J");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.passwordInput(".O[J");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 55
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.message(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   */

  @Test
  public void test55()  throws Throwable  {
      Form form0 = new Form("");
      Checkbox checkbox0 = new Checkbox(form0, "", ",CZmTe _/Pm");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.isInt();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 56
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.samp(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.u()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - false
   */

  @Test
  public void test56()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.u();
      Label label0 = (Label)errorPage0.samp((Object) errorPage0);
      NumberInput numberInput0 = new NumberInput(errorPage0, (String) null, (String) null, (CharSequence) null);
      assertTrue(numberInput0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 57
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I12 Branch 63 IFEQ L1731 - true
   * Goal 2. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - true
   */

  @Test
  public void test57()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        ErrorPage errorPage1 = (ErrorPage)errorPage0._getTopLevelComponent(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 58
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.img(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test58()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Image image0 = (Image)errorPage0.img("T", "T");
      assertTrue(image0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 59
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.style()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test59()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.style();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 60
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.span(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.strong(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - true
   */

  @Test
  public void test60()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.span((Object) errorPage0);
      Label label1 = (Label)errorPage0.strong((Object) errorPage0);
      assertTrue(label1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 61
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sub()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test61()  throws Throwable  {
      Form form0 = new Form("link");
      // Undeclared exception!
      try {
        Component component0 = form0.sub();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 62
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.kbd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test62()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef(".O[J");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.kbd((Object) ".O[J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 63
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.form(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test63()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        Component component0 = form0.form((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 64
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.selectModel()Lwheel/util/DynamicSelectModel;: root-Branch
   */

  @Test
  public void test64()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "  prepDep: ", "  prepDep: ");
      DynamicSelectModel dynamicSelectModel0 = checkbox0.selectModel();
      assertNotNull(dynamicSelectModel0);
  }

  //Test case number: 65
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.var(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.a(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - true
   */

  @Test
  public void test65()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("link");
      Form form0 = new Form(errorPage0, "link", actionExpression0);
      Label label0 = (Label)errorPage0.var((Object) actionExpression0);
      Link link0 = (Link)form0.a((Object) errorPage0);
      assertTrue(link0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(form0._isGeneratedId());
  }

  //Test case number: 66
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.fileInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test66()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.fileInput("6LcD_z<Sf3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 67
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.wBlock(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test67()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("b");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.wBlock((CharSequence) "b");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 68
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component._getXhtmlAttributes()Ljava/util/Map;: root-Branch
   * Goal 2. wheel.components.Component.big(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - false
   */

  @Test
  public void test68()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = new ActionExpression("'f0@h4,4>bV@{)zi9");
      Form form0 = new Form(errorPage0, "'f0@h4,4>bV@{)zi9", actionExpression0);
      Label label0 = (Label)form0.big((Object) form0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
      assertEquals("'f0@h4,4>bV@{)zi9", form0.getComponentId());
  }

  //Test case number: 69
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - true
   */

  @Test
  public void test69()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, "", "", "");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(numberInput0._isGeneratedId());
  }

  //Test case number: 70
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.legend(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test70()  throws Throwable  {
      Form form0 = new Form((String) null);
      Boolean boolean0 = new Boolean((String) null);
      // Undeclared exception!
      try {
        Component component0 = form0.legend((Object) boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 71
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.u(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test71()  throws Throwable  {
      Form form0 = new Form("");
      Tag tag0 = new Tag("");
      // Undeclared exception!
      try {
        Component component0 = form0.u((Object) tag0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 72
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.getEngine()Lwheel/IEngine;: root-Branch
   * Goal 2. wheel.components.Component.end()Lwheel/components/Component;: I7 Branch 155 IFNONNULL L2384 - false
   */

  @Test
  public void test72()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "Skipping transdtion %s at pos 0.%n");
      IEngine iEngine0 = table0.getEngine();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.end();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not end compoennt, already at root.
         //
      }
  }

  //Test case number: 73
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - false
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I12 Branch 57 IFEQ L1701 - true
   * Goal 3. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - true
   */

  @Test
  public void test73()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = errorPage0._getVisibleForm(true);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 74
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.button()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - false
   * Goal 3. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I12 Branch 63 IFEQ L1731 - false
   */

  @Test
  public void test74()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.button();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 75
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.el(Ljava/lang/String;)Lwheel/components/ElExpression;: root-Branch
   */

  @Test
  public void test75()  throws Throwable  {
      Form form0 = new Form("");
      ElExpression elExpression0 = form0.el("");
      assertEquals("wheel_components_Form", form0.getComponentId());
  }

  //Test case number: 76
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._applyFormat(Ljava/lang/Object;)Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - true
   */

  @Test
  public void test76()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        String string0 = form0._applyFormat((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 77
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.remove(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test77()  throws Throwable  {
      Form form0 = new Form("E=");
      // Undeclared exception!
      try {
        Component component0 = form0.remove((Component) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 78
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - true
   */

  @Test
  public void test78()  throws Throwable  {
      Form form0 = new Form("B7D-/8A=jQl}4@r=3d");
      Checkbox checkbox0 = null;
      try {
        checkbox0 = new Checkbox(form0, "B7D-/8A=jQl}4@r=3d", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 79
  /*
   * 35 covered goals:
   * Goal 1. wheel.components.Component._setGeneratedId(Z)V: root-Branch
   * Goal 2. wheel.components.Component.add(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component._isGeneratedId()Z: root-Branch
   * Goal 4. wheel.components.Component.getComponentId()Ljava/lang/String;: root-Branch
   * Goal 5. wheel.components.Component.afterAdd()V: root-Branch
   * Goal 6. wheel.components.Component.td()Lwheel/components/Component;: root-Branch
   * Goal 7. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - false
   * Goal 8. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I15 Branch 7 IFNULL L102 - true
   * Goal 9. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I46 Branch 9 IFNE L107 - true
   * Goal 10. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 46 IFNE L1642 - false
   * Goal 11. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I27 Branch 47 IFEQ L1642 - true
   * Goal 12. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - true
   * Goal 13. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I73 Branch 49 IFEQ L1652 - false
   * Goal 14. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I87 Branch 50 IFNE L1654 - false
   * Goal 15. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 51 IFNE L1654 - true
   * Goal 16. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - true
   * Goal 17. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - false
   * Goal 18. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - true
   * Goal 19. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - false
   * Goal 20. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - true
   * Goal 21. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - true
   * Goal 22. wheel.components.Component.getComponents()Ljava/util/Map;: I12 Branch 69 IFNE L1774 - true
   * Goal 23. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - true
   * Goal 24. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - true
   * Goal 25. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - false
   * Goal 26. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I107 Branch 75 IFEQ L1822 - false
   * Goal 27. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I114 Branch 76 IFNE L1822 - false
   * Goal 28. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - false
   * Goal 29. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - true
   * Goal 30. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I173 Branch 80 IFEQ L1837 - true
   * Goal 31. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - true
   * Goal 32. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I280 Branch 85 IFEQ L1859 - true
   * Goal 33. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - false
   * Goal 34. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I19 Branch 122 IFEQ L2079 - true
   * Goal 35. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I46 Branch 123 IFEQ L2084 - true
   */

  @Test
  public void test79()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableBlock tableBlock0 = new TableBlock(errorPage0);
      Any any0 = tableBlock0.col();
      Any any1 = (Any)any0.addRenderBefore((Component) tableBlock0);
      Table table0 = new Table(errorPage0, "Skippig transdtion %s at pos 0.%n");
      Table table1 = new Table(any1, "Skippig transdtion %s at pos 0.%n");
      Table table2 = table0.id("Skippig transdtion %s at pos 0.%n");
      // Undeclared exception!
      try {
        Component component0 = table2.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
      }
  }

  //Test case number: 80
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.imageSubmit(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - false
   * Goal 3. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - false
   * Goal 4. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - true
   * Goal 5. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - true
   */

  @Test
  public void test80()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.imageSubmit("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 81
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - true
   */

  @Test
  public void test81()  throws Throwable  {
      Form form0 = new Form("");
      FileInput fileInput0 = null;
      try {
        fileInput0 = new FileInput(form0, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 82
  /*
   * 10 covered goals:
   * Goal 1. wheel.components.Component.<init>(Lwheel/components/Component;)V: root-Branch
   * Goal 2. wheel.components.Component.ins(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - true
   * Goal 4. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - false
   * Goal 5. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - false
   * Goal 6. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - false
   * Goal 7. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - true
   * Goal 8. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - false
   * Goal 9. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - false
   * Goal 10. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - false
   */

  @Test
  public void test82()  throws Throwable  {
      Form form0 = new Form("link");
      FileInput fileInput0 = new FileInput(form0, "link", "link");
      // Undeclared exception!
      try {
        Component component0 = form0.ins((Object) fileInput0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 83
  /*
   * 18 covered goals:
   * Goal 1. wheel.components.Component.getComponentName()Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.getParent()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.addFirst(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - false
   * Goal 5. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - false
   * Goal 6. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - false
   * Goal 7. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I22 Branch 12 IFNULL L142 - true
   * Goal 8. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - false
   * Goal 9. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - true
   * Goal 10. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I146 Branch 20 IFLE L157 - true
   * Goal 11. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I158 Branch 21 IFNE L157 - false
   * Goal 12. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - true
   * Goal 13. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - false
   * Goal 14. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - true
   * Goal 15. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - false
   * Goal 16. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I41 Branch 73 IFEQ L1806 - true
   * Goal 17. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - true
   * Goal 18. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - true
   */

  @Test
  public void test83()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.addFirst((Component) errorPage0);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(TooManyResourcesException e) {
         //
         // Loop has been executed more times than the allowed 100000
         //
      }
  }
}
