/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 12 07:36:47 GMT 2015
 */

package wheel.components;

import static org.junit.Assert.*;
import org.junit.Test;
import edu.stanford.nlp.ling.CoreLabel;
import edu.stanford.nlp.ling.LabeledWord;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.CheckboxGroup;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.FileInput;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.Hidden;
import wheel.components.ISelectModel;
import wheel.components.Label;
import wheel.components.NumberInput;
import wheel.components.RenderableComponent;
import wheel.components.Submit;
import wheel.components.Table;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;
import wheel.util.StringSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I11 Branch 144 IFNULL L2344 - true
   */

  @Test
  public void test00()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.end("#VMB@s");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression '#VMB@s'.
         //
      }
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.up(I)Lwheel/components/Component;: I14 Branch 104 IF_ICMPGE L1954 - false
   */

  @Test
  public void test01()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Form form1 = (Form)form0.up(26);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.up(I)Lwheel/components/Component;: I14 Branch 104 IF_ICMPGE L1954 - true
   */

  @Test
  public void test02()  throws Throwable  {
      Form form0 = new Form("");
      Form form1 = (Form)form0.up(0);
      assertEquals("wheel_components_Form", form1.getComponentId());
      assertNotNull(form1);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.equals(Ljava/lang/Object;)Z: I7 Branch 97 IF_ACMPNE L1920 - true
   * Goal 2. wheel.components.Component.equals(Ljava/lang/Object;)Z: I16 Branch 98 IFNULL L1921 - false
   * Goal 3. wheel.components.Component.equals(Ljava/lang/Object;)Z: I24 Branch 99 IF_ACMPEQ L1921 - false
   */

  @Test
  public void test03()  throws Throwable  {
      TextArea textArea0 = new TextArea((Component) null, "h<:9d<l", "h<:9d<l");
      boolean boolean0 = textArea0.equals((Object) "h<:9d<l");
      assertFalse(boolean0);
  }

  //Test case number: 4
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component._clear()V: I7 Branch 90 IFNULL L1892 - true
   * Goal 2. wheel.components.Component._clear()V: I20 Branch 91 IFNULL L1895 - true
   * Goal 3. wheel.components.Component._clear()V: I33 Branch 92 IFNULL L1898 - true
   * Goal 4. wheel.components.Component._clear()V: I46 Branch 93 IFNULL L1901 - true
   * Goal 5. wheel.components.Component._clear()V: I59 Branch 94 IFNULL L1904 - true
   * Goal 6. wheel.components.Component._clear()V: I72 Branch 95 IFNULL L1907 - true
   * Goal 7. wheel.components.Component._clear()V: I85 Branch 96 IFNULL L1910 - true
   */

  @Test
  public void test04()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = errorPage0.action("UNZD=*");
      Form form0 = new Form(errorPage0, "edu.stanford.nlp.process.Morpha", actionExpression0);
      form0._clear();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.h3(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - true
   */

  @Test
  public void test05()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.dd((Object) "F8q >!E ^3DrG={R{?");
      Table table0 = new Table(errorPage0, "F8q >!E ^3DrG={R{?");
      Label label1 = (Label)errorPage0.h3((Object) table0);
      assertTrue(label1._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.getComponents()Ljava/util/Map;: I12 Branch 69 IFNE L1774 - false
   */

  @Test
  public void test06()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("sJz]Ba?rHPm500'jv");
      // Undeclared exception!
      try {
        Map<String, Component> map0 = xmlEntityRef0.getComponents();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - true
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - true
   * Goal 3. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - false
   * Goal 4. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I49 Branch 60 IFEQ L1711 - true
   */

  @Test
  public void test07()  throws Throwable  {
      Submit submit0 = new Submit((Component) null, "", "1'^=?&~S7bfM");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = submit0.el("f");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(submit0, "", "1'^=?&~S7bfM", stringSelectModel0, elExpression0);
      Form form0 = checkboxGroup0._getVisibleForm(false);
      assertNull(form0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - false
   */

  @Test
  public void test08()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "F8q >!E ^3DrG={R{?");
      // Undeclared exception!
      try {
        Table table1 = table0.id("F8q >!E ^3DrG={R{?");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.remove(Ljava/lang/String;)Lwheel/components/Component;: I9 Branch 42 IFLE L342 - true
   * Goal 2. wheel.components.Component.remove(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 43 IFNE L342 - false
   */

  @Test
  public void test09()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.s();
      // Undeclared exception!
      try {
        ErrorPage errorPage1 = (ErrorPage)errorPage0.remove("a%E6");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Component with id a%E6 does not exist.
         //
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getRenderableChildren()Ljava/util/List;: I13 Branch 37 IFNULL L288 - true
   */

  @Test
  public void test10()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      List<RenderableComponent> list0 = xmlEntityRef0._getRenderableChildren();
      assertEquals("wheel_components_XmlEntityRef", xmlEntityRef0.getComponentId());
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getChildren()Ljava/util/List;: I7 Branch 36 IFNONNULL L275 - false
   * Goal 2. wheel.components.Component.find(Ljava/lang/String;)Lwheel/components/Component;: I25 Branch 110 IFEQ L1999 - true
   */

  @Test
  public void test11()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.find("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id  on the page.
         //
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - true
   */

  @Test
  public void test12()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("D@ay7cE5x5Q");
      ActionExpression actionExpression0 = xmlEntityRef0._getAction();
      assertNull(actionExpression0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I61 Branch 27 IFNONNULL L195 - true
   */

  @Test
  public void test13()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("sJz]Ba?rHPm\u0000'jv");
      FileInput fileInput0 = new FileInput(xmlEntityRef0, "nIyi(Sy8NX", "\"Afqq@1)o/~N?");
      String[] stringArray0 = new String[8];
      FileInput fileInput1 = (FileInput)fileInput0.attributes(stringArray0);
      assertEquals("sJz]Ba?rHPm\u0000'jv", xmlEntityRef0.getComponentId());
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I26 Branch 25 IFLE L192 - false
   */

  @Test
  public void test14()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "");
      Table table0 = new Table(any0, "qT:NB\"");
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try {
        Any any1 = (Any)table0.area(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attributes must be given in name, value pairs.
         //
      }
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - false
   * Goal 2. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - true
   * Goal 3. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - false
   * Goal 4. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I98 Branch 18 IFLE L150 - true
   * Goal 5. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I110 Branch 19 IFNE L150 - false
   */

  @Test
  public void test15()  throws Throwable  {
      Form form0 = new Form("IvH UNZD=*");
      Form form1 = form0.renderHint((CharSequence) "IvH UNZD=*");
      assertEquals("IvH UNZD=*", form1.getComponentId());
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - true
   */

  @Test
  public void test16()  throws Throwable  {
      Form form0 = new Form("IvH UNZD=*");
      Form form1 = form0.renderHint((CharSequence) null);
      assertEquals("IvH UNZD=*", form0.getComponentId());
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.del(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test17()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("9L");
      FileInput fileInput0 = new FileInput(xmlEntityRef0, "+oW-gK7)H7", "-LCB-");
      // Undeclared exception!
      try {
        Component component0 = fileInput0.del((Object) xmlEntityRef0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h5(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test18()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.h5((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.q()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test19()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.q();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.td()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test20()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("sJz]Ba?rHPm500'jv");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
      }
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.p(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test21()  throws Throwable  {
      Hidden hidden0 = new Hidden((Component) null, (String) null, "usePhraseFeatures");
      Double double0 = new Double(Double.NaN);
      // Undeclared exception!
      try {
        Component component0 = hidden0.p((Object) double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.a(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test22()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("D@ay7cE5x5Q");
      Object object0 = new Object();
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.a(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.label(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test23()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("D@ay7cE5x5Q");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.label((Object) "D@ay7cE5x5Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.reset(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test24()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.reset("org.mvel.conversion.BigIntegerCH");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 25
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.selectModel()Lwheel/util/DynamicSelectModel;: root-Branch
   * Goal 2. wheel.components.Component.select(Ljava/lang/String;Lwheel/components/ISelectModel;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test25()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel0 = errorPage0.selectModel();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.select("UNZD=*", (ISelectModel) dynamicSelectModel0, (CharSequence) "UNZD=*");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 26
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._setParent(Lwheel/components/Component;)V: root-Branch
   */

  @Test
  public void test26()  throws Throwable  {
      Form form0 = new Form("");
      form0._setParent((Component) form0);
      assertEquals("wheel_components_Form", form0.getComponentId());
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.style()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test27()  throws Throwable  {
      Submit submit0 = new Submit((Component) null, "DeI$ZUrn6E", "DeI$ZUrn6E");
      // Undeclared exception!
      try {
        Component component0 = submit0.style();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.rawText(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test28()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      CoreLabel coreLabel0 = new CoreLabel(0);
      LabeledWord labeledWord0 = new LabeledWord("&(DFC/S;|TN0D", (edu.stanford.nlp.ling.Label) coreLabel0);
      Text text0 = (Text)errorPage0.rawText((Object) labeledWord0);
      assertTrue(text0.isCdata());
      assertTrue(text0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 29
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.el(Ljava/lang/String;)Lwheel/components/ElExpression;: root-Branch
   * Goal 2. wheel.components.Component.radioGroup(Ljava/lang/String;Lwheel/components/ISelectModel;Lwheel/components/ElExpression;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test29()  throws Throwable  {
      Submit submit0 = new Submit((Component) null, "", "1'^=?&~S7bfM");
      StringSelectModel stringSelectModel0 = new StringSelectModel();
      ElExpression elExpression0 = submit0.el("f");
      CheckboxGroup checkboxGroup0 = new CheckboxGroup(submit0, "", "1'^=?&~S7bfM", stringSelectModel0, elExpression0);
      // Undeclared exception!
      try {
        FormElement formElement0 = checkboxGroup0.radioGroup("1'^=?&~S7bfM", (ISelectModel) stringSelectModel0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 30
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.wrapSelf()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test30()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.wrapSelf();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.submit(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test31()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("{K;!]fo;0Ga07^u");
      // Undeclared exception!
      try {
        FormElement formElement0 = xmlEntityRef0.submit("{K;!]fo;0Ga07^u");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.big()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test32()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.big();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 33
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.message(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.getEngine()Lwheel/IEngine;: root-Branch
   */

  @Test
  public void test33()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        String string0 = errorPage0.message("UNZD=*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 34
  /*
   * 9 covered goals:
   * Goal 1. wheel.components.Component.dd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 46 IFNE L1642 - false
   * Goal 3. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I27 Branch 47 IFEQ L1642 - true
   * Goal 4. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - true
   * Goal 5. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I73 Branch 49 IFEQ L1652 - false
   * Goal 6. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I87 Branch 50 IFNE L1654 - false
   * Goal 7. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 51 IFNE L1654 - true
   * Goal 8. wheel.components.Component.getComponents()Ljava/util/Map;: I12 Branch 69 IFNE L1774 - true
   * Goal 9. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - true
   */

  @Test
  public void test34()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.dd((Object) "F8q >!E ^3DrG={R{?");
      assertTrue(label0._isGeneratedId());
      
      Table table0 = new Table(errorPage0, "F8q >!E ^3DrG={R{?");
      assertEquals("F8q >!E ^3DrG={R{?", table0.getComponentId());
      
      Table table1 = table0.id("F8q >!E ^3DrG={R{?");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._applyFormat(Ljava/lang/Object;)Ljava/lang/String;: root-Branch
   */

  @Test
  public void test35()  throws Throwable  {
      DateInput dateInput0 = new DateInput((Component) null, "q", "q", "q");
      // Undeclared exception!
      try {
        String string0 = dateInput0._applyFormat((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.u()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test36()  throws Throwable  {
      Form form0 = new Form("D@ay7cE5x5Q");
      // Undeclared exception!
      try {
        Component component0 = form0.u();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.hr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test37()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = (Any)errorPage0.hr();
      assertTrue(any0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 38
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.script()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - true
   * Goal 3. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - false
   * Goal 4. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - false
   */

  @Test
  public void test38()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      FileInput fileInput0 = new FileInput(errorPage0, "\"Afqq@1)o/~N?", "^A%>Acfh8F+Mgu=;UN");
      Checkbox checkbox0 = new Checkbox(fileInput0, "", "");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.script();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 39
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component._getXhtmlAttributes()Ljava/util/Map;: root-Branch
   * Goal 2. wheel.components.Component.li(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - false
   */

  @Test
  public void test39()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.li((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dt()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test40()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dt();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.numberInput(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test41()  throws Throwable  {
      NumberInput numberInput0 = new NumberInput((Component) null, "'H/%u]P'zlw,&A", "'H/%u]P'zlw,&A");
      FileInput fileInput0 = new FileInput(numberInput0, "?", "?");
      // Undeclared exception!
      try {
        FormElement formElement0 = fileInput0.numberInput("body", (CharSequence) "?");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 42
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.abbr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test42()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.abbr();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 43
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h4()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test43()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("sJz]Ba?rHPm500'jv");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.h4();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 44
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.span(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - false
   */

  @Test
  public void test44()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.span((Object) null);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.b()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test45()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.b();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 46
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.passwordInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - true
   */

  @Test
  public void test46()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "-de-lis", "Could not evaluate finder expression ' ");
      // Undeclared exception!
      try {
        FormElement formElement0 = checkbox0.passwordInput("noscript");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 47
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.var(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test47()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        Component component0 = form0.var((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 48
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.pre()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test48()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "'G", "mLx_g6");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.pre();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 49
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.colgroup()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test49()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.colgroup();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Colgroup component can be added only to a Table.
         //
      }
  }

  //Test case number: 50
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ul()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test50()  throws Throwable  {
      FileInput fileInput0 = new FileInput((Component) null, "UNZD=*", "UNZD=*");
      // Undeclared exception!
      try {
        Component component0 = fileInput0.ul();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.div()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test51()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.div();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.col()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test52()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.col();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Col component can be added only to a TableBlock.
         //
      }
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.date()Ljava/util/Calendar;: root-Branch
   */

  @Test
  public void test53()  throws Throwable  {
      DateInput dateInput0 = new DateInput((Component) null, "iK#Y\"mi}O&sP^#mWuT", "iK#Y\"mi}O&sP^#mWuT", "iK#Y\"mi}O&sP^#mWuT");
      // Undeclared exception!
      try {
        String string0 = dateInput0.dateFormat("i", (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to initialize SimpleDateFormat with pattern 'i'.
         //
      }
  }

  //Test case number: 54
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.em()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test54()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.em();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 55
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.nbsp()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test55()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.nbsp();
      assertEquals("wheel_ErrorPage", errorPage1.getComponentId());
  }

  //Test case number: 56
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.fieldset()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test56()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("UNZD=*");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.fieldset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 57
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.base(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test57()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = (Any)errorPage0.base((CharSequence) "&(DFC/S;|TN0D");
      assertTrue(any0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 58
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.li()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - true
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - true
   */

  @Test
  public void test58()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.li();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 59
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.address()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test59()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.address();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 60
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test60()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        Component component0 = form0.tr();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tr component can be added only to a TableBlock.
         //
      }
  }

  //Test case number: 61
  /*
   * 26 covered goals:
   * Goal 1. wheel.components.Component.actionBinding(Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.action(Ljava/lang/String;)Lwheel/components/ActionExpression;: root-Branch
   * Goal 3. wheel.components.Component.form(Ljava/lang/String;Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - true
   * Goal 5. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I7 Branch 29 IFNONNULL L239 - false
   * Goal 6. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I26 Branch 30 IFNULL L244 - true
   * Goal 7. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - false
   * Goal 8. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I14 Branch 34 IFLE L264 - false
   * Goal 9. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I26 Branch 35 IFNE L264 - true
   * Goal 10. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - true
   * Goal 11. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - true
   * Goal 12. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - false
   * Goal 13. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I37 Branch 55 IFEQ L1690 - true
   * Goal 14. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - false
   * Goal 15. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - true
   * Goal 16. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - true
   * Goal 17. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - true
   * Goal 18. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - false
   * Goal 19. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I147 Branch 79 IFNE L1828 - false
   * Goal 20. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - false
   * Goal 21. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I211 Branch 82 IFNONNULL L1845 - true
   * Goal 22. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I227 Branch 83 IFEQ L1848 - true
   * Goal 23. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - true
   * Goal 24. wheel.components.Component.hashCode()I: I7 Branch 103 IFNULL L1932 - false
   * Goal 25. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I19 Branch 122 IFEQ L2079 - true
   * Goal 26. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I46 Branch 123 IFEQ L2084 - true
   */

  @Test
  public void test61()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = errorPage0.action("( ]w5H)1eoYN:H%g*F5");
      Form form0 = (Form)errorPage0.form("( ]w5H)1eoYN:H%g*F5", actionExpression0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(form0._isGeneratedId());
  }

  //Test case number: 62
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.legend(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test62()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.legend((Object) errorPage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 63
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.samp(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test63()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.samp((Object) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 64
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.fileInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - true
   * Goal 3. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - false
   * Goal 4. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - false
   * Goal 5. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - false
   */

  @Test
  public void test64()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.fileInput("address");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 65
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._setComponentId(Ljava/lang/String;)V: root-Branch
   */

  @Test
  public void test65()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._setComponentId("value");
      assertTrue(errorPage0.isPage());
  }

  //Test case number: 66
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.button()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test66()  throws Throwable  {
      Form form0 = new Form("''");
      // Undeclared exception!
      try {
        Component component0 = form0.button();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 67
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.tbody()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - false
   */

  @Test
  public void test67()  throws Throwable  {
      NumberInput numberInput0 = new NumberInput((Component) null, "'H/%u]P'zlw,&A", "'H/%u]P'zlw,&A");
      // Undeclared exception!
      try {
        Component component0 = numberInput0.tbody();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tbody component can be added only to a Table.
         //
      }
  }

  //Test case number: 68
  /*
   * 10 covered goals:
   * Goal 1. wheel.components.Component.area([Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I15 Branch 7 IFNULL L102 - true
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I46 Branch 9 IFNE L107 - true
   * Goal 4. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I6 Branch 23 IFNULL L189 - false
   * Goal 5. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I12 Branch 24 IFNE L189 - true
   * Goal 6. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I26 Branch 25 IFLE L192 - true
   * Goal 7. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I55 Branch 26 IF_ICMPLE L195 - false
   * Goal 8. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I61 Branch 27 IFNONNULL L195 - false
   * Goal 9. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - true
   * Goal 10. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - false
   */

  @Test
  public void test68()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String[] stringArray0 = new String[2];
      Any any0 = (Any)errorPage0.area(stringArray0);
      assertTrue(any0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 69
  /*
   * 30 covered goals:
   * Goal 1. wheel.components.Component.clasS(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._setGeneratedId(Z)V: root-Branch
   * Goal 3. wheel.components.Component.s()Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.add(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 5. wheel.components.Component._isGeneratedId()Z: root-Branch
   * Goal 6. wheel.components.Component.getComponentId()Ljava/lang/String;: root-Branch
   * Goal 7. wheel.components.Component.afterAdd()V: root-Branch
   * Goal 8. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - true
   * Goal 9. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - false
   * Goal 10. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I22 Branch 12 IFNULL L142 - true
   * Goal 11. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - false
   * Goal 12. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - true
   * Goal 13. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I146 Branch 20 IFLE L157 - true
   * Goal 14. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I158 Branch 21 IFNE L157 - false
   * Goal 15. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - false
   * Goal 16. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I12 Branch 63 IFEQ L1731 - false
   * Goal 17. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - true
   * Goal 18. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - true
   * Goal 19. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - true
   * Goal 20. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - false
   * Goal 21. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I107 Branch 75 IFEQ L1822 - false
   * Goal 22. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I114 Branch 76 IFNE L1822 - false
   * Goal 23. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - false
   * Goal 24. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - true
   * Goal 25. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I173 Branch 80 IFEQ L1837 - true
   * Goal 26. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - true
   * Goal 27. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I280 Branch 85 IFEQ L1859 - true
   * Goal 28. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - false
   * Goal 29. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - true
   * Goal 30. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - true
   */

  @Test
  public void test69()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.s();
      Block block1 = (Block)block0.clasS((CharSequence) "Label_1");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 70
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.small()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test70()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("kfygQ.-KdFM");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.small();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 71
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.frame(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - true
   */

  @Test
  public void test71()  throws Throwable  {
      TextArea textArea0 = new TextArea((Component) null, "always", "UNZD=*");
      // Undeclared exception!
      try {
        Component component0 = textArea0.frame((CharSequence) "Label_1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 72
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.kbd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test72()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("");
      // Undeclared exception!
      try {
        Component component0 = xmlEntityRef0.kbd((Object) xmlEntityRef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 73
  /*
   * 9 covered goals:
   * Goal 1. wheel.components.Component.map(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - false
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - false
   * Goal 4. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - false
   * Goal 5. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - false
   * Goal 6. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - true
   * Goal 7. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - true
   * Goal 8. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - false
   * Goal 9. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - true
   */

  @Test
  public void test73()  throws Throwable  {
      Form form0 = new Form("0x&");
      // Undeclared exception!
      try {
        Component component0 = form0.map("0x&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 74
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h6(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test74()  throws Throwable  {
      Form form0 = new Form("0x&");
      // Undeclared exception!
      try {
        Component component0 = form0.h6((Object) "0x&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 75
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.legend()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - false
   */

  @Test
  public void test75()  throws Throwable  {
      Form form0 = new Form("");
      // Undeclared exception!
      try {
        Component component0 = form0.legend();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 76
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component.kbd()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;)V: root-Branch
   * Goal 3. wheel.components.Component.getParent()Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - false
   * Goal 5. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - true
   * Goal 6. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - false
   * Goal 7. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - false
   */

  @Test
  public void test76()  throws Throwable  {
      Form form0 = new Form("E?4 E)B");
      // Undeclared exception!
      try {
        Component component0 = form0.kbd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
