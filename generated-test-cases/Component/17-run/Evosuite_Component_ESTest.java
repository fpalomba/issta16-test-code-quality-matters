/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 12 13:40:30 GMT 2015
 */

package wheel.components;

import static org.junit.Assert.*;
import org.junit.Test;
import edu.stanford.nlp.ling.Word;
import edu.stanford.nlp.ling.WordLemmaTag;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.junit.runner.RunWith;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;
import org.xmlpull.v1.wrapper.XmlPullWrapperFactory;
import org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Block;
import wheel.components.Checkbox;
import wheel.components.Component;
import wheel.components.DateInput;
import wheel.components.ElExpression;
import wheel.components.Form;
import wheel.components.FormElement;
import wheel.components.ISelectModel;
import wheel.components.Label;
import wheel.components.Link;
import wheel.components.NumberInput;
import wheel.components.Radio;
import wheel.components.RadioGroup;
import wheel.components.RenderableComponent;
import wheel.components.Table;
import wheel.components.TableBlock;
import wheel.components.TableRow;
import wheel.components.Text;
import wheel.components.TextArea;
import wheel.components.XmlEntityRef;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Component_ESTest extends Component_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.end(Ljava/lang/String;)Lwheel/components/Component;: I11 Branch 144 IFNULL L2344 - true
   */

  @Test
  public void test000()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.end("U[iW~pxz-7[(/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No corresponding component found for end expression 'U[iW~pxz-7[(/'.
         //
      }
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getChildren()Ljava/util/List;: I7 Branch 36 IFNONNULL L275 - false
   * Goal 2. wheel.components.Component.findAll(Lwheel/components/ElExpression;)Ljava/util/List;: I25 Branch 115 IFEQ L2029 - true
   */

  @Test
  public void test001()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = errorPage0.el("IPN\"k");
      List<Component> list0 = errorPage0.findAll(elExpression0);
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I17 Branch 105 IFNE L1971 - true
   * Goal 2. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I52 Branch 107 IFNONNULL L1976 - false
   * Goal 3. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I58 Branch 108 IFNE L1976 - true
   * Goal 4. wheel.components.Component.get(Ljava/lang/String;)Lwheel/components/Component;: I79 Branch 109 IFNONNULL L1981 - false
   */

  @Test
  public void test002()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.get("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not find component with id ''.
         //
      }
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.up(I)Lwheel/components/Component;: I14 Branch 104 IF_ICMPGE L1954 - true
   */

  @Test
  public void test003()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.up(0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.equals(Ljava/lang/Object;)Z: I24 Branch 99 IF_ACMPEQ L1921 - false
   */

  @Test
  public void test004()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "7yI<z*}aaPIt5D0AHH", "7yI<z*}aaPIt5D0AHH");
      boolean boolean0 = errorPage0.equals((Object) checkbox0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.equals(Ljava/lang/Object;)Z: I7 Branch 97 IF_ACMPNE L1920 - true
   * Goal 2. wheel.components.Component.equals(Ljava/lang/Object;)Z: I16 Branch 98 IFNULL L1921 - false
   * Goal 3. wheel.components.Component.equals(Ljava/lang/Object;)Z: I24 Branch 99 IF_ACMPEQ L1921 - true
   * Goal 4. wheel.components.Component.equals(Ljava/lang/Object;)Z: I40 Branch 100 IFNULL L1925 - false
   * Goal 5. wheel.components.Component.equals(Ljava/lang/Object;)Z: I49 Branch 101 IFGT L1925 - false
   */

  @Test
  public void test005()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "7yI<z*}aaPIt5D0AHH", "7yI<z*}aaPIt5D0AHH");
      Checkbox checkbox1 = new Checkbox(errorPage0, (String) null, "mfJTb9|pgcqON");
      boolean boolean0 = checkbox1.equals((Object) checkbox0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._clear()V: I20 Branch 91 IFNULL L1895 - false
   */

  @Test
  public void test006()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, ",D6jYd';p'");
      TableBlock tableBlock0 = table0.colgroup();
      tableBlock0._clear();
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component._clear()V: I7 Branch 90 IFNULL L1892 - true
   * Goal 2. wheel.components.Component._clear()V: I20 Branch 91 IFNULL L1895 - true
   * Goal 3. wheel.components.Component._clear()V: I33 Branch 92 IFNULL L1898 - true
   * Goal 4. wheel.components.Component._clear()V: I46 Branch 93 IFNULL L1901 - true
   * Goal 5. wheel.components.Component._clear()V: I59 Branch 94 IFNULL L1904 - true
   * Goal 6. wheel.components.Component._clear()V: I72 Branch 95 IFNULL L1907 - true
   * Goal 7. wheel.components.Component._clear()V: I85 Branch 96 IFNULL L1910 - true
   */

  @Test
  public void test007()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0._clear();
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - false
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I12 Branch 57 IFEQ L1701 - true
   */

  @Test
  public void test008()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = errorPage0._getVisibleForm(true);
  }

  //Test case number: 9
  @Test
  public void test009()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = errorPage0._getVisibleForm(false);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - false
   */

  @Test
  public void test010()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "");
      // Undeclared exception!
      try {
        Table table1 = table0.id("QT!i7($");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 11
  /*
   * 11 covered goals:
   * Goal 1. wheel.components.Component.form(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.actionBinding(Lwheel/components/ActionExpression;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.remove(Ljava/lang/String;)Lwheel/components/Component;: I9 Branch 42 IFLE L342 - true
   * Goal 4. wheel.components.Component.remove(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 43 IFNE L342 - false
   * Goal 5. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - true
   * Goal 6. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - false
   * Goal 7. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I147 Branch 79 IFNE L1828 - false
   * Goal 8. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - false
   * Goal 9. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I211 Branch 82 IFNONNULL L1845 - true
   * Goal 10. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I227 Branch 83 IFEQ L1848 - true
   * Goal 11. wheel.components.Component.hashCode()I: I7 Branch 103 IFNULL L1932 - false
   */

  @Test
  public void test011()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Form form0 = (Form)errorPage0.form("I```|");
      // Undeclared exception!
      try {
        Component component0 = errorPage0.remove("h3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Component with id h3 does not exist.
         //
      }
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.samp()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getRenderableChildren()Ljava/util/List;: I13 Branch 37 IFNULL L288 - false
   * Goal 3. wheel.components.Component._getRenderableChildren()Ljava/util/List;: I26 Branch 38 IFEQ L289 - true
   * Goal 4. wheel.components.Component._getRenderableChildren()Ljava/util/List;: I26 Branch 38 IFEQ L289 - false
   * Goal 5. wheel.components.Component._getRenderableChildren()Ljava/util/List;: I38 Branch 39 IFEQ L290 - false
   */

  @Test
  public void test012()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.samp();
      List<RenderableComponent> list0 = errorPage0._getRenderableChildren();
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getRenderableChildren()Ljava/util/List;: I13 Branch 37 IFNULL L288 - true
   */

  @Test
  public void test013()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, ",D6jYd';p'");
      List<RenderableComponent> list0 = table0._getRenderableChildren();
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - true
   */

  @Test
  public void test014()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextArea textArea0 = new TextArea((Component) errorPage0, "link", "JL!nd|6MQUO");
      Link link0 = new Link(textArea0, "JL!nd|6MQUO");
      XmlPullParserFactory xmlPullParserFactory0 = XmlPullParserFactory.newInstance();
      XmlPullWrapperFactory xmlPullWrapperFactory0 = XmlPullWrapperFactory.newInstance(xmlPullParserFactory0);
      StaticXmlSerializerWrapper staticXmlSerializerWrapper0 = (StaticXmlSerializerWrapper)xmlPullWrapperFactory0.newSerializerWrapper();
      link0._renderActions((XmlSerializer) staticXmlSerializerWrapper0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I26 Branch 25 IFLE L192 - false
   */

  @Test
  public void test015()  throws Throwable  {
      Form form0 = new Form((String) null);
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try {
        Component component0 = form0.attributes(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Attributes must be given in name, value pairs.
         //
      }
  }

  //Test case number: 16
  /*
   * 12 covered goals:
   * Goal 1. wheel.components.Component.clasS(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._applyFormat(Ljava/lang/Object;)Ljava/lang/String;: root-Branch
   * Goal 3. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - true
   * Goal 4. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - true
   * Goal 5. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I146 Branch 20 IFLE L157 - false
   * Goal 6. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I158 Branch 21 IFNE L157 - true
   * Goal 7. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - false
   * Goal 8. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I67 Branch 127 IFNULL L2110 - true
   * Goal 9. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I85 Branch 128 IFNULL L2113 - true
   * Goal 10. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I195 Branch 137 IFEQ L2130 - false
   * Goal 11. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I210 Branch 138 IFNE L2133 - true
   * Goal 12. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I221 Branch 139 IFNONNULL L2136 - true
   */

  @Test
  public void test016()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "Could not end compoennt alreadyt root.");
      TableBlock tableBlock0 = table0.tfoot();
      ElExpression elExpression0 = new ElExpression("9");
      TableBlock tableBlock1 = tableBlock0.renderHint((CharSequence) elExpression0);
      TableBlock tableBlock2 = (TableBlock)tableBlock1.clasS((CharSequence) elExpression0);
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - false
   * Goal 2. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - true
   * Goal 3. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I82 Branch 17 IF_ICMPGE L147 - false
   * Goal 4. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I98 Branch 18 IFLE L150 - true
   * Goal 5. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I110 Branch 19 IFNE L150 - false
   */

  @Test
  public void test017()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = new Any((Component) errorPage0, (CharSequence) "Incompatible CRFClassifier: weight length mismatch for feature ");
  }

  //Test case number: 18
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - true
   */

  @Test
  public void test018()  throws Throwable  {
      XmlEntityRef xmlEntityRef0 = new XmlEntityRef("xeVghAsZRtDffSI");
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h1()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test019()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h1();
  }

  //Test case number: 20
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.cite(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test020()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.cite((Object) errorPage0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sup()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test021()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.sup();
  }

  //Test case number: 22
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.noscript()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test022()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.noscript();
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.q()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test023()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "");
      Block block0 = (Block)table0.q();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("Table_1", table0.getComponentId());
  }

  //Test case number: 24
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.span()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test024()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.span();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.td()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test025()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.td();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Td component can be added only to a TableRow.
         //
      }
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.addFirst(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I173 Branch 80 IFEQ L1837 - false
   */

  @Test
  public void test026()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "-u*8Abbh8s/?d");
      Table table1 = (Table)errorPage0.addFirst((Component) table0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.p(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test027()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "");
      Object object0 = new Object();
      Label label0 = (Label)table0.p(object0);
      assertTrue(table0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 28
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.a(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test028()  throws Throwable  {
      Radio radio0 = new Radio((Component) null, "Tbody component can be added only to a Table.", "Vi*6;4*>h+%]");
      // Undeclared exception!
      try {
        Component component0 = radio0.a((Object) "Tbody component can be added only to a Table.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ol()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test029()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.ol();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.big(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - false
   */

  @Test
  public void test030()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.big((Object) errorPage0);
      Table table0 = new Table(errorPage0, "");
      assertEquals("Table_1", table0.getComponentId());
      
      Table table1 = table0.id("QT!i7($");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.wBlock(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test031()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TableRow tableRow0 = new TableRow(errorPage0);
      Block block0 = (Block)tableRow0.th();
      assertTrue(tableRow0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.strong(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test032()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      WordLemmaTag wordLemmaTag0 = new WordLemmaTag();
      Label label0 = (Label)errorPage0.strong((Object) wordLemmaTag0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.selectModel()Lwheel/util/DynamicSelectModel;: root-Branch
   */

  @Test
  public void test033()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DynamicSelectModel dynamicSelectModel0 = errorPage0.selectModel();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._setParent(Lwheel/components/Component;)V: root-Branch
   */

  @Test
  public void test034()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "h1", "h1");
      checkbox0._setParent((Component) null);
      assertTrue(checkbox0.isEmpty());
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.address(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test035()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.address((Object) "xeVghAsZRtDffSI");
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component._getActions()Ljava/util/List;: root-Branch
   */

  @Test
  public void test036()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "7yI<z*}aaPIt5D0AHH", "7yI<z*}aaPIt5D0AHH");
      List<ActionExpression> list0 = checkbox0._getActions();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(checkbox0._isGeneratedId());
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.style()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test037()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, "'", "'", "JL!nd|6MQUO");
      // Undeclared exception!
      try {
        Component component0 = numberInput0.style();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.u(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test038()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, "id", "IPN\"k", "id");
      DateInput dateInput0 = new DateInput(numberInput0, "CRFClassifier:", "CRFClassifier:", "CRFClassifier:");
      Byte byte0 = new Byte((byte)0);
      // Undeclared exception!
      try {
        Component component0 = dateInput0.u((Object) byte0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 39
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.br()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test039()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = (Any)errorPage0.br();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(any0._isGeneratedId());
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.th()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test040()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "7yI<z*}aaPIt5D0AHH", "7yI<z*}aaPIt5D0AHH");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.th();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Th component can be added only to a TableRow.
         //
      }
  }

  //Test case number: 41
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.action(Ljava/lang/String;)Lwheel/components/ActionExpression;: root-Branch
   * Goal 2. wheel.components.Component.param(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - true
   */

  @Test
  public void test041()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ActionExpression actionExpression0 = errorPage0.action("");
      Any any0 = (Any)errorPage0.param((CharSequence) "<AU#FQ/C,", (CharSequence) actionExpression0);
      assertTrue(any0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 42
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.sub()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test042()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.sub();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 43
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.link()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test043()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.link();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 44
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.cite()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test044()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.cite();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 45
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.big()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test045()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.big();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 46
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.iframe()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test046()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = (Any)errorPage0.iframe();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(any0._isGeneratedId());
  }

  //Test case number: 47
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.message(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 2. wheel.components.Component.getEngine()Lwheel/IEngine;: root-Branch
   */

  @Test
  public void test047()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "for");
      TableBlock tableBlock0 = table0.tfoot();
      Any any0 = tableBlock0.col();
      Object[] objectArray0 = new Object[4];
      // Undeclared exception!
      try {
        String string0 = any0.message("Q!i7($", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 48
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.strike()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test048()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.strike();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 49
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.noframes()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test049()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.noframes();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 50
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test050()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, ",D6jYd';p'");
      TableBlock tableBlock0 = table0.colgroup();
      Label label0 = (Label)tableBlock0.dd((Object) tableBlock0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
      assertEquals(",D6jYd';p'", table0.getComponentId());
  }

  //Test case number: 51
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.head()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test051()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.title(",$S08");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 52
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tt()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test052()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.tt();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 53
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.u()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test053()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.u();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 54
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.hr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test054()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Any any0 = (Any)errorPage0.hr();
      assertTrue(any0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 55
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.hidden(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test055()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        FormElement formElement0 = errorPage0.hidden("Deprecated");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 56
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.small(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test056()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "7yI<z*}aaPIt5D0AHH", "7yI<z*}aaPIt5D0AHH");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.small((Object) errorPage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 57
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h2()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test057()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h2();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 58
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.sub(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - true
   */

  @Test
  public void test058()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "");
      TableBlock tableBlock0 = table0.tfoot();
      Any any0 = tableBlock0.col();
      Label label0 = (Label)errorPage0.sub((Object) any0);
      assertTrue(table0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 59
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.li(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test059()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.li((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 60
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h5()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test060()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h5();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 61
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h3(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test061()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      DateInput dateInput0 = new DateInput(errorPage0, "CRFClassifier:", "CRFClassifier:", "CRFClassifier:");
      Label label0 = (Label)errorPage0.h3((Object) dateInput0);
      assertEquals("CRFClassifier:", dateInput0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 62
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dt()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test062()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "Could not end compoennt alreadyt root.");
      Block block0 = (Block)table0.dt();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
      assertFalse(table0._isGeneratedId());
  }

  //Test case number: 63
  /*
   * 4 covered goals:
   * Goal 1. wheel.components.Component.numberInput(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/FormElement;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - true
   * Goal 3. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - false
   * Goal 4. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - false
   */

  @Test
  public void test063()  throws Throwable  {
      Form form0 = new Form((String) null);
      // Undeclared exception!
      try {
        FormElement formElement0 = form0.numberInput(",D6jYd';p'", (CharSequence) ",D6jYd';p'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 64
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.abbr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test064()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.abbr();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 65
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h4()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test065()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.h4();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 66
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.b()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - true
   */

  @Test
  public void test066()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "");
      Block block0 = (Block)table0.b();
      assertTrue(table0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 67
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.b(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test067()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.b((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 68
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.entity(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test068()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "7yI<z*}aaPIt5D0AHH", "7yI<z*}aaPIt5D0AHH");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.entity("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 69
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.var(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test069()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.var((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 70
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.pre()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test070()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.pre();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 71
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ins()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test071()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.ins();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 72
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.object()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test072()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.object();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 73
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.acronym()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test073()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.acronym();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 74
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ul()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test074()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.ul();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 75
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.abbr(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test075()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Short short0 = new Short((short) (-2322));
      Label label0 = (Label)errorPage0.abbr((Object) short0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 76
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.date()Ljava/util/Calendar;: root-Branch
   */

  @Test
  public void test076()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        String string0 = errorPage0.dateFormat("JL!nd|6MQUO", (Object) errorPage0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to initialize SimpleDateFormat with pattern 'JL!nd|6MQUO'.
         //
      }
  }

  //Test case number: 77
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.em()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test077()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.em();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 78
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.nbsp()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - false
   */

  @Test
  public void test078()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, "Could not end compoennt alreadyt root.");
      TableBlock tableBlock0 = table0.tfoot();
      TableBlock tableBlock1 = (TableBlock)tableBlock0.nbsp();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(tableBlock1._isGeneratedId());
      assertFalse(table0._isGeneratedId());
  }

  //Test case number: 79
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.fieldset()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test079()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.fieldset();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 80
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.strike(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test080()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = errorPage0.el((String) null);
      RadioGroup radioGroup0 = new RadioGroup(errorPage0, "Incompatible CRFClassifier: weight length mismatch for feature ", "y", (ISelectModel) null, elExpression0);
      Label label0 = (Label)radioGroup0.strike((Object) "h2");
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertEquals("y", radioGroup0.getComponentId());
  }

  //Test case number: 81
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.a()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test081()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Link link0 = (Link)errorPage0.a();
      assertTrue(link0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 82
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.address()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test082()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.address();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 83
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.imageSubmit(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   */

  @Test
  public void test083()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      TextArea textArea0 = new TextArea((Component) errorPage0, "link", "JL!nd|6MQUO");
      // Undeclared exception!
      try {
        FormElement formElement0 = textArea0.imageSubmit("JL!nd|6MQUO", "2A!sdG[gVbJV/Ls\"'@ ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }

  //Test case number: 84
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tr()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test084()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.tr();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tr component can be added only to a TableBlock.
         //
      }
  }

  //Test case number: 85
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.legend(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test085()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.legend((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 86
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dl()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test086()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.dl();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 87
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.samp(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test087()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.samp((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 88
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.img(Ljava/lang/String;Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test088()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      NumberInput numberInput0 = new NumberInput(errorPage0, "'", "'", "JL!nd|6MQUO");
      // Undeclared exception!
      try {
        Component component0 = numberInput0.img("format string %s then int %d", "format string %s then int %d");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 89
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.i(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I6 Branch 56 IFEQ L1701 - true
   * Goal 3. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - true
   * Goal 4. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I41 Branch 59 IFNULL L1710 - false
   * Goal 5. wheel.components.Component._getVisibleForm(Z)Lwheel/components/Form;: I49 Branch 60 IFEQ L1711 - true
   */

  @Test
  public void test089()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.i((Object) null);
      Form form0 = label0._getVisibleForm(false);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 90
  /*
   * 7 covered goals:
   * Goal 1. wheel.components.Component._setComponentId(Ljava/lang/String;)V: root-Branch
   * Goal 2. wheel.components.Component.remove(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.span(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 4. wheel.components.Component.wrapSelf()Lwheel/components/Component;: root-Branch
   * Goal 5. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - true
   * Goal 6. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - true
   * Goal 7. wheel.components.Component.equals(Ljava/lang/Object;)Z: I7 Branch 97 IF_ACMPNE L1920 - false
   */

  @Test
  public void test090()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.span((Object) errorPage0);
      Label label1 = (Label)label0.wrapSelf();
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 91
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.button()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test091()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.button();
      assertTrue(block0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 92
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.tbody()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test092()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.tbody();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tbody component can be added only to a Table.
         //
      }
  }

  //Test case number: 93
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.blockquote()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test093()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.blockquote();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 94
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.ins(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test094()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.ins((Object) errorPage0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 95
  /*
   * 3 covered goals:
   * Goal 1. wheel.components.Component.p()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - true
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - true
   */

  @Test
  public void test095()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, ",D6jYd';p'");
      Block block0 = (Block)table0.p();
      assertEquals(",D6jYd';p'", table0.getComponentId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 96
  /*
   * 9 covered goals:
   * Goal 1. wheel.components.Component.area([Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.el(Ljava/lang/String;)Lwheel/components/ElExpression;: root-Branch
   * Goal 3. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I6 Branch 23 IFNULL L189 - false
   * Goal 4. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I12 Branch 24 IFNE L189 - true
   * Goal 5. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I26 Branch 25 IFLE L192 - true
   * Goal 6. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I55 Branch 26 IF_ICMPLE L195 - false
   * Goal 7. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I61 Branch 27 IFNONNULL L195 - false
   * Goal 8. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - true
   * Goal 9. wheel.components.Component.attributes([Ljava/lang/String;)Lwheel/components/Component;: I80 Branch 28 IF_ICMPGE L198 - false
   */

  @Test
  public void test096()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = errorPage0.el((String) null);
      RadioGroup radioGroup0 = new RadioGroup(errorPage0, "Incompatible CRFClassifier: weight length mismatch for feature ", "y", (ISelectModel) null, elExpression0);
      String[] stringArray0 = new String[2];
      Any any0 = (Any)radioGroup0.area(stringArray0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertFalse(radioGroup0._isGeneratedId());
      assertTrue(any0._isGeneratedId());
  }

  //Test case number: 97
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.acronym(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test097()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 0, 2375, 1319, 0);
      Label label0 = (Label)errorPage0.acronym((Object) mockGregorianCalendar0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 98
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.h6()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - false
   */

  @Test
  public void test098()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Checkbox checkbox0 = new Checkbox(errorPage0, "7yI<z*}aaPIt5D0AHH", "7yI<z*}aaPIt5D0AHH");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.h6();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't add components to a component that is not an instance of IContainer.
         //
      }
  }

  //Test case number: 99
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.s()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test099()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.s();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 100
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.requestFocus()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test100()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.requestFocus();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 101
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.var()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test101()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.var();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 102
  /*
   * 2 covered goals:
   * Goal 1. wheel.components.Component.sup(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - false
   */

  @Test
  public void test102()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.sup((Object) null);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 103
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.small()Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test103()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.small();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 104
  /*
   * 6 covered goals:
   * Goal 1. wheel.components.Component.frame(Ljava/lang/CharSequence;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.meta()Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I15 Branch 7 IFNULL L102 - true
   * Goal 4. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;Ljava/lang/CharSequence;)V: I46 Branch 9 IFNE L107 - true
   * Goal 5. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - true
   * Goal 6. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - true
   */

  @Test
  public void test104()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try {
        Component component0 = errorPage0.frame((CharSequence) "X%+H'^Eeqr~|dJW");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  //Test case number: 105
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.kbd(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test105()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.kbd((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 106
  /*
   * 5 covered goals:
   * Goal 1. wheel.components.Component.map(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - true
   * Goal 3. wheel.components.Component.attribute(Ljava/lang/String;Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 22 IFNONNULL L175 - false
   * Goal 4. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - true
   * Goal 5. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - true
   */

  @Test
  public void test106()  throws Throwable  {
      Checkbox checkbox0 = new Checkbox((Component) null, "h1", "h1");
      // Undeclared exception!
      try {
        Component component0 = checkbox0.map(" does not exist.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No top level component found.
         //
      }
  }

  //Test case number: 107
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.dfn(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test107()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Object object0 = new Object();
      Label label0 = (Label)errorPage0.dfn(object0);
      assertTrue(label0._isGeneratedId());
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 108
  /*
   * 6 covered goals:
   * Goal 1. wheel.components.Component.actionBinding(Ljava/lang/String;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I7 Branch 29 IFNONNULL L239 - false
   * Goal 3. wheel.components.Component.addAction(Lwheel/components/ActionExpression;)V: I26 Branch 30 IFNULL L244 - true
   * Goal 4. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I7 Branch 33 IFNULL L264 - false
   * Goal 5. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I14 Branch 34 IFLE L264 - false
   * Goal 6. wheel.components.Component._getAction()Lwheel/components/ActionExpression;: I26 Branch 35 IFNE L264 - true
   */

  @Test
  public void test108()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ErrorPage errorPage1 = (ErrorPage)errorPage0.actionBinding(",D6jYd';p'");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 109
  /*
   * 1 covered goal:
   * Goal 1. wheel.components.Component.h6(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   */

  @Test
  public void test109()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Label label0 = (Label)errorPage0.h6((Object) errorPage0);
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(label0._isGeneratedId());
  }

  //Test case number: 110
  /*
   * 9 covered goals:
   * Goal 1. wheel.components.Component.h2(Ljava/lang/Object;)Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I21 Branch 46 IFNE L1642 - false
   * Goal 3. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I27 Branch 47 IFEQ L1642 - true
   * Goal 4. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I60 Branch 48 IFEQ L1649 - true
   * Goal 5. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I73 Branch 49 IFEQ L1652 - false
   * Goal 6. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I87 Branch 50 IFNE L1654 - false
   * Goal 7. wheel.components.Component.id(Ljava/lang/String;)Lwheel/components/Component;: I93 Branch 51 IFNE L1654 - true
   * Goal 8. wheel.components.Component.getComponents()Ljava/util/Map;: I12 Branch 69 IFNE L1774 - true
   * Goal 9. wheel.components.Component.getComponents()Ljava/util/Map;: I26 Branch 70 IFNONNULL L1777 - true
   */

  @Test
  public void test110()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Word word0 = Word.EMPTY;
      Label label0 = (Label)errorPage0.h2((Object) word0);
      assertTrue(label0._isGeneratedId());
      
      Table table0 = new Table(errorPage0, ",D6jYd';p'");
      Table table1 = table0.id(",D6jYd';p'");
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
  }

  //Test case number: 111
  /*
   * 12 covered goals:
   * Goal 1. wheel.components.Component.legend()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I15 Branch 3 IFNULL L84 - false
   * Goal 3. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I21 Branch 4 IFLE L84 - false
   * Goal 4. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I46 Branch 5 IFNE L89 - false
   * Goal 5. wheel.components.Component.<init>(Lwheel/components/Component;Ljava/lang/String;)V: I52 Branch 6 IFNE L89 - false
   * Goal 6. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - true
   * Goal 7. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I29 Branch 64 IFNULL L1736 - false
   * Goal 8. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I37 Branch 65 IFEQ L1737 - false
   * Goal 9. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - true
   * Goal 10. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I37 Branch 68 IFNULL L1760 - true
   * Goal 11. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I19 Branch 122 IFEQ L2079 - true
   * Goal 12. wheel.components.Component._wrapComponentId(Ljava/lang/String;)Ljava/lang/String;: I46 Branch 123 IFEQ L2084 - true
   */

  @Test
  public void test111()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Table table0 = new Table(errorPage0, ",D6jYd';p'");
      Block block0 = (Block)table0.legend();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
      assertEquals(",D6jYd';p'", table0.getComponentId());
  }

  //Test case number: 112
  /*
   * 23 covered goals:
   * Goal 1. wheel.components.Component.kbd()Lwheel/components/Component;: root-Branch
   * Goal 2. wheel.components.Component.add(Lwheel/components/Component;)Lwheel/components/Component;: root-Branch
   * Goal 3. wheel.components.Component._isGeneratedId()Z: root-Branch
   * Goal 4. wheel.components.Component.afterAdd()V: root-Branch
   * Goal 5. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I7 Branch 11 IFNONNULL L139 - false
   * Goal 6. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I22 Branch 12 IFNULL L142 - true
   * Goal 7. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I54 Branch 15 IFEQ L145 - false
   * Goal 8. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I63 Branch 16 IF_ICMPEQ L145 - true
   * Goal 9. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I146 Branch 20 IFLE L157 - true
   * Goal 10. wheel.components.Component.renderHint(Ljava/lang/CharSequence;)Lwheel/components/Component;: I158 Branch 21 IFNE L157 - false
   * Goal 11. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I7 Branch 62 IFEQ L1731 - false
   * Goal 12. wheel.components.Component._getTopLevelComponent(Z)Lwheel/components/StandaloneComponent;: I12 Branch 63 IFEQ L1731 - false
   * Goal 13. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I7 Branch 71 IFNE L1798 - true
   * Goal 14. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I28 Branch 72 IFEQ L1803 - true
   * Goal 15. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I92 Branch 74 IFNONNULL L1819 - false
   * Goal 16. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I107 Branch 75 IFEQ L1822 - false
   * Goal 17. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I114 Branch 76 IFNE L1822 - false
   * Goal 18. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I120 Branch 77 IFEQ L1822 - false
   * Goal 19. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I134 Branch 78 IFEQ L1825 - true
   * Goal 20. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I173 Branch 80 IFEQ L1837 - true
   * Goal 21. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I198 Branch 81 IFEQ L1842 - true
   * Goal 22. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I280 Branch 85 IFEQ L1859 - true
   * Goal 23. wheel.components.Component.addChild(Lwheel/components/Component;Z)Lwheel/components/Component;: I321 Branch 88 IFNONNULL L1868 - false
   */

  @Test
  public void test112()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Block block0 = (Block)errorPage0.kbd();
      assertEquals("wheel_ErrorPage", errorPage0.getComponentId());
      assertTrue(block0._isGeneratedId());
  }

  //Test case number: 113
  /*
   * 19 covered goals:
   * Goal 1. wheel.components.Component._getXhtmlAttributes()Ljava/util/Map;: root-Branch
   * Goal 2. wheel.components.Component.<init>(Lwheel/components/Component;)V: root-Branch
   * Goal 3. wheel.components.Component._setGeneratedId(Z)V: root-Branch
   * Goal 4. wheel.components.Component.fileInput(Ljava/lang/String;)Lwheel/components/FormElement;: root-Branch
   * Goal 5. wheel.components.Component.getParent()Lwheel/components/Component;: root-Branch
   * Goal 6. wheel.components.Component.getComponentId()Ljava/lang/String;: root-Branch
   * Goal 7. wheel.components.Component.<init>(Ljava/lang/String;)V: I10 Branch 1 IFNULL L61 - false
   * Goal 8. wheel.components.Component.<init>(Ljava/lang/String;)V: I16 Branch 2 IFNE L61 - false
   * Goal 9. wheel.components.Component.create()Lwheel/components/ComponentCreator;: I7 Branch 40 IFNONNULL L299 - false
   * Goal 10. wheel.components.Component._getRenderHints()Ljava/util/List;: I7 Branch 41 IFNONNULL L310 - false
   * Goal 11. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I6 Branch 52 IFEQ L1684 - false
   * Goal 12. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I12 Branch 53 IFEQ L1684 - true
   * Goal 13. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - true
   * Goal 14. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I29 Branch 54 IFNULL L1689 - false
   * Goal 15. wheel.components.Component._getForm(Z)Lwheel/components/Form;: I37 Branch 55 IFEQ L1690 - true
   * Goal 16. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I11 Branch 66 IFNONNULL L1753 - false
   * Goal 17. wheel.components.Component.getPage()Lwheel/components/StandaloneComponent;: I19 Branch 67 IFNE L1754 - true
   * Goal 18. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I6 Branch 125 IFNONNULL L2100 - true
   * Goal 19. wheel.components.Component.eval(Ljava/lang/Object;)Ljava/lang/String;: I18 Branch 126 IFEQ L2103 - true
   */

  @Test
  public void test113()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Text text0 = new Text(errorPage0, errorPage0);
      // Undeclared exception!
      try {
        FormElement formElement0 = text0.fileInput(" is: ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
      }
  }
}
