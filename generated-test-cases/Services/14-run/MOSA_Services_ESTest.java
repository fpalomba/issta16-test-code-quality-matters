/*
 * This file was automatically generated by EvoSuite
 * Sat Dec 19 06:39:52 GMT 2015
 */


import static org.junit.Assert.*;
import org.junit.Test;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. Services.testHTTPS(Ljava/lang/String;I)LServices$HTTP_Result;: I103 Branch 2 IFNULL L82 - true
   * Goal 2. Services.testHTTPS(Ljava/lang/String;I)LServices$HTTP_Result;: I103 Branch 2 IFNULL L82 - false
   */

  @Test
  public void test0()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://:0");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, "aXqTGb");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", 0);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals((-1), services_HTTP_Result0.code);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * Goal 1. Services$SIMPLE_Result.<init>()V: root-Branch
   * Goal 2. Services$SIMPLE_Result.reset()V: root-Branch
   * Goal 3. Services$SIMPLE_Result.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test1()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3((String) null, 761);
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * Goal 1. Services$HTTP_Result.reset()V: root-Branch
   * Goal 2. Services$HTTP_Result.<init>()V: root-Branch
   * Goal 3. Services$HTTP_Result.toString()Ljava/lang/String;: root-Branch
   */

  @Test
  public void test2()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("mAL%xLQ%U/$V2N$", 0);
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: mAL%xLQ%U/$V2N$) **.\n****", string0);
  }

  //Test case number: 3
  /*
   * 1 covered goal:
   * Goal 1. Services.<init>()V: root-Branch
   */

  @Test
  public void test3()  throws Throwable  {
      Services services0 = new Services();
  }
}
